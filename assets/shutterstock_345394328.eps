%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1086_essential_amino_acids.eps
%%Creator: Adobe Illustrator(R) 19.0
%%For: logos
%%CreationDate: 11/25/2015
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.0.0 x44 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">MStocks</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-11-25T15:42:35+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-11-25T15:42:35+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-11-25T15:42:35+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8qYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqmGiaBrOuXq2O&#xA;kWcl5dMK8Ixso6cmY0VV92NMBkBzac+px4Y8UyIhnH/KgPzD+r+r6Vr6lK/V/XHP5Vpw/wCGyrx4&#xA;un/0R6W6uXvr8FhGueX9a0K9Nlq9nJZ3IFQkg2YeKsKqw91OWiQPJ2+n1OPNHigRIJdhb2afkuiS&#xA;fmz5RSRQ6NqtqGVhUEeqNiDir3r83vN2r2UvmuytvP2gJBELuGPy5+j4/rgQhl+rer6X95Q8eVeu&#xA;KsYP/OOvlE/lpbeY7efWtQu7jSBqX6VsBa3GnJcleRtmtlH134P2mpQUNd/hxV3lT/nHTyjrH5a6&#xA;d5k+s6zqN7qFpLcS3WkLaz2tpOn2beW0al3K4Pwt6ffwG+Kqn5b/APOM2ga95N0PVtbuNXe/8x+q&#xA;1rJpUcDWljGhIR7wzAuwegPwU8OxbFUqtvyQ/L7QfK/6b89apqsbReYLjy5JBpSQH1JYndEkQzA8&#xA;FpEzknltsBXFWWaD+Vv5ceUbb839I1r63qC6BFYL+ko4bdrqGyvoPXX6t6hCiYklZCaAhVp1IxVJ&#xA;td/L20169/K7TdZvdSu7C88rQ3hg0yyikulVYIysEXoxUpVh+9mrTud8VZF5W/JzQfI351/lvdae&#xA;b02fmCPVzJpur/VZLiB7SxfaRrUtC1fWGw6EfQFXzz5e8rXfmn8wbXy5ZgiXUtQMHJRXhGZCZJKe&#xA;EcYLH2GKvpX/AJyL8kQax+XF7daZoMmlHyDepa2TNEyfWtLMEUcksZ4jmqy96n4UJ74qxPSf+cdP&#xA;y2u9V8v+X7jXdVi17zNoKavYqsVubeGXhzf1HNHdTvxjVQfhJL7jFUBpn5XeSYL78vfNfkjWdQks&#xA;9V19dKnfUIrZpUmic0mijCtHxPpkhX5bEV7jFVLUPyz/AC9+rec/OvnbVtVEOnecdQ0aSLTI7US3&#xA;ADBw6q6pHG3KQu1Ph4rRVrTFV+o/845+XNF84+b11rWbqLyX5StLW9luIUja/mF6pMUKgj0+QaNl&#xA;LU322FdlWF/mz+Wvl7y3pXl3zP5V1C4v/K/meGV7IXyot3DJAVDxy+mFRvtdVHUEeBKr2n/nGfyj&#xA;Fo3kGDWr/QpNYPnbUl06VVhaUW2moksf1iT4TwQzcgx7rQ9tlXm+jfkPpUHm3z7D5tvbqz8teRVE&#xA;9y1kqG7uIrjm9p6XqgoOcSciSDvQe+Ko7yD5Z8lHzF5n/wACeZLm60xvJt/e3C3VrGLqFw8PO0m9&#xA;WIwnZh+8h3BqAfFVkH5Y/lL5F8seavy9k1zV7yTzf5gjTV7OyjgibT0hMJkEE5Y+pzbcB12qOlN8&#xA;VW+XPyF8oecJfMmvXsuqX11/iHUbSax0R7JDYxJM/GSeO6HOSv2uMW/HoCcVfPXmLS10nXtR0tTK&#xA;VsbmW3BuIjBNSNyv7yJqlH2+JexxVLsVdirsVdirsVbAJIAFSegxV9sfkX5E0fy5DYaXNBHJczRN&#xA;JqDsA3q3BjJIJ7qm4Tw+eYkZcU93h9NqY6zXjxN4erhB5cvwfe9E1XyCkmqQixb0bSYM0wNW9PjT&#xA;7NevKuwyUsG+zk6z2cEsw8M8MJc/Ku73vNvzk/LnStYsrzQ1HO4hjEmn3L05xzlAw+IAfCx2YeGQ&#xA;vgls6+c/5O1lQJMNr8xX4IfFjKysVYEMDQg7EEZmPfgpt5Q8xz+WvNGleYIIVuJtKuY7qOByQrtE&#xA;wYKSN6GmKvS9d/Pzy9rT31xeflvoL6jqAkM1+ys03qyg1l5EbtU1xVZpP/OR2raTo4h0/wAu6Za6&#xA;8NPOmDXbcSQOYyKeq9vGywNKPtciv2vbbFVnlD/nIfUfLGl2Edr5a0t9b0y3e0s9aCyQSNG4IX6x&#xA;FCyRzsterfPrUlVDaF+fmp2Xl2w0fWvL2l+ZX0aSeXRrzU43doDcktKrIrKsiknofbwFFUlvvzW1&#xA;K88h2nlGWwt0gtdabXfrUQ9OsriQGIRIBGifvjQKNsVZKn/ORWqN5r82a3eaBY31n5whtYNS0idp&#xA;TAPqUIhjIIIJ2BJr47UxVbpv/ORvmHT7vQZodKs3h0bQh5bnt5TIVubSkfJmZSrRufRXdcVV4v8A&#xA;nI+9g1Pyle2nlnTrOPyc16NLtLdpli9G+haBo25M7bAhi1fiYVxVh/5c/mVdeR/Nlz5ntdPhvdRk&#xA;hnitfXZgsElwd5VA6sFqu+1CcVTfyn+fnnvR59STWr66806XqtnNY3emard3E0PGagZ05M3BuNV2&#xA;7E4qjrT/AJyE1m284eWPMy6TbtP5Y0kaPBbmR+EsYjaP1HPUN8fQYqlHl384dS0TQPLWjRafDNF5&#xA;a1n9OQSs7hpZKEek4GwXfqMVU/MP5tajrflfXPL8thDDDrnmKfzNLOrMWjmuF4mFQdig8TvirJLr&#xA;/nJXzFc+ctW1+bR7CfTtes4dP1jQbgNLbTxW4YIeRIYMPUb236YqxL8yPzR1Xzw+mW8lla6Touiw&#xA;m30nR7FSsMKtx5tUklmbgKn26dSVUz8y/nt541G10aw0O9uvK+maLYx2EFlpV3PAsnp7erKY2Tk5&#xA;FBv/ABxVP3/5yb8xTa7Jqt1omn3ceo6XFpPmGxnDtBqCw8yk0i7cZB6rjuOJpTpRVATf85B6w+s3&#xA;l7DotjaWE2gTeWrLS7bnHDbW05QmQHcvIPSA32pTwxVE+WP+clPMOjWWhx3mg6Xq+o+XIxbaRq91&#xA;G4u4bTiEaEOrUqYxwDU2HicVQ/lz8/rjSJpp7jyxpt/c/pKfVbG7b1YLiCW4laVo2mgKNNGGbZZK&#xA;+HSlFXnfmjzHqPmXzFqOv6kVN9qU73E/pjigZzXio3oqjYe2KpXirsVdirsVdir9A7//AJx0/KCC&#xA;ynnsPLECXsSM9u3qTv8AGoqPheRlP0jIzujTi64TOGfB9XCaUfLdhFdTyu0rwy2wSSKVHVKEyKlS&#xA;WB6cq5h442+f9laeOSRJJiY0QQa/iA7vNPbrzPrMSXrjj6mnyiB2K0D8ywDstfhPwA0G2WHJLfyd&#xA;zm7W1ERM7Xilw8ud3vXQ7dNmM6xZ6pDP9Y1DeW5LMXJBJYULA08OQymYPV5/W4M0ZcWX6pff+CEd&#xA;p/8Azjr+UFxYwXF/5Yge9mQSXDCSdPjYVPwpIqjr2GZ0LoW+jaATGCHH9XCLRH/Qt35Jf9StB/yO&#xA;uf8AqrknLd/0Ld+SX/UrQf8AI65/6q4q7/oW78kv+pWg/wCR1z/1VxV3/Qt35Jf9StB/yOuf+quK&#xA;u/6Fu/JL/qVoP+R1z/1VxV3/AELd+SX/AFK0H/I65/6q4q7/AKFu/JL/AKlaD/kdc/8AVXFXf9C3&#xA;fkl/1K0H/I65/wCquKu/6Fu/JL/qVoP+R1z/ANVcVd/0Ld+SX/UrQf8AI65/6q4q7/oW78kv+pWg&#xA;/wCR1z/1VxV3/Qt35Jf9StB/yOuf+quKu/6Fu/JL/qVoP+R1z/1VxV3/AELd+SX/AFK0H/I65/6q&#xA;4q7/AKFu/JL/AKlaD/kdc/8AVXFXf9C3fkl/1K0H/I65/wCquKu/6Fu/JL/qVoP+R1z/ANVcVd/0&#xA;Ld+SX/UrQf8AI65/6q4q7/oW78kv+pWg/wCR1z/1VxV3/Qt35Jf9StB/yOuf+quKu/6Fu/JL/qVo&#xA;P+R1z/1VxV3/AELd+SX/AFK0H/I65/6q4q7/AKFu/JL/AKlaD/kdc/8AVXFXf9C3fkl/1K0H/I65&#xA;/wCquKu/6Fu/JL/qVoP+R1z/ANVcVd/0Ld+SX/UrQf8AI65/6q4q7/oW78kv+pWg/wCR1z/1VxV6&#xA;VirDNd8p6lBcTXmhOVWc1mtlbiQQa/CfCu9O3bMeeIjeLyfaHY2aEjk0xri5x5fL9XyYsdL8yEyw&#xA;G0uj67BplMbkOwJozGm+565Rwy7i87+U1e8eDJ6uex38yyfQfKGozTw3etuzJDQw2rtzJp05dQB7&#xA;ZdDEecnoezuxcs5CeoO0eUSb+bNcyXrXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYqg9R1jStNUNf3cVqGV5AZWC/BEvKRt/2VHU+48RiqjbeZvLt1K0VrqdtPIpUMsUq&#xA;OQZCip9kn7RmQD5jFUyxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KtO6IvJ2Cr4k0H44q0JYmbirqW/lBFdqH/jYffiqReZ9HsNRvNIS6t/WWSeSCZgXU&#xA;iJreWWnJCpFJoY3U9nVWFGAOKug8keS7GeK5h0u1tpYmBt3VQnplWWUCMVog5R86LQVLH9pqqp/i&#xA;rsVdirsVdirF/O6arLNo1rp2oSWMt/cT2qFKhfVNnNPHK5UhiI/QPwfZYncdwqgbLyh53iv457nz&#xA;TLPbpJZubdUCBlg4+ujV51EvE9KHxJO+Ks2xV2KuxV2KuxV2KuxV53ZeWfPN/DcTxeaZLclprUn0&#xA;2cNNb3jI84RnIj5iM0jTYdPs7Yqyfyjo2uaVZ3UOsao+rTTTiWGaTrHH6EUZjGw29SN2/wBlvviq&#xA;e4q7FXYq7FXYq7FWnUsjKGKEggMKVHuKgjFXmcPknztqNpLJa+cJrYhJ7I8o5m5XFtdmMTmlyrAf&#xA;unfijAln4ljEqxYqzPypouqaRp8lvqWqzavO8okW4n+0q+lGnAf5PJGb6d8VTrFXYq7FUp80+WbD&#xA;zJpD6XfyTRW7url7d/TkqhqKNQ0xVI9E/LLTdP1KTVbi/vLrUp4ZLeaVZpLdDEzxFAojbmrRpbRp&#xA;y51YD4q/CFVTC88uadHqmlTh7lpBJcW6mS5lmIW4t3LlXmaSSNv3Io0TKw33oSDEmiG3Hj4hI/zR&#xA;f2gfpUtc/LzQ9Zht4bm41BVtpjOnG9uJKsYZIKETPKtOMzdt++1QZNTJ8VdirsVQOt/pj6h/uH9P&#xA;6961vT1vsel66evX/njzp74qxfy9cfmrcyh9UgsbOIWRhZHLSN9fhlRTN8HDlDPHzZQD8G27V2VV&#xA;9Qi8zHVNC/SRs5uN7I1rJarKjRz/AFOdVLLI7K0ZjaQPvXpx33AJA+LOGOUgSOURZ91gfeQv1VPz&#xA;OFnIbCXS3ufTl9ICOZP3nov6VS8jinq8O34YWDLMVdirsVdirsVYh5lufzHiu5ItCgtJYLlzHazz&#xA;E0twIonEsygfGvqLKnEEH4ga7YqjbQfmA9raPO+mwzNBAbuFkmkZZ/TX11Do6Kw9TlxPHpTFULo0&#xA;Pm9dLQW0tlHP9YujeieOR4zO1w5kNv6cisIuZbj6nxYAbZTgYmj5faLTHy2PNwa5HmE2x3P1Y2oI&#xA;BHrzUqGJI/c+lTfx74WKd4q7FXYq7FXYqwLUtS/NWKee0srC2lmla4msbhjSERQXcnpQTEAhXuLY&#xA;xgPX4TvxY1GKsojPmiiFhZ0ovIN6gbpv0qtcVQGgf4j/AERDwjt47kvOb5ZqlfrJnczmH0if3XqF&#xA;uHL4uP2t8ANspQMTR/F7ony43m0y3f6fWBUDN9T+r91+szheW5/3QIT/AG1wsU7xV2KuxV2KuxVI&#xA;fMun313e6Qba/ks1FzRljqKlR6xbYgE+nC8dHDL8f2cpyxJIo1u7PQZ4Qhk4oCXp6/6X75CW1H08&#xA;0Z5etdXtNKitdVnS6uoKxi4QsS8afCjuWAPNgKt79z1MsQkI1Lm4+uyYp5TLEDGJ3ruPUCund9w5&#xA;JlljiOxV2KuxV2Ksa1zVvXe2uNLtpNSk02d5QYeXpGX0JYfS5hWDH941aGin7RGwOPkndGIunb6T&#xA;TcIlHLIYxkiBvzrijK6vbkPMjkOoOtJvZbyximni+r3RUfWLUkM0TkBuDe9CDl0JWN+br9TiGOZE&#xA;TxR6HvHei8k0OxV2KuxV2KuxV2KsW0fX7yKdLe502WC1nmlpcEg8biW43hNePLiXarLUbbV65jQy&#xA;EbEbftdzqtFCQMozBlEDb+iI/V8aGx333plOZLpnYq7FXYq7FXYq7FUPeX9pZorXEgVpG4Qx/tyO&#xA;eiIvVmPgMjKQHNtxYZZD6Ry5+Q7yk3ljVry4ZrabTZbWNjcXHrs3JQ0kiy+kQVRg49chvhp8OzNv&#xA;SrFMnavx+C7DtDTQj6hMSPpFe4EXzIr07b3vuAyHL3VOxV2KuxV2KqF7f2djbtcXkywQrsXc0qT0&#xA;UeLHsBucjKQAstuLDPJLhgLLHItc1TW7q3utK08nTbRzNHc3Lej9YJjaPjHsxA4ycgaGp+E8coGQ&#xA;zIMRsPtdrLSY9PExyz/eS2qO/DuDv8qrbvHEnthq9rduYKNb3iDlLZzgJMo6VpUhlrtyQlffLozB&#xA;26utzaaUBf1Q/nDl+w+Ro+SNybjuxV2KqV5bLc2k9szFVnjaMsvUBwVqPffBIWKZ4p8EhLuNpDpn&#xA;k/6nOvq3r3dnC8zW1rcASBVuatKGZq8m5N8LdQtR+1lMMFHnY/W7LUdqeJHaIjIiNkbfTy+zmOpo&#xA;9GRIiRoscahEQBVVRQADYAAZe6skk2eaV6t5dtNRmjmLNBIu0rRgAyKAQvI9eSVPBgarU06nK54h&#xA;JzNNrpYgRzHS+n9vUcjtfJU0LS7jTLNrSS6a6iR/9GLj4kiCqAjN+2agtyPjjjgYirtjrNRHNPjE&#xA;eE1v5nv8u6vJMcscR2KuxV2KuxVZPcQW8LTXEiwwoKvJIwVQPcnYYCQObKEJSNRFnySDyz5hsbyZ&#xA;7CBZOZa5uQ7LRQpuK8WoTxcerQo1GFPiAynFlB2Hn97s+0NFPGBOVfwx/wBj9o9PMbHoSyLL3VOx&#xA;V2KuxV2KuxVjur6Br0+otd6fq8lsk6vDJbkLwiSRYgZYqqxMq+ieIJA+Ku1DzonjkTYLtdNrcEcf&#xA;DkxiRFG+8ji2O/0+rfrt7uEboNtYvY2t9GiyTtAsYuiH5lB+yDK0sgWu9Cx98njAoFx9ZkmJygdo&#xA;8V1tz+AA+xMLq0truEw3MayxEhuLCtGU1UjwIO4OTMQebi48soG4mix238s69aXttdQau8yxvSe2&#xA;mB4PG0gMkhJMjeqUB6USp2CjbKBikCCC7WevwThKMsdWNiOYNbDp6b98q5ksnzIdO7FXYq7FUs1m&#xA;2t7mfS4riJJojdMTHIoZTS2mpsajK8gBIvv/AEFzNLklCMzEkHg6f14pn02GWOGx3VCT5z0UHcBJ&#xA;iB4ExOK5RP8AvIu10/8AimX3x+8Miy91TsVdirsVdirsVdirsVdirsVdirsVSXVbLzG2opeaZeRr&#xA;CohQ2My/u2o0glcsPiB4SKVp3XeuVTjO7Bdhpsun8PgyRN+r1Dn/AA0PmDfvV7LR0EdrLqNLq/tg&#xA;aTOzuvPkSZURvhRmr2Hwj4QeIGGMOV7lry6o3IY/TCXTYbdxPMj7+Z3R11aw3UJhm5cCQao7RsCD&#xA;UFXQqyn5HJkW42PIYGx+v7Dsx+00nzfa6pHcHUo7q0YlLi2l5UKs0ZaZKfZeiNRN1HKg23yiMMgN&#xA;3Ydpk1OlnjMeAxl0I+PpPeNxvzNWyXMh1DsVdirsVdiq2b1fSf0ePrcT6fOvHlTblTelcBZRqxfJ&#xA;i+hN5qsJLOzurIPYu5hqjIGhUQRuZG41BT1hIqj7VCK79cfHxxoEbfsdxrBpsolOMvXV9d/URXv4&#xA;eEnpd1syrMl0rsVdirsVdirsVQOs6Pb6raC3lklhZG9SGeBykiPxK8lO46Meo9+tDkJwEhTk6XVS&#xA;wy4gAehBFghKLOTzlp0/1O4gTWLdgRb3yssDKR0E/Kp4+6qx2/aJyqJyRNH1fjq52WOkyx44k4pd&#xA;Y/V/pf2kD3AJla6RK15HqOozCe9iDCBIxwhhDihCj7TmmxZyfYLWmWCG9nm4mTUgQOPGKged7k+/&#xA;u9w+JKZ5Y4bsVdirsVY356XzcunW83lc8r9ZTDLAxQKUuY3gWY8x/wAe0zxzsO6Iy9SMVYHa6l+f&#xA;c1zYLLYR2vC/FvNIyxSRGyeNAbiVFlDM0btJUKw6ClepVZb5F1T8zbu/uY/N2l2tjZra2r2s1swq&#xA;87RKbhWX1JCKSFhSm1OrdSqzPFXYq7FXYq7FUp80S6tDpPraVHJNdR3Nm7xQhDI9ut3EblVDkLU2&#xA;/MdflvirDJPMn5w/pG/I8uRjSzMq6UUMTTek8chDzhp1pxIj5gDYkgcuyqHs9W/O9rgSS6bAoEFq&#xA;0sMkUaRmUTN9ZijMd1MQOLUWQ9QAePiqy/yFfecr3y+k/m+wh07WfUdXt4CCnAU4sKPL3qPtYqyL&#xA;FXYq7FXYq7FXn/nTUvzYstcJ8qabDqNg6xjhcmNUDhWqAxliYVYjkT2GxrRXVY9Jrn/OQkd5K9ro&#xA;lvcW83qiP6x6UJT0/hgYRrcycTIlXcGRviAFV+yVUxv9c/OaeSeSy0gW0QW8ksYpIoWrwa4FoJ3W&#xA;7ryYCLlGqU781Pw4qnXlTU/zQl803ll5i0y1j0CFJ1tNThorzPFMqQuY/VkKeqnNuNDSg3H7SrNs&#xA;VdirsVeS2Nt+eulWGn3ouYtYu5LP1LvSLpYyBcO1nH6ZuENtwYcriStGUUI32xVbP50/O2wsDf3v&#xA;l+zeOLin1dUdJJWaZVXiVuJuLSIeKLx+0RU02xVZJrf5+Qahc2v6Jhuba2a/mt7tERfXdHY2kdDc&#xA;D9w6vQAlX+EAkfadVE22vfnxLZCa40WyiuES74W6oxrLBDGbZnb6yOSTyyOCoCn4OorirIPKmrfm&#xA;dN5murHzHpVtDosKTrbalbjiZmikRIpCpmlKesvNvT4njQVbehVZtirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqA17U5dL&#xA;0i5v47c3LW6hjEKj4agM7cQ7cUUl24qzUB4qxoCqxVfP/mo3McZ8mXzRvcyQclYA+mjKokHqJGg+&#xA;0QebKh2Kuy8mVVmGmXU13ptpdz27Wk1xDHLLayfbiZ1DNG2w3UmhxVE4q7FXYq7FXYq7FXYq7FXY&#xA;qwzUPPPmC21a6srXyxdX0VrJInqRMQzKkKyIRVPSrKX+D95TipqRJxiZVMfLHmbWNWuZ4b/QbnSU&#xA;hjjdLmcgxTM6IzCIELIApYj94it4qG5KqrIsVdirsVdirsVdirsVdiqQebPM91oaWxt9Nl1F7j1a&#xA;CPkByiTmIwUSVub9VHECitvy4qyqTwfmHrct9HbHypfxxu1mrzueKp9bmgjctVd/RW4LtxqaD4gp&#xA;5cFWQ6v5t8s6NO0Gq6nb2UywfWmjmcKRAZUgEhB/ZMsqp8ziqbYq7FXYq7FXYq7FWBWX50+ULxdO&#xA;9GK8EmpTWsEcLwqrxfXXhjgkmUv8EbPcBQ3cg0r8NVUd5213TrrydrdqI7xGu7Ka1Rns7iIc7lfQ&#xA;SrzpDEo5yCpd1UDckAE4qm2oebNMsba4uJob0rbRtJII7O5dSEUseMgj9I9Ptc+PvTFUXoms2usW&#xA;H161SRIfWuLfjMhjflazvbuSh3WrxEgGhp1AO2Ko7FXYq7FXYq7FXYq7FUi1jznouj6vaaZf+rFJ&#xA;dlQlzwrbpzjuJQZZa0Ta0cb+IptyKqqGgef9E1vR7fVbWC+SC45ARtZzySIybOkggWZVZW+E79tq&#xA;jfFUNoutWC615huwl00clxbKQLWZpAwtUBBhRXnTYVrJGoNdq4qmlj5r0291o6RDFdLciBrnnNby&#xA;wpwRkQisoRuVZRtTpv0pVVOcVdirsVdirsVdiqA1zWrPRdObULxZWgWWCErBG00ha4mSBOMaAu3x&#xA;yDZQT4AnbFWP6X+anlTU50htPrcrvYJqSiK2lnJiZ442RUgErtJG0yeoqqeINTtviq+8816Rearo&#xA;0UUd6kyXMs6pcWN1allS1ljfj9ajg5kesDxTkx7KaGiq3V/zQ8taVbie5t9UCN6lOWl38X91DJO3&#xA;xTwxL9iFu+3U0UMwVYl+an5M6z5u802GuafqRg/Rvp3MEE91dKv1lJofgjWOq28foxM3OP4zLxPQ&#xA;Yq9T06yWx0+2slllnW1iSFZ7iRppnEahecsjVZ3alWY7k74qiMVdirsVdirsVQ0el6ZHcvdR2kKX&#xA;UipHJOsaCRkiJaNWYCpCEkqO2KoTzTU+WtUjVuMs1rLDDvQmWVDHGopvyZ2AAHfK830H3OZ2eB+Y&#xA;hfISBPuBs/CuavpuraVqsMjWE6XEUTelLxBorcFfiQQP2XGGExLk16jS5MJAmOGxf3j9CMVVUUUA&#xA;CpNBtuTUn78m47eKuxV2KuxV2KuxV2Koe907T7+EwX1rDdwlkYxTxrIvKNuSHiwIqrbjwOKq6oiC&#xA;iqFHgBQYqx+31jS7TzDfw3N0iS3ksaWqmp5mKONHVWpxqryCortXKBkAkQTzdpPSZJ4ISjHaIPF8&#xA;TIj7BsyDgnLlxHLpypvT55e6tvFXYq7FXYq7FXYq0yqwowBFQaHfcGoP34qh7LTNNsUKWNpDaozP&#xA;IVgjWMF5W5yNRQN3bdj3OKoPXLy0tZtOkuZVjjjnaSStTRFhkUuQK/CrutW6DbK8kgKtzNLhlkEw&#xA;BZ4dvfxD7aB80fDLaX1tFPEUnt5lEkT0BUq67EV8VbJggiw42THKEjGQojZWwsHYq7FXYq7FXYq7&#xA;FXYqlfmqMyeWdVCoHkW0meIMAaSIhaM0O1VcAj3yvMPQfc5vZ0q1GPu4437id/sXWHl/R7K9a+s4&#xA;FimkjETFSaFBxpt8kUfQMY44g2GObW5ckOCZsA3+PmUdBdW1wge3mSZCAQ0bBhQ9DUV8MmCDycee&#xA;OUTUgR71TCwdirsVdirsVdirsVdirsVYvLouh6jq2s2+oxREzFFQVCOUliiDkUoal0Xf2GY5xxlI&#xA;gu5jq82LFjljJ2v3bGVfYT82UAUAA7bZkOmLsVdirsVdirsVdirsVdiqVa5FZvPphugnp/WSpaQg&#xA;dYJSACfFlXbK8gFi+9zdJKYjPhu+Hp/Wj+i0RpWm6fYQOtgoWG4f1/hPIEsoAIPhxUU9sMICI2at&#xA;TqMmSQ4+cRSNybjuxV2KuxV2KuxV2KuxVKvNZC+WtTmpV7a3kuYq9BJAvqxn6HQHK830H3Ob2bvq&#xA;ID+dIRPulsfsKnc+UtFuZpZbiL1Gn5erso5cxRt1UMK17HAcMTzZY+080ABE1XJDaJY2OjapfwyE&#xA;JLcLC0dy7AGWFKqoPQc42Yg0HQr3yOOIgS3avNPUY4Eco8W3cTv8iPtEmQo6OiujBkYAqwNQQdwQ&#xA;Rl7qyCDRbxQ7FXYq7FXYq7FXYq7FWI3HlbT9X1jVDI8sE9rJW0uInIeKS5hhZ5VJr8VYlp2FOmYp&#xA;wiUj5fpp3kO0Z4MWOgDGQ9QI2IjKVD3bllqiigVrQUrmU6Qt4odirsVdirsVdirsVdiqTeYNMtL6&#xA;406O4BIklkgfixFYnheR0I6UZoVyrJAEi3P0WoljjMx6AH4iQAP+yKL0fSo9LtPqkUskkCn9ysjF&#xA;vTjVQixrX9lQuShDhFNOq1JzS4iAD1rqed+9HZNxnYq7FXYq7FXYq7FXYqlPm8geVNZr3sbkD3Ji&#xA;YAfScqzfRL3FzuzP8axf14/eF3+KNA/5bY/x/ph8WPex/k/P/NKWfobTPNFxHrF5FytoqpplCQXh&#xA;P23kHQrI3RCOgBO+y18AyHiPwcz81k0cTigfUfr8j0A849/eSOXORWdrDaWkFpAOMNvGsUS+CoAq&#xA;j7hl8RQoOqy5DORlLnI2fiq4WDsVdirsVdirsVdirsVYdeaBfX+uajPZajJb3Vm4MIerIzypDIob&#xA;cr6aenRV4dz1rmLLGZSJB3H7HfYtZDFhhGcBKM+fuBkNvM3ub6DkzEVoK9e+ZToS7FXYq7FXYq7F&#xA;XYq7FXYqkvmLT/rlxpqetJFymeL4T8I5RNJz4/zr6VFPapyrLGyHYaHP4cZmgdgf9kBXu33HWgjN&#xA;Gsbyxs/q1zdG7EZCwSMAGESqqqrEAcjsSSfHJY4kCibaNVmhknxRjw3z96OybjOxV2KuxV2KuxV2&#xA;KuxVJrueG/1+LSi4Edmi3txEdjI4YCEAd1jb42P83D3yqR4pcPdv+Px3OwxwOPActbz9IPd/O+JG&#xA;w8uLyRf6A0L/AKt1r/yJj/5pyXhx7g0fnc38+X+mKEtJ4bDXpdKVx6d4jXsEQ3Mblj6wI7LI3xqf&#xA;5uftkQalw9+/4/He35IHJgGXrH0k9/8AN+I5Hy4fNOctde7FXYq7FXYq7FXYq7FXYqw28i82nW9S&#xA;m0iaBhbuGltmHEzEpC0MfQU4qrqzFzWvbtiSE+I8P45O/wAUtL4MBlEvVyP83eXEfnRArauvWZAk&#xA;gEihPUeGZboC7FXYq7FXYq7FXYq7FXYqkHmiy1S5m09dPvvqUjPLGDwDjm0ZdW33UqsbCo8adCcp&#xA;zRkao07Ps/LjgJ8ceMUDzra6+O5HyvonFjFcQ2scdxL686ijy0pyNetMtiCBu4GaUZSJiKHcr4Wt&#xA;2KuxV2KuxV2KuxV2Ksc822F1G1tr2nIXv9OP7yJes1ux+NDTrSpI603IFaZRmidpDmHbdm5okSwZ&#xA;D6Mn2S6H8c9r2TP9PaZw5eqa0rx4tX5dKfjlniBw/wAnkvklnlKwupGude1FCl/qTVjibrDbigRB&#xA;Xx4gnpUAVHKuV4YneR5lzO0s0Rw4MZ9GP7ZdT+POjVMjy91LsVdirsVdirsVdirsVdirDHu/Pdlr&#xA;uqTx6NbS6U9JUnWVvWkEbhKCNTIeforUKE38a/AcS8gkTwivx+j8dHfjHosmHHE5JDJyqthYvntt&#xA;xdb+z1MxicyRJIVKF1DFG2ZaitD7jMoOikKJHNdhYuxV2KuxV2KuxVbJJHHG0kjBI0BZ3Y0AA3JJ&#xA;PQDElMYkmhzUTqWnKVBuoQW9QKDIu5hbhLTf9hzxbwOxyPEO9sGDJ/NPTp37j5jcd6U3d/f3c9tc&#xA;2WnzS2dq7y+owWOSRvSZF9NJGRuHxMCzDwKgjcVmRNEDYOdjwwgJRnMCcgB3gbg7kA78th52Qdl+&#xA;m+cNEvI29aYWFzGSs1reEQyKw41FHIr9tenTkK0JxjnifL3sc/ZeaB2HHE8jHcde73H5GrpOYpop&#xA;o1lhdZInFVdCGUj2Iy0G3AlExNEUV2Fi7FXYq7FXYq7FWK6r+ZGhaPrl1pWrRXFkLSK3ma+dY3gd&#xA;bszCHgIpJJiW+qTVrH8IQlqChKqy5/NbyFBcNB+lUlkjlMEpiR3RGVxHIWkC+nxjLDmeXwg1OKuv&#xA;PzV8jWsKyNftIWMS+lHDM0lZrkWgXhwDc1lJ5R/boD8O2Kqqfmd5Ed+C6vGx5QICElIP1rl6LA8K&#xA;FG4N8Y+EUNSKHFWUYq7FXYq7FXYq7FXYq7FWLXH5m+S7TTbW/vr/AOqR3dva3cUUkchl9K+VjAeE&#xA;auTyKMu1fi260xVDn83fy9QXRuNWS3Nm8yTrIj9YJVhbiVVg1WkQgKeVGFQN6KsvhlimiSaJxJFI&#xA;oeN1NVZWFQQR2IxVdirsVdirsVdirsVU7m3iuLeW3lFYpkaOQVpVWFDuPY4CLFM8czCQkOYNpFY+&#xA;SfLtrfpdQI3O0mea0twwEVs03xSLGiBaK5bkQ1e3YClMdPEG/wAB2GXtfPOBgT9QAkesq5WT1HL+&#xA;0p+ZIwGJYAJu5JHwild/DbL3WJVr3lPQtee3fVLb6w1qJFgqxFBLx5jY78uA65Vkwxn9Q5Odo+0s&#xA;2mBGKXDxVfwuvvTCwsbWwsobK1T07a3UJFGOiqOgycYiIoONmzSyzM5G5S5q+SanYq7FXYq7FXYq&#xA;ld75Z0e8v31KSHjqbRpEt4N3URJcRxkK/KM8Fvp6ckI+LcHbFWOad+TXkGyt2tzYvdRNHDCEnlcq&#xA;scEUEIUIhRf3n1VWkJFXNQxK/DiqNsvyx8nWmptqMdpJJPWJ0WaaWVUlhnNyJhzYlpWmbkzsSx6V&#xA;pUFVZZflP+X1iJFtdISNZuHNPVnK/u+ZWgaQhaGVzt3JPfFWW4q7FXYq7FXYq7FXYq7FWG/8qk8l&#xA;GU+rbzz2wshp0NrNczSrFAJEl4wyuxnQVhjHEScVC/Co5PyVVT+U/wCXpiaIaNGiM7y/u5JkKvI0&#xA;bOyFXBUkwp9mnTFWVQwxQQxwxKEiiUJGg6BVFAB9GKr8VdirsVdirsVdirsVeW6x+UfmCfUdX1az&#xA;8x3EV3rDXFxdQxlrcCeKGaHS/RlhMcii3WZfU5s/MovRfhxVL9M/J3zdPo1x+ktfltNQvBe0gjmu&#xA;ZY4Vu5TwRi0zGX0rc+mOTNToCeuKp7Y/lj5ltNc0vUI/Nl59Usp2nu7BnnkjuOaxhwfUlagJiNF+&#xA;yvI0A7qvRcVdirsVdirsVdirsVdiqTa95t0jQ5oILwyNNcJJKkcSFyI42RCx6DeSaNAOpZht1IVS&#xA;u1/NPyXd3UVva3jzPO0AgZYpOLi5mjt4mViB8Jll4+3FvaqrLcVdirsVdirsVdirsVdirsVaZlVS&#xA;zGiqKk+wxVhw/NvyVwV5LmWJXiFzFzhkq8BAf1FABNBE6ykH4gjDau2Kp55a806R5ksXvdLd3gRo&#xA;0YupQ1lgiuVFD/xXOv04qm2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVDajqmnaZam71C5&#xA;jtLZSFaaZgiAtsBU+OKodPMegPeSWS6jbm7iX1JYPVXmqUjbky1qBSeP/ghiqX65Lo97faKryW1y&#xA;q3M7SKzRv+5+pTxykg1+H96oftuK4qr3mo+TbVhPdz2ETTyrSRzFV5UVZF36llW2Uj/UH8oxVOsV&#xA;dirsVdirsVdirsVdiqWy+ZvL0Ml1HLqVvG9kUW8VpFHpGVgiepU/DyZgBXFVaDWtHuIopYb2CSOd&#xA;EkhZZE+NJAGRl36MCCMVSTy4PLiaY7P9TCz3d1NG37qjx/X5p4HU9GUM3ND47jfFU10W98uzieHR&#xA;pbV1t2EdzHa8KI8f7gKwToVEHAey07YqmWKuxV2KuxV2KuxV2KuxVa0kaEBmClvsgkCtMVd6kfLj&#xA;yHI7UqK1xVdirsVdirsVdirsVQOtaHpOt2Dafq1ql5ZOys8EleJKmqk0I6HFUp0z8u/KGnu8qadH&#xA;cXEiyJLNcKJGaOWUTFGBHDirIvEcdqbd6qq115b0OG905rbT4YQZJoZlhQRxvDNbv6iSonFJEYxp&#xA;s4IqB3pkZHcN2KIMZE9I7f6aI+6273yJ5MvUiWfRbMiGT1Y+ESxkPwaPlWMKfsyN+vrkmlPcVdir&#xA;sVdirsVdirsVdirGtQ/Lnyhf6mdSubBGuZZPWu/5bhgjRqJwa8lUNsvTxxVHweUPK0EUEUek2nG3&#xA;jjihZ4UdwkShIxzcMx4qoG5xVDaX5Z0GSxSO50y3mFtJPBbi4iWUxwR3EgijQyhisar9lRsB02yM&#xA;TYbs8RGVD+bH7Ygn7Ubo3lrQdFe5bSrKOzN5IZbn0hQO7O8hYjp9qRv1dKZJpTLFXYq7FXYq7FXY&#xA;q7FXYqwrzh5a07X/ADRYaZetKsN5pt48rRlCf9EubQxhRIkgXe4blxpy25V4rRVFaR+W3l/SdYGq&#xA;2st39YF1PecHmrGZLhGjfmoA9TaQ0Z6tXqxxVleKuxV2KuxV2KuxV2KuxVIvMui2ep3OlrctKo+s&#xA;UBifgRwU3AIahZTyt1HJCrUrQ5TlxiRF9/7f0Oy0GrnhjkMa+nqL5+n47SOxseSN0HSW0nTItP8A&#xA;rD3MVv8ABA8g+JYhsiE1NeK99vYAbZPHDhFOPrNT4+Q5K4TLnXf1P4+Z5phk3FdirsVdirsVdirs&#xA;VdirsVcRUEeP0YqxTQPKdvbTLf2V3PFIl1OsyO3NJIo2Fvx4L6aBmFuhLkFjvUk0IxseEDcHr+z9&#xA;Du9b2lKY4JxiRwxrvBPqu9z/ABGhsB0rcGV5kukdirsVdirsVdirsVSbzXoepa1pZs9P1e40W4/e&#xA;H63agFzzgkiCmvYNIH2o3w/CVajBVKND8pebYVvJ9U80XX1vUBbO8dqsLx28sKusot/rUUyCOYMh&#xA;KiJaMtR9qgVVG0XVI/MNpA+v3s7S2N36dxJHaiaIrLAC0fpRRQHl6gqJYZPsinHesTLem6OEnGZ/&#xA;zZRH+mEj/vVdvKmtm8tpz5q1KWOB0eSCVLNVkVZY5CjfV4Lf4XWMqe++xC8leTSyXFXYq7FXYq7F&#xA;XYq7FXYqx/zRNJaXOmX3rSCFZXtzBGafvJ4yEm68SY6H4XVl36VAOUZjRBdp2fATjOFC6Bs90TvH&#xA;494IO3OlvmHy7rl9ZIlhrl1bzxSerUekvMCN09MmJItmLjqdqV6gEOXFIjaRToddhxzJnihIEV12&#xA;3Bvcnu/RysIrylHOmhwGe9lv5HLMZ59pASaGNx2ZCCpHYjJYQeHc209pSicxqIgO4cvePfzTjLXA&#xA;dirsVdirsVdirsVdiriCQQDQnuOo+/FQxHy9o/mK2eOddUN1D9buEu4rguVMakRM6AmQ+o0sBfjy&#xA;CrzPEDo2LihMb3e5d5rtVp5gxOPhPBHhIrnzAPLYRlV1xHhF3zEuzKdG7FXYq7FXYq7FXYq7FUC2&#xA;u6QCyrdJJKsfrehFWWUoQpDLEgZ2qHFKDIeJHvckaPLz4SBdWdhfvO3RJdVg82X00d9pSx6fKkTx&#xA;W4ugjuFkeNnaVRy+2IxxVXFKVataLVMTO8dnYaaelxgwy3MWCeGxyBqvde5I36VVyNote01B6Vzc&#xA;rFdRhhMkgaM1jA5sFcKeG+zdD2ywZB1O7gy0eQ7xjcTyrfny5dfLmmWWOI7FXYq7FXYq7FXYq7FW&#xA;M+bpIr23sILORLiYX0bGKNgzURHLbA1+HvmPmNgAd7uOzInHKcpjhHAefmRSe6jqEFhavPKQSA3p&#xA;RclVpGVC/BORALEKculKhbrcGE5JCI+fdvVljumaD5guLm31W6v30/m5nm0qHkU+No24SfEq/wC6&#xA;26ID8Z5Ft+VEMcieImvJ2uo1mCMTijAToUJnntxbja+o616RQHSV5kukdirsVdirsVdirsVdirjW&#xA;hoKnsMVSzy0LkaPELple6DzC5ddg0omcSGgCgVauw2HieuV4r4d+bma/h8U8P01Gvdwivs/A5Jnl&#xA;jhuxV2KuxV2KuxV2KuxVLbLy3oVldLdWlnHDOqhFda7ADiNq0rTavXc+JrXHFEGwHLy6/NkjwykS&#xA;Px+K93cEyyxxEBqOgaPqMhe9tVnZk9J+VQGQEkK4BAbiSStfs1NOpyEscZcw5WDW5cQqEq3v4+Xd&#xA;fXv6q+n2MVjarbRMzorO3JzViZHLnoB3bbDGNCmrNmOSXEfL7BSIyTU7FXYq7FXYq7FXYqkth5Q0&#xA;Sxu5bm3iZXn9QXCk1SQTU5h0+y1aDrlUcMQbDsM3aebJERkdo1XeK5UW9S8m+WdQjijuNPiVYZVn&#xA;jMSiJg6hlB5R8T+0dsZYIS5hcHamoxEmMzuK332+PuTnLXXuxV2KuxV2KuxV2KuxV2KuNaGgqewx&#xA;Vi2i6xrUNylrfaVJFbXNxKEnQFiksoFwwcH9hGeRPUXZuNQKZjY5yBojr+13Or0uGUTKGQGUYjbv&#xA;A9O3mQInhO4uubKcyXTOxV2KuxV2KuxV2Kpb5ki1OTQL9dLuJbXURA7Wk0CxPIJUHJFCzpLGeRHE&#xA;1Xoex3xVgcuo/nLp+oG0s4otXtJJHaO5v7dVlRINPgnMbSWz2sX+kXTyxI3p/ARU8xsFVlj5p/Oq&#xA;5S1hn0KytLiYxLLP6E8kEaPeiJ56NcQyfBbkt6JAb9rlx+HFVBPNn53roaXS6BbSX8nLnazRSgxG&#xA;S6koxMctWjht1HwBebbbk7FV6dpM1/PpVlNqMC2uoSwRPeWyNzWOZkBkRW7hWqK4qisVdirsVdir&#xA;sVdirAvPuk/mRd3OoP5avFitHsrVILepSRrlJLoymOUTRiL4Xh5VQ8tqEUxVjpsvz5OoG4kmZ1S4&#xA;lEaxvZpH9WWJxURVoZGeWkPqFl+EGSm2KqVnYf8AOQlrbKsc6O3p2yutw9rMSzW90bqSrEnmk0ds&#xA;I15BPiaopUhV6p5d/TP6CsP02UOr+hH9eMYCr6vEctlLLWvXiaV6bYqmGKuxV2KuxV2KuxV2KvE7&#xA;L8xPzptYLeW88rXF8Vt44rhPq0kfK4flcGakaFuPoyQwEAfDJzJFEOKo+288fmzCsj3WiS3arNc0&#xA;EVncREfVbeAiPiyNyjllmfi6mrFG4chTFUTP+YH5nyem8HliRI+c6r+5ugZDBFCyM6vEWSK4a4PE&#xA;EB14FTvyAVT7yf5v856p5ku9K1ny6+m2NtAWj1OkqxzSoY1+DmoHF/Uei8uS8K7hhRVm2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:3086d2b8-7ff9-1247-9800-ecd1411fbce2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:3086d2b8-7ff9-1247-9800-ecd1411fbce2</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:80f78a91-ca07-904b-b593-cc8abc8adaac</stRef:instanceID>
            <stRef:documentID>xmp.did:80f78a91-ca07-904b-b593-cc8abc8adaac</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:52e13c28-7331-624a-ae87-d953c37a5f09</stEvt:instanceID>
                  <stEvt:when>2015-11-25T15:41+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3086d2b8-7ff9-1247-9800-ecd1411fbce2</stEvt:instanceID>
                  <stEvt:when>2015-11-25T15:42:35+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB красный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB желтый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB зеленый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB голубой</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB синий</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB пурпурный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Холодный</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Оттенки серого</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
43.4063 183.69 mo
40.166 175.327 li
41.364 175.327 li
43.5375 181.402 li
43.7125 181.889 43.8589 182.346 43.9768 182.772 cv
44.1061 182.315 44.2563 181.859 44.4275 181.402 cv
46.6866 175.327 li
47.816 175.327 li
44.5416 183.69 li
43.4063 183.69 li
cp
0 0 0 rgb
f
51.6782 180.649 mo
51.3055 180.801 50.7464 180.931 50.001 181.037 cv
49.5789 181.098 49.2804 181.167 49.1054 181.243 cv
48.9304 181.319 48.7954 181.43 48.7003 181.576 cv
48.6053 181.723 48.5577 181.885 48.5577 182.064 cv
48.5577 182.338 48.6613 182.566 48.8686 182.749 cv
49.0759 182.931 49.3792 183.023 49.7786 183.023 cv
50.174 183.023 50.5258 182.936 50.834 182.763 cv
51.142 182.59 51.3683 182.353 51.5128 182.053 cv
51.6231 181.821 51.6782 181.478 51.6782 181.026 cv
51.6782 180.649 li
cp
51.7638 182.943 mo
51.3835 183.266 51.0174 183.494 50.6656 183.627 cv
50.3138 183.76 49.9364 183.827 49.5332 183.827 cv
48.8676 183.827 48.3561 183.664 47.9986 183.339 cv
47.6412 183.014 47.4624 182.598 47.4624 182.093 cv
47.4624 181.796 47.5299 181.525 47.6649 181.28 cv
47.7999 181.034 47.9768 180.838 48.1955 180.689 cv
48.4141 180.541 48.6604 180.429 48.9342 180.353 cv
49.1358 180.299 49.44 180.248 49.847 180.199 cv
50.676 180.1 51.2865 179.982 51.6782 179.845 cv
51.682 179.704 51.6839 179.615 51.6839 179.577 cv
51.6839 179.159 51.5869 178.864 51.393 178.693 cv
51.1305 178.461 50.7408 178.345 50.2235 178.345 cv
49.7405 178.345 49.384 178.429 49.1539 178.599 cv
48.9237 178.768 48.7535 179.067 48.6433 179.497 cv
47.6392 179.36 li
47.7306 178.93 47.8808 178.583 48.0899 178.319 cv
48.2991 178.055 48.6015 177.851 48.9969 177.709 cv
49.3925 177.566 49.8508 177.495 50.3718 177.495 cv
50.8891 177.495 51.3093 177.556 51.6326 177.677 cv
51.9558 177.799 52.1935 177.952 52.3457 178.136 cv
52.4978 178.321 52.6043 178.554 52.6651 178.835 cv
52.6994 179.01 52.7164 179.326 52.7164 179.782 cv
52.7164 181.151 li
52.7164 182.106 52.7383 182.71 52.782 182.963 cv
52.8259 183.216 52.9123 183.458 53.0416 183.69 cv
51.9692 183.69 li
51.8627 183.477 51.7942 183.228 51.7638 182.943 cv
cp
f
54.2853 183.69 mo
54.2853 175.327 li
55.3122 175.327 li
55.3122 183.69 li
54.2853 183.69 li
cp
f
56.9095 183.69 mo
56.9095 177.632 li
57.9363 177.632 li
57.9363 183.69 li
56.9095 183.69 li
cp
56.9095 176.508 mo
56.9095 175.327 li
57.9363 175.327 li
57.9363 176.508 li
56.9095 176.508 li
cp
f
59.4994 183.69 mo
59.4994 177.632 li
60.4236 177.632 li
60.4236 178.493 li
60.8686 177.827 61.5113 177.495 62.3518 177.495 cv
62.7169 177.495 63.0526 177.56 63.3587 177.691 cv
63.6649 177.823 63.894 177.995 64.0461 178.208 cv
64.1982 178.421 64.3047 178.674 64.3656 178.967 cv
64.4036 179.157 64.4226 179.489 64.4226 179.965 cv
64.4226 183.69 li
63.3958 183.69 li
63.3958 180.005 li
63.3958 179.586 63.3558 179.274 63.276 179.066 cv
63.1961 178.859 63.0544 178.694 62.8509 178.57 cv
62.6474 178.446 62.4088 178.385 62.135 178.385 cv
61.6977 178.385 61.3202 178.523 61.0026 178.801 cv
60.685 179.079 60.5262 179.605 60.5262 180.381 cv
60.5262 183.69 li
59.4994 183.69 li
cp
f
66.7729 180.079 mo
70.1559 180.079 li
70.1103 179.569 69.981 179.187 69.7679 178.932 cv
69.4409 178.537 69.0168 178.339 68.4958 178.339 cv
68.0242 178.339 67.6278 178.497 67.3064 178.813 cv
66.985 179.128 66.8072 179.55 66.7729 180.079 cv
cp
70.1444 181.739 mo
71.2056 181.87 li
71.0382 182.49 70.7282 182.971 70.2757 183.314 cv
69.8232 183.656 69.245 183.827 68.5415 183.827 cv
67.6553 183.827 66.9527 183.554 66.4335 183.008 cv
65.9144 182.463 65.6548 181.697 65.6548 180.712 cv
65.6548 179.693 65.9172 178.902 66.4421 178.339 cv
66.967 177.776 67.6477 177.495 68.4844 177.495 cv
69.2945 177.495 69.9562 177.77 70.4696 178.322 cv
70.9831 178.873 71.2398 179.649 71.2398 180.649 cv
71.2398 180.71 71.2379 180.801 71.2341 180.923 cv
66.716 180.923 li
66.7539 181.589 66.9422 182.098 67.2807 182.452 cv
67.6192 182.806 68.0413 182.983 68.5471 182.983 cv
68.9236 182.983 69.245 182.884 69.5112 182.686 cv
69.7775 182.488 69.9886 182.173 70.1444 181.739 cv
cp
f
168.464 183.69 mo
168.464 175.327 li
169.571 175.327 li
169.571 182.703 li
173.689 182.703 li
173.689 183.69 li
168.464 183.69 li
cp
f
175.652 180.079 mo
179.035 180.079 li
178.989 179.569 178.86 179.187 178.647 178.932 cv
178.32 178.537 177.896 178.339 177.375 178.339 cv
176.903 178.339 176.507 178.497 176.185 178.813 cv
175.864 179.128 175.686 179.55 175.652 180.079 cv
cp
179.023 181.739 mo
180.084 181.87 li
179.917 182.49 179.607 182.971 179.155 183.314 cv
178.702 183.656 178.124 183.827 177.42 183.827 cv
176.534 183.827 175.832 183.554 175.312 183.008 cv
174.793 182.463 174.534 181.697 174.534 180.712 cv
174.534 179.693 174.796 178.902 175.321 178.339 cv
175.846 177.776 176.527 177.495 177.363 177.495 cv
178.173 177.495 178.835 177.77 179.349 178.322 cv
179.862 178.873 180.119 179.649 180.119 180.649 cv
180.119 180.71 180.117 180.801 180.113 180.923 cv
175.595 180.923 li
175.633 181.589 175.821 182.098 176.16 182.452 cv
176.498 182.806 176.92 182.983 177.426 182.983 cv
177.803 182.983 178.124 182.884 178.39 182.686 cv
178.656 182.488 178.867 182.173 179.023 181.739 cv
cp
f
185.344 183.69 mo
185.344 182.8 li
184.873 183.485 184.232 183.827 183.422 183.827 cv
183.064 183.827 182.731 183.758 182.421 183.622 cv
182.111 183.485 181.88 183.313 181.73 183.105 cv
181.58 182.898 181.474 182.644 181.414 182.344 cv
181.372 182.142 181.351 181.823 181.351 181.385 cv
181.351 177.632 li
182.378 177.632 li
182.378 180.992 li
182.378 181.528 182.399 181.889 182.441 182.076 cv
182.505 182.346 182.642 182.558 182.851 182.712 cv
183.06 182.866 183.319 182.943 183.627 182.943 cv
183.935 182.943 184.224 182.864 184.494 182.706 cv
184.764 182.548 184.955 182.333 185.068 182.061 cv
185.18 181.789 185.236 181.395 185.236 180.878 cv
185.236 177.632 li
186.263 177.632 li
186.263 183.69 li
185.344 183.69 li
cp
f
191.825 181.471 mo
192.835 181.602 li
192.724 182.298 192.442 182.843 191.987 183.236 cv
191.533 183.63 190.975 183.827 190.313 183.827 cv
189.484 183.827 188.817 183.556 188.314 183.014 cv
187.81 182.472 187.558 181.695 187.558 180.684 cv
187.558 180.03 187.666 179.457 187.883 178.967 cv
188.1 178.476 188.43 178.108 188.873 177.863 cv
189.316 177.617 189.798 177.495 190.319 177.495 cv
190.977 177.495 191.515 177.661 191.933 177.994 cv
192.352 178.327 192.62 178.799 192.738 179.411 cv
191.739 179.565 li
191.644 179.159 191.476 178.852 191.234 178.647 cv
190.993 178.442 190.701 178.339 190.359 178.339 cv
189.842 178.339 189.421 178.524 189.098 178.895 cv
188.775 179.266 188.613 179.853 188.613 180.655 cv
188.613 181.469 188.769 182.06 189.081 182.429 cv
189.393 182.798 189.8 182.983 190.302 182.983 cv
190.705 182.983 191.041 182.859 191.311 182.612 cv
191.581 182.365 191.753 181.984 191.825 181.471 cv
cp
f
193.719 183.69 mo
193.719 177.632 li
194.746 177.632 li
194.746 183.69 li
193.719 183.69 li
cp
193.719 176.508 mo
193.719 175.327 li
194.746 175.327 li
194.746 176.508 li
193.719 176.508 li
cp
f
196.309 183.69 mo
196.309 177.632 li
197.233 177.632 li
197.233 178.493 li
197.678 177.827 198.321 177.495 199.161 177.495 cv
199.526 177.495 199.862 177.56 200.168 177.691 cv
200.474 177.823 200.703 177.995 200.855 178.208 cv
201.008 178.421 201.114 178.674 201.175 178.967 cv
201.213 179.157 201.232 179.489 201.232 179.965 cv
201.232 183.69 li
200.205 183.69 li
200.205 180.005 li
200.205 179.586 200.165 179.274 200.085 179.066 cv
200.005 178.859 199.864 178.694 199.66 178.57 cv
199.457 178.446 199.218 178.385 198.944 178.385 cv
198.507 178.385 198.13 178.523 197.812 178.801 cv
197.494 179.079 197.336 179.605 197.336 180.381 cv
197.336 183.69 li
196.309 183.69 li
cp
f
203.582 180.079 mo
206.965 180.079 li
206.92 179.569 206.79 179.187 206.577 178.932 cv
206.25 178.537 205.826 178.339 205.305 178.339 cv
204.834 178.339 204.437 178.497 204.116 178.813 cv
203.794 179.128 203.617 179.55 203.582 180.079 cv
cp
206.954 181.739 mo
208.015 181.87 li
207.848 182.49 207.538 182.971 207.085 183.314 cv
206.632 183.656 206.054 183.827 205.351 183.827 cv
204.465 183.827 203.762 183.554 203.243 183.008 cv
202.724 182.463 202.464 181.697 202.464 180.712 cv
202.464 179.693 202.727 178.902 203.251 178.339 cv
203.776 177.776 204.457 177.495 205.294 177.495 cv
206.104 177.495 206.766 177.77 207.279 178.322 cv
207.792 178.873 208.049 179.649 208.049 180.649 cv
208.049 180.71 208.047 180.801 208.043 180.923 cv
203.525 180.923 li
203.563 181.589 203.752 182.098 204.09 182.452 cv
204.429 182.806 204.851 182.983 205.356 182.983 cv
205.733 182.983 206.054 182.884 206.321 182.686 cv
206.587 182.488 206.798 182.173 206.954 181.739 cv
cp
f
302.585 183.69 mo
302.585 175.327 li
303.692 175.327 li
303.692 183.69 li
302.585 183.69 li
cp
f
305.101 181.882 mo
306.116 181.722 li
306.173 182.129 306.332 182.441 306.593 182.657 cv
306.853 182.874 307.217 182.983 307.685 182.983 cv
308.157 182.983 308.507 182.887 308.735 182.695 cv
308.963 182.502 309.077 182.277 309.077 182.019 cv
309.077 181.787 308.976 181.604 308.775 181.471 cv
308.634 181.38 308.284 181.264 307.725 181.123 cv
306.972 180.933 306.45 180.768 306.159 180.629 cv
305.868 180.491 305.648 180.299 305.497 180.053 cv
305.347 179.808 305.272 179.537 305.272 179.24 cv
305.272 178.97 305.334 178.72 305.457 178.49 cv
305.581 178.26 305.749 178.069 305.962 177.917 cv
306.122 177.799 306.34 177.699 306.615 177.617 cv
306.891 177.536 307.187 177.495 307.503 177.495 cv
307.978 177.495 308.395 177.563 308.755 177.7 cv
309.114 177.837 309.379 178.022 309.551 178.256 cv
309.722 178.49 309.84 178.803 309.904 179.195 cv
308.9 179.332 li
308.855 179.02 308.722 178.776 308.504 178.601 cv
308.285 178.426 307.976 178.339 307.577 178.339 cv
307.105 178.339 306.769 178.417 306.567 178.573 cv
306.365 178.729 306.265 178.911 306.265 179.121 cv
306.265 179.254 306.306 179.373 306.39 179.48 cv
306.474 179.59 306.605 179.681 306.784 179.754 cv
306.887 179.792 307.189 179.879 307.691 180.016 cv
308.417 180.21 308.924 180.369 309.211 180.493 cv
309.498 180.616 309.724 180.796 309.887 181.032 cv
310.051 181.267 310.132 181.56 310.132 181.91 cv
310.132 182.252 310.033 182.575 309.833 182.877 cv
309.633 183.179 309.345 183.413 308.969 183.579 cv
308.592 183.744 308.166 183.827 307.691 183.827 cv
306.904 183.827 306.304 183.663 305.891 183.336 cv
305.478 183.009 305.215 182.524 305.101 181.882 cv
cp
f
312.026 180.661 mo
312.026 181.437 312.196 182.018 312.534 182.404 cv
312.873 182.79 313.299 182.983 313.812 182.983 cv
314.322 182.983 314.746 182.789 315.084 182.401 cv
315.423 182.013 315.592 181.421 315.592 180.627 cv
315.592 179.877 315.422 179.31 315.081 178.924 cv
314.741 178.538 314.318 178.345 313.812 178.345 cv
313.299 178.345 312.873 178.537 312.534 178.921 cv
312.196 179.305 312.026 179.885 312.026 180.661 cv
cp
310.971 180.661 mo
310.971 179.539 311.283 178.708 311.907 178.168 cv
312.428 177.719 313.063 177.495 313.812 177.495 cv
314.645 177.495 315.326 177.768 315.854 178.313 cv
316.383 178.859 316.647 179.613 316.647 180.575 cv
316.647 181.355 316.53 181.968 316.296 182.415 cv
316.063 182.862 315.722 183.209 315.275 183.456 cv
314.828 183.703 314.341 183.827 313.812 183.827 cv
312.964 183.827 312.278 183.555 311.755 183.011 cv
311.233 182.467 310.971 181.684 310.971 180.661 cv
cp
f
317.828 183.69 mo
317.828 175.327 li
318.855 175.327 li
318.855 183.69 li
317.828 183.69 li
cp
f
321.223 180.079 mo
324.605 180.079 li
324.56 179.569 324.43 179.187 324.217 178.932 cv
323.89 178.537 323.466 178.339 322.945 178.339 cv
322.474 178.339 322.077 178.497 321.756 178.813 cv
321.434 179.128 321.257 179.55 321.223 180.079 cv
cp
324.594 181.739 mo
325.655 181.87 li
325.488 182.49 325.178 182.971 324.725 183.314 cv
324.273 183.656 323.695 183.827 322.991 183.827 cv
322.105 183.827 321.402 183.554 320.883 183.008 cv
320.364 182.463 320.104 181.697 320.104 180.712 cv
320.104 179.693 320.367 178.902 320.892 178.339 cv
321.416 177.776 322.097 177.495 322.934 177.495 cv
323.744 177.495 324.406 177.77 324.919 178.322 cv
325.433 178.873 325.689 179.649 325.689 180.649 cv
325.689 180.71 325.687 180.801 325.684 180.923 cv
321.165 180.923 li
321.203 181.589 321.392 182.098 321.73 182.452 cv
322.069 182.806 322.491 182.983 322.997 182.983 cv
323.373 182.983 323.695 182.884 323.961 182.686 cv
324.227 182.488 324.438 182.173 324.594 181.739 cv
cp
f
330.915 183.69 mo
330.915 182.8 li
330.443 183.485 329.802 183.827 328.992 183.827 cv
328.635 183.827 328.301 183.758 327.991 183.622 cv
327.681 183.485 327.451 183.313 327.301 183.105 cv
327.151 182.898 327.045 182.644 326.984 182.344 cv
326.942 182.142 326.922 181.823 326.922 181.385 cv
326.922 177.632 li
327.948 177.632 li
327.948 180.992 li
327.948 181.528 327.969 181.889 328.011 182.076 cv
328.076 182.346 328.213 182.558 328.422 182.712 cv
328.631 182.866 328.89 182.943 329.198 182.943 cv
329.506 182.943 329.795 182.864 330.065 182.706 cv
330.335 182.548 330.526 182.333 330.638 182.061 cv
330.75 181.789 330.806 181.395 330.806 180.878 cv
330.806 177.632 li
331.833 177.632 li
331.833 183.69 li
330.915 183.69 li
cp
f
337.395 181.471 mo
338.405 181.602 li
338.295 182.298 338.013 182.843 337.558 183.236 cv
337.104 183.63 336.545 183.827 335.884 183.827 cv
335.055 183.827 334.388 183.556 333.884 183.014 cv
333.38 182.472 333.128 181.695 333.128 180.684 cv
333.128 180.03 333.237 179.457 333.453 178.967 cv
333.67 178.476 334 178.108 334.443 177.863 cv
334.886 177.617 335.368 177.495 335.889 177.495 cv
336.547 177.495 337.085 177.661 337.504 177.994 cv
337.922 178.327 338.19 178.799 338.308 179.411 cv
337.31 179.565 li
337.215 179.159 337.047 178.852 336.805 178.647 cv
336.564 178.442 336.272 178.339 335.929 178.339 cv
335.412 178.339 334.992 178.524 334.669 178.895 cv
334.345 179.266 334.184 179.853 334.184 180.655 cv
334.184 181.469 334.34 182.06 334.651 182.429 cv
334.963 182.798 335.37 182.983 335.872 182.983 cv
336.275 182.983 336.612 182.859 336.882 182.612 cv
337.152 182.365 337.323 181.984 337.395 181.471 cv
cp
f
339.289 183.69 mo
339.289 177.632 li
340.316 177.632 li
340.316 183.69 li
339.289 183.69 li
cp
339.289 176.508 mo
339.289 175.327 li
340.316 175.327 li
340.316 176.508 li
339.289 176.508 li
cp
f
341.879 183.69 mo
341.879 177.632 li
342.804 177.632 li
342.804 178.493 li
343.249 177.827 343.891 177.495 344.732 177.495 cv
345.097 177.495 345.433 177.56 345.739 177.691 cv
346.045 177.823 346.274 177.995 346.426 178.208 cv
346.578 178.421 346.685 178.674 346.746 178.967 cv
346.784 179.157 346.803 179.489 346.803 179.965 cv
346.803 183.69 li
345.776 183.69 li
345.776 180.005 li
345.776 179.586 345.736 179.274 345.656 179.066 cv
345.576 178.859 345.434 178.694 345.231 178.57 cv
345.027 178.446 344.789 178.385 344.515 178.385 cv
344.078 178.385 343.7 178.523 343.383 178.801 cv
343.065 179.079 342.906 179.605 342.906 180.381 cv
342.906 183.69 li
341.879 183.69 li
cp
f
349.153 180.079 mo
352.536 180.079 li
352.49 179.569 352.361 179.187 352.148 178.932 cv
351.821 178.537 351.397 178.339 350.876 178.339 cv
350.404 178.339 350.008 178.497 349.686 178.813 cv
349.365 179.128 349.187 179.55 349.153 180.079 cv
cp
352.524 181.739 mo
353.586 181.87 li
353.418 182.49 353.108 182.971 352.656 183.314 cv
352.203 183.656 351.625 183.827 350.921 183.827 cv
350.035 183.827 349.333 183.554 348.813 183.008 cv
348.294 182.463 348.035 181.697 348.035 180.712 cv
348.035 179.693 348.297 178.902 348.822 178.339 cv
349.347 177.776 350.028 177.495 350.864 177.495 cv
351.674 177.495 352.336 177.77 352.85 178.322 cv
353.363 178.873 353.62 179.649 353.62 180.649 cv
353.62 180.71 353.618 180.801 353.614 180.923 cv
349.096 180.923 li
349.134 181.589 349.322 182.098 349.661 182.452 cv
349.999 182.806 350.421 182.983 350.927 182.983 cv
351.304 182.983 351.625 182.884 351.891 182.686 cv
352.157 182.488 352.369 182.173 352.524 181.739 cv
cp
f
407.692 179.485 mo
409.854 179.485 li
410.569 179.485 411.077 179.352 411.378 179.086 cv
411.678 178.819 411.828 178.445 411.828 177.962 cv
411.828 177.612 411.74 177.312 411.563 177.063 cv
411.386 176.814 411.153 176.65 410.864 176.57 cv
410.678 176.52 410.334 176.496 409.832 176.496 cv
407.692 176.496 li
407.692 179.485 li
cp
406.586 183.872 mo
406.586 175.509 li
409.74 175.509 li
410.296 175.509 410.72 175.535 411.013 175.589 cv
411.423 175.657 411.767 175.787 412.045 175.979 cv
412.323 176.171 412.546 176.44 412.715 176.787 cv
412.885 177.133 412.969 177.513 412.969 177.928 cv
412.969 178.639 412.743 179.241 412.29 179.733 cv
411.838 180.226 411.02 180.472 409.837 180.472 cv
407.692 180.472 li
407.692 183.872 li
406.586 183.872 li
cp
f
414.247 183.872 mo
414.247 175.509 li
415.274 175.509 li
415.274 178.509 li
415.753 177.954 416.358 177.677 417.088 177.677 cv
417.537 177.677 417.927 177.765 418.258 177.942 cv
418.588 178.119 418.825 178.363 418.968 178.675 cv
419.11 178.987 419.182 179.439 419.182 180.033 cv
419.182 183.872 li
418.155 183.872 li
418.155 180.033 li
418.155 179.519 418.044 179.145 417.821 178.912 cv
417.599 178.678 417.284 178.561 416.877 178.561 cv
416.573 178.561 416.287 178.64 416.018 178.798 cv
415.75 178.955 415.559 179.169 415.445 179.439 cv
415.331 179.709 415.274 180.082 415.274 180.557 cv
415.274 183.872 li
414.247 183.872 li
cp
f
421.521 180.261 mo
424.904 180.261 li
424.858 179.751 424.729 179.369 424.516 179.114 cv
424.189 178.719 423.765 178.521 423.243 178.521 cv
422.772 178.521 422.375 178.679 422.054 178.994 cv
421.733 179.31 421.555 179.732 421.521 180.261 cv
cp
424.892 181.921 mo
425.953 182.052 li
425.786 182.672 425.476 183.153 425.023 183.495 cv
424.571 183.838 423.993 184.009 423.289 184.009 cv
422.403 184.009 421.7 183.736 421.181 183.19 cv
420.662 182.644 420.402 181.879 420.402 180.894 cv
420.402 179.875 420.665 179.084 421.19 178.521 cv
421.715 177.958 422.395 177.677 423.232 177.677 cv
424.042 177.677 424.704 177.952 425.217 178.504 cv
425.731 179.055 425.988 179.831 425.988 180.831 cv
425.988 180.892 425.986 180.983 425.982 181.105 cv
421.464 181.105 li
421.502 181.771 421.69 182.28 422.028 182.634 cv
422.367 182.988 422.789 183.165 423.295 183.165 cv
423.671 183.165 423.993 183.066 424.259 182.868 cv
424.525 182.67 424.736 182.354 424.892 181.921 cv
cp
f
427.243 183.872 mo
427.243 177.813 li
428.167 177.813 li
428.167 178.675 li
428.612 178.009 429.254 177.677 430.095 177.677 cv
430.46 177.677 430.796 177.742 431.102 177.873 cv
431.408 178.005 431.637 178.177 431.789 178.39 cv
431.941 178.603 432.048 178.856 432.109 179.148 cv
432.147 179.339 432.166 179.671 432.166 180.147 cv
432.166 183.872 li
431.139 183.872 li
431.139 180.187 li
431.139 179.768 431.099 179.455 431.019 179.248 cv
430.939 179.041 430.798 178.875 430.594 178.752 cv
430.391 178.628 430.152 178.566 429.878 178.566 cv
429.441 178.566 429.063 178.705 428.746 178.983 cv
428.428 179.261 428.269 179.787 428.269 180.563 cv
428.269 183.872 li
427.243 183.872 li
cp
f
433.695 186.205 mo
433.581 185.241 li
433.805 185.302 434.001 185.332 434.168 185.332 cv
434.396 185.332 434.579 185.294 434.716 185.218 cv
434.853 185.142 434.965 185.036 435.052 184.899 cv
435.117 184.796 435.222 184.541 435.366 184.134 cv
435.385 184.077 435.416 183.994 435.457 183.883 cv
433.158 177.813 li
434.265 177.813 li
435.526 181.322 li
435.689 181.767 435.836 182.235 435.965 182.725 cv
436.083 182.254 436.224 181.793 436.387 181.345 cv
437.682 177.813 li
438.709 177.813 li
436.404 183.975 li
436.157 184.64 435.965 185.098 435.828 185.349 cv
435.646 185.688 435.436 185.936 435.201 186.094 cv
434.965 186.252 434.683 186.331 434.356 186.331 cv
434.159 186.331 433.938 186.289 433.695 186.205 cv
cp
f
439.559 183.872 mo
439.559 175.509 li
440.586 175.509 li
440.586 183.872 li
439.559 183.872 li
cp
f
446.045 180.831 mo
445.673 180.983 445.114 181.113 444.368 181.219 cv
443.946 181.28 443.647 181.348 443.473 181.425 cv
443.298 181.501 443.163 181.612 443.067 181.758 cv
442.972 181.905 442.925 182.067 442.925 182.246 cv
442.925 182.52 443.029 182.748 443.236 182.931 cv
443.443 183.113 443.746 183.204 444.146 183.204 cv
444.541 183.204 444.893 183.118 445.201 182.945 cv
445.509 182.772 445.735 182.535 445.88 182.235 cv
445.99 182.003 446.045 181.66 446.045 181.208 cv
446.045 180.831 li
cp
446.131 183.125 mo
445.751 183.448 445.385 183.676 445.033 183.809 cv
444.681 183.942 444.304 184.009 443.9 184.009 cv
443.235 184.009 442.723 183.846 442.366 183.521 cv
442.008 183.196 441.83 182.78 441.83 182.275 cv
441.83 181.978 441.897 181.707 442.032 181.462 cv
442.167 181.216 442.344 181.019 442.563 180.871 cv
442.781 180.723 443.028 180.611 443.301 180.535 cv
443.503 180.481 443.807 180.43 444.214 180.381 cv
445.043 180.282 445.654 180.164 446.045 180.027 cv
446.049 179.886 446.051 179.797 446.051 179.759 cv
446.051 179.34 445.954 179.046 445.76 178.875 cv
445.498 178.643 445.108 178.527 444.591 178.527 cv
444.108 178.527 443.751 178.611 443.521 178.78 cv
443.291 178.95 443.121 179.249 443.01 179.679 cv
442.006 179.542 li
442.098 179.112 442.248 178.765 442.457 178.501 cv
442.666 178.237 442.969 178.033 443.364 177.89 cv
443.76 177.748 444.218 177.677 444.739 177.677 cv
445.256 177.677 445.676 177.737 446 177.859 cv
446.323 177.981 446.561 178.134 446.713 178.318 cv
446.865 178.503 446.971 178.736 447.032 179.017 cv
447.067 179.192 447.084 179.508 447.084 179.964 cv
447.084 181.333 li
447.084 182.288 447.106 182.892 447.149 183.145 cv
447.193 183.397 447.28 183.64 447.409 183.872 cv
446.336 183.872 li
446.23 183.659 446.161 183.41 446.131 183.125 cv
cp
f
448.652 183.872 mo
448.652 175.509 li
449.679 175.509 li
449.679 183.872 li
448.652 183.872 li
cp
f
455.139 180.831 mo
454.766 180.983 454.207 181.113 453.462 181.219 cv
453.039 181.28 452.741 181.348 452.566 181.425 cv
452.391 181.501 452.256 181.612 452.161 181.758 cv
452.066 181.905 452.018 182.067 452.018 182.246 cv
452.018 182.52 452.122 182.748 452.329 182.931 cv
452.536 183.113 452.84 183.204 453.239 183.204 cv
453.635 183.204 453.986 183.118 454.294 182.945 cv
454.603 182.772 454.829 182.535 454.973 182.235 cv
455.084 182.003 455.139 181.66 455.139 181.208 cv
455.139 180.831 li
cp
455.224 183.125 mo
454.844 183.448 454.478 183.676 454.126 183.809 cv
453.774 183.942 453.397 184.009 452.994 184.009 cv
452.328 184.009 451.817 183.846 451.459 183.521 cv
451.102 183.196 450.923 182.78 450.923 182.275 cv
450.923 181.978 450.99 181.707 451.125 181.462 cv
451.26 181.216 451.437 181.019 451.656 180.871 cv
451.875 180.723 452.121 180.611 452.395 180.535 cv
452.596 180.481 452.901 180.43 453.308 180.381 cv
454.137 180.282 454.747 180.164 455.139 180.027 cv
455.143 179.886 455.144 179.797 455.144 179.759 cv
455.144 179.34 455.047 179.046 454.854 178.875 cv
454.591 178.643 454.201 178.527 453.684 178.527 cv
453.201 178.527 452.844 178.611 452.614 178.78 cv
452.384 178.95 452.214 179.249 452.104 179.679 cv
451.1 179.542 li
451.191 179.112 451.341 178.765 451.55 178.501 cv
451.76 178.237 452.062 178.033 452.458 177.89 cv
452.853 177.748 453.311 177.677 453.832 177.677 cv
454.35 177.677 454.77 177.737 455.093 177.859 cv
455.416 177.981 455.654 178.134 455.806 178.318 cv
455.958 178.503 456.065 178.736 456.126 179.017 cv
456.16 179.192 456.177 179.508 456.177 179.964 cv
456.177 181.333 li
456.177 182.288 456.199 182.892 456.243 183.145 cv
456.286 183.397 456.373 183.64 456.502 183.872 cv
455.43 183.872 li
455.323 183.659 455.255 183.41 455.224 183.125 cv
cp
f
457.769 183.872 mo
457.769 177.813 li
458.693 177.813 li
458.693 178.675 li
459.138 178.009 459.781 177.677 460.621 177.677 cv
460.986 177.677 461.322 177.742 461.628 177.873 cv
461.934 178.005 462.163 178.177 462.315 178.39 cv
462.467 178.603 462.574 178.856 462.635 179.148 cv
462.673 179.339 462.692 179.671 462.692 180.147 cv
462.692 183.872 li
461.665 183.872 li
461.665 180.187 li
461.665 179.768 461.625 179.455 461.545 179.248 cv
461.465 179.041 461.324 178.875 461.12 178.752 cv
460.917 178.628 460.678 178.566 460.404 178.566 cv
459.967 178.566 459.589 178.705 459.272 178.983 cv
458.954 179.261 458.795 179.787 458.795 180.563 cv
458.795 183.872 li
457.769 183.872 li
cp
f
464.272 183.872 mo
464.272 177.813 li
465.299 177.813 li
465.299 183.872 li
464.272 183.872 li
cp
464.272 176.69 mo
464.272 175.509 li
465.299 175.509 li
465.299 176.69 li
464.272 176.69 li
cp
f
466.862 183.872 mo
466.862 177.813 li
467.786 177.813 li
467.786 178.675 li
468.231 178.009 468.874 177.677 469.714 177.677 cv
470.08 177.677 470.415 177.742 470.721 177.873 cv
471.027 178.005 471.257 178.177 471.409 178.39 cv
471.561 178.603 471.667 178.856 471.728 179.148 cv
471.766 179.339 471.785 179.671 471.785 180.147 cv
471.785 183.872 li
470.758 183.872 li
470.758 180.187 li
470.758 179.768 470.718 179.455 470.639 179.248 cv
470.559 179.041 470.417 178.875 470.214 178.752 cv
470.01 178.628 469.771 178.566 469.498 178.566 cv
469.06 178.566 468.683 178.705 468.365 178.983 cv
468.048 179.261 467.889 179.787 467.889 180.563 cv
467.889 183.872 li
466.862 183.872 li
cp
f
474.136 180.261 mo
477.518 180.261 li
477.473 179.751 477.344 179.369 477.131 179.114 cv
476.803 178.719 476.379 178.521 475.858 178.521 cv
475.387 178.521 474.99 178.679 474.669 178.994 cv
474.348 179.31 474.17 179.732 474.136 180.261 cv
cp
477.507 181.921 mo
478.568 182.052 li
478.401 182.672 478.091 183.153 477.638 183.495 cv
477.186 183.838 476.608 184.009 475.904 184.009 cv
475.018 184.009 474.315 183.736 473.796 183.19 cv
473.277 182.644 473.017 181.879 473.017 180.894 cv
473.017 179.875 473.28 179.084 473.805 178.521 cv
474.33 177.958 475.01 177.677 475.847 177.677 cv
476.657 177.677 477.319 177.952 477.832 178.504 cv
478.346 179.055 478.602 179.831 478.602 180.831 cv
478.602 180.892 478.6 180.983 478.597 181.105 cv
474.079 181.105 li
474.117 181.771 474.305 182.28 474.643 182.634 cv
474.982 182.988 475.404 183.165 475.91 183.165 cv
476.286 183.165 476.608 183.066 476.874 182.868 cv
477.14 182.67 477.351 182.354 477.507 181.921 cv
cp
f
53.1205 346.893 mo
53.1205 339.517 li
50.365 339.517 li
50.365 338.53 li
56.994 338.53 li
56.994 339.517 li
54.2272 339.517 li
54.2272 346.893 li
53.1205 346.893 li
cp
f
57.553 346.893 mo
57.553 340.835 li
58.4772 340.835 li
58.4772 341.753 li
58.713 341.323 58.9308 341.04 59.1304 340.903 cv
59.3301 340.766 59.5497 340.698 59.7893 340.698 cv
60.1354 340.698 60.4872 340.808 60.8447 341.029 cv
60.491 341.981 li
60.24 341.833 59.989 341.759 59.738 341.759 cv
59.5136 341.759 59.312 341.825 59.1333 341.96 cv
58.9545 342.095 58.8271 342.284 58.751 342.523 cv
58.6369 342.888 58.5799 343.288 58.5799 343.721 cv
58.5799 346.893 li
57.553 346.893 li
cp
f
61.4095 349.226 mo
61.2954 348.262 li
61.5197 348.323 61.7156 348.353 61.883 348.353 cv
62.1112 348.353 62.2937 348.315 62.4306 348.239 cv
62.5675 348.163 62.6798 348.057 62.7672 347.92 cv
62.8318 347.817 62.9364 347.562 63.081 347.155 cv
63.1 347.098 63.1303 347.015 63.1722 346.904 cv
60.8732 340.835 li
61.9799 340.835 li
63.2407 344.343 li
63.4042 344.788 63.5507 345.256 63.6799 345.746 cv
63.7979 345.275 63.9385 344.815 64.1021 344.366 cv
65.3971 340.835 li
66.424 340.835 li
64.1192 346.996 li
63.872 347.661 63.6799 348.12 63.5431 348.371 cv
63.3605 348.709 63.1513 348.956 62.9155 349.114 cv
62.6798 349.272 62.3983 349.352 62.0713 349.352 cv
61.8734 349.352 61.6529 349.31 61.4095 349.226 cv
cp
f
68.2266 343.898 mo
68.2266 344.678 68.3844 345.254 68.7001 345.626 cv
69.0158 345.999 69.398 346.186 69.8468 346.186 cv
70.3031 346.186 70.6939 345.992 71.0191 345.606 cv
71.3443 345.22 71.5069 344.623 71.5069 343.812 cv
71.5069 343.04 71.3481 342.462 71.0305 342.078 cv
70.7129 341.694 70.3336 341.502 69.8925 341.502 cv
69.455 341.502 69.0681 341.705 68.7315 342.114 cv
68.395 342.523 68.2266 343.118 68.2266 343.898 cv
cp
67.2967 349.215 mo
67.2967 340.835 li
68.2324 340.835 li
68.2324 341.622 li
68.4529 341.314 68.702 341.082 68.9797 340.928 cv
69.2573 340.774 69.5938 340.698 69.9894 340.698 cv
70.5066 340.698 70.963 340.831 71.3585 341.097 cv
71.7541 341.363 72.0526 341.738 72.2541 342.223 cv
72.4558 342.708 72.5565 343.24 72.5565 343.818 cv
72.5565 344.438 72.4453 344.995 72.2228 345.492 cv
72.0003 345.988 71.6771 346.368 71.253 346.632 cv
70.829 346.897 70.3831 347.03 69.9152 347.03 cv
69.5729 347.03 69.2658 346.958 68.9939 346.813 cv
68.722 346.669 68.4985 346.486 68.3236 346.266 cv
68.3236 349.215 li
67.2967 349.215 li
cp
f
76.0364 345.975 mo
76.1847 346.882 li
75.8957 346.942 75.6371 346.973 75.4089 346.973 cv
75.0362 346.973 74.7472 346.914 74.5417 346.796 cv
74.3364 346.678 74.1919 346.522 74.1082 346.33 cv
74.0246 346.138 73.9827 345.735 73.9827 345.119 cv
73.9827 341.633 li
73.2297 341.633 li
73.2297 340.835 li
73.9827 340.835 li
73.9827 339.334 li
75.0039 338.718 li
75.0039 340.835 li
76.0364 340.835 li
76.0364 341.633 li
75.0039 341.633 li
75.0039 345.176 li
75.0039 345.469 75.0219 345.657 75.058 345.741 cv
75.0942 345.824 75.1532 345.891 75.2349 345.94 cv
75.3166 345.99 75.4337 346.014 75.5857 346.014 cv
75.6999 346.014 75.8501 346.001 76.0364 345.975 cv
cp
f
77.7137 343.864 mo
77.7137 344.64 77.8829 345.22 78.2213 345.606 cv
78.5598 345.992 78.9858 346.186 79.4992 346.186 cv
80.0089 346.186 80.4329 345.992 80.7714 345.604 cv
81.1098 345.216 81.2791 344.624 81.2791 343.83 cv
81.2791 343.08 81.1089 342.512 80.7686 342.126 cv
80.4281 341.74 80.0051 341.548 79.4992 341.548 cv
78.9858 341.548 78.5598 341.74 78.2213 342.124 cv
77.8829 342.508 77.7137 343.088 77.7137 343.864 cv
cp
76.6583 343.864 mo
76.6583 342.742 76.9701 341.911 77.5938 341.371 cv
78.1149 340.922 78.75 340.698 79.4992 340.698 cv
80.3321 340.698 81.0128 340.97 81.5415 341.515 cv
82.0702 342.061 82.3345 342.816 82.3345 343.778 cv
82.3345 344.558 82.2175 345.17 81.9836 345.617 cv
81.7498 346.064 81.4094 346.412 80.9625 346.659 cv
80.5156 346.906 80.0278 347.03 79.4992 347.03 cv
78.6511 347.03 77.9655 346.758 77.4426 346.214 cv
76.9197 345.67 76.6583 344.887 76.6583 343.864 cv
cp
f
84.4681 343.898 mo
84.4681 344.678 84.6259 345.254 84.9416 345.626 cv
85.2572 345.999 85.6394 346.186 86.0882 346.186 cv
86.5446 346.186 86.9353 345.992 87.2605 345.606 cv
87.5857 345.22 87.7483 344.623 87.7483 343.812 cv
87.7483 343.04 87.5895 342.462 87.2719 342.078 cv
86.9544 341.694 86.575 341.502 86.1338 341.502 cv
85.6965 341.502 85.3095 341.705 84.9729 342.114 cv
84.6363 342.523 84.4681 343.118 84.4681 343.898 cv
cp
83.5382 349.215 mo
83.5382 340.835 li
84.4737 340.835 li
84.4737 341.622 li
84.6944 341.314 84.9434 341.082 85.2211 340.928 cv
85.4987 340.774 85.8353 340.698 86.2308 340.698 cv
86.7481 340.698 87.2044 340.831 87.6 341.097 cv
87.9955 341.363 88.294 341.738 88.4956 342.223 cv
88.6972 342.708 88.7979 343.24 88.7979 343.818 cv
88.7979 344.438 88.6867 344.995 88.4643 345.492 cv
88.2417 345.988 87.9185 346.368 87.4945 346.632 cv
87.0704 346.897 86.6244 347.03 86.1566 347.03 cv
85.8144 347.03 85.5072 346.958 85.2353 346.813 cv
84.9634 346.669 84.74 346.486 84.5651 346.266 cv
84.5651 349.215 li
83.5382 349.215 li
cp
f
90.0359 346.893 mo
90.0359 338.53 li
91.0627 338.53 li
91.0627 341.531 li
91.542 340.975 92.1467 340.698 92.8769 340.698 cv
93.3256 340.698 93.7154 340.785 94.0463 340.962 cv
94.3772 341.139 94.614 341.384 94.7565 341.696 cv
94.8992 342.008 94.9705 342.46 94.9705 343.054 cv
94.9705 346.893 li
93.9437 346.893 li
93.9437 343.054 li
93.9437 342.54 93.8324 342.166 93.6099 341.932 cv
93.3874 341.698 93.0727 341.582 92.6658 341.582 cv
92.3615 341.582 92.0753 341.66 91.8072 341.818 cv
91.5391 341.975 91.348 342.19 91.2339 342.46 cv
91.1198 342.73 91.0627 343.103 91.0627 343.579 cv
91.0627 346.893 li
90.0359 346.893 li
cp
f
100.401 343.852 mo
100.029 344.004 99.4697 344.134 98.7242 344.24 cv
98.302 344.301 98.0035 344.37 97.8286 344.446 cv
97.6536 344.522 97.5187 344.632 97.4235 344.778 cv
97.3284 344.925 97.2809 345.088 97.2809 345.267 cv
97.2809 345.541 97.3846 345.769 97.5919 345.952 cv
97.7991 346.134 98.1024 346.226 98.5017 346.226 cv
98.8973 346.226 99.2491 346.138 99.5571 345.965 cv
99.8652 345.792 100.091 345.556 100.236 345.256 cv
100.346 345.024 100.401 344.681 100.401 344.229 cv
100.401 343.852 li
cp
100.487 346.146 mo
100.107 346.469 99.7406 346.697 99.3889 346.83 cv
99.037 346.963 98.6595 347.03 98.2565 347.03 cv
97.5909 347.03 97.0794 346.866 96.7218 346.541 cv
96.3643 346.216 96.1856 345.801 96.1856 345.296 cv
96.1856 344.999 96.2532 344.727 96.3881 344.482 cv
96.5231 344.236 96.6999 344.041 96.9186 343.892 cv
97.1374 343.744 97.3836 343.632 97.6574 343.556 cv
97.859 343.502 98.1633 343.451 98.5702 343.402 cv
99.3993 343.303 100.01 343.185 100.401 343.048 cv
100.405 342.907 100.407 342.818 100.407 342.78 cv
100.407 342.362 100.31 342.067 100.116 341.896 cv
99.8538 341.664 99.4639 341.548 98.9467 341.548 cv
98.4637 341.548 98.1071 341.631 97.877 341.801 cv
97.647 341.97 97.4768 342.27 97.3665 342.7 cv
96.3625 342.563 li
96.4537 342.133 96.604 341.785 96.8131 341.521 cv
97.0223 341.257 97.3246 341.053 97.7202 340.911 cv
98.1157 340.768 98.574 340.698 99.095 340.698 cv
99.6122 340.698 100.033 340.758 100.356 340.88 cv
100.679 341.002 100.917 341.154 101.069 341.338 cv
101.221 341.523 101.328 341.757 101.388 342.038 cv
101.423 342.213 101.44 342.529 101.44 342.985 cv
101.44 344.354 li
101.44 345.309 101.462 345.912 101.505 346.165 cv
101.549 346.418 101.636 346.661 101.765 346.893 cv
100.692 346.893 li
100.586 346.68 100.517 346.431 100.487 346.146 cv
cp
f
103.031 346.893 mo
103.031 340.835 li
103.955 340.835 li
103.955 341.696 li
104.4 341.03 105.043 340.698 105.884 340.698 cv
106.249 340.698 106.584 340.762 106.891 340.893 cv
107.197 341.025 107.426 341.198 107.578 341.411 cv
107.73 341.624 107.837 341.877 107.897 342.169 cv
107.936 342.36 107.954 342.692 107.954 343.168 cv
107.954 346.893 li
106.928 346.893 li
106.928 343.208 li
106.928 342.789 106.888 342.476 106.808 342.268 cv
106.728 342.061 106.586 341.896 106.383 341.772 cv
106.179 341.648 105.941 341.588 105.667 341.588 cv
105.23 341.588 104.852 341.726 104.534 342.004 cv
104.217 342.282 104.058 342.808 104.058 343.584 cv
104.058 346.893 li
103.031 346.893 li
cp
f
234.59 346.868 mo
234.59 338.505 li
235.697 338.505 li
235.697 345.881 li
239.816 345.881 li
239.816 346.868 li
234.59 346.868 li
cp
f
240.523 349.202 mo
240.409 348.237 li
240.634 348.298 240.83 348.329 240.997 348.329 cv
241.225 348.329 241.408 348.291 241.545 348.215 cv
241.681 348.139 241.794 348.032 241.881 347.895 cv
241.946 347.792 242.05 347.538 242.195 347.131 cv
242.214 347.074 242.244 346.99 242.286 346.88 cv
239.987 340.81 li
241.094 340.81 li
242.355 344.318 li
242.518 344.763 242.665 345.231 242.794 345.722 cv
242.912 345.25 243.052 344.79 243.216 344.341 cv
244.511 340.81 li
245.538 340.81 li
243.233 346.971 li
242.986 347.637 242.794 348.095 242.657 348.346 cv
242.474 348.684 242.265 348.932 242.029 349.09 cv
241.794 349.248 241.512 349.327 241.185 349.327 cv
240.987 349.327 240.767 349.285 240.523 349.202 cv
cp
f
246 345.06 mo
247.015 344.9 li
247.072 345.307 247.232 345.619 247.493 345.836 cv
247.753 346.052 248.116 346.161 248.584 346.161 cv
249.056 346.161 249.406 346.065 249.634 345.873 cv
249.862 345.681 249.976 345.455 249.976 345.197 cv
249.976 344.965 249.875 344.782 249.674 344.649 cv
249.533 344.558 249.183 344.442 248.624 344.301 cv
247.871 344.111 247.35 343.946 247.059 343.808 cv
246.768 343.669 246.548 343.477 246.397 343.232 cv
246.247 342.986 246.171 342.715 246.171 342.419 cv
246.171 342.149 246.234 341.898 246.357 341.668 cv
246.481 341.438 246.648 341.247 246.861 341.095 cv
247.021 340.977 247.24 340.877 247.516 340.796 cv
247.791 340.714 248.086 340.673 248.402 340.673 cv
248.877 340.673 249.295 340.741 249.655 340.878 cv
250.014 341.015 250.279 341.201 250.45 341.435 cv
250.621 341.668 250.739 341.981 250.803 342.373 cv
249.799 342.51 li
249.754 342.198 249.622 341.955 249.404 341.78 cv
249.185 341.605 248.875 341.517 248.476 341.517 cv
248.004 341.517 247.668 341.595 247.466 341.751 cv
247.265 341.907 247.164 342.09 247.164 342.299 cv
247.164 342.432 247.206 342.552 247.289 342.658 cv
247.373 342.769 247.504 342.86 247.683 342.932 cv
247.786 342.97 248.088 343.058 248.59 343.194 cv
249.316 343.388 249.824 343.547 250.111 343.671 cv
250.398 343.794 250.623 343.974 250.786 344.21 cv
250.95 344.446 251.032 344.739 251.032 345.088 cv
251.032 345.431 250.933 345.753 250.733 346.055 cv
250.533 346.358 250.244 346.592 249.868 346.757 cv
249.491 346.923 249.065 347.005 248.59 347.005 cv
247.803 347.005 247.204 346.842 246.791 346.515 cv
246.378 346.188 246.114 345.703 246 345.06 cv
cp
f
252.258 346.868 mo
252.258 340.81 li
253.285 340.81 li
253.285 346.868 li
252.258 346.868 li
cp
252.258 339.686 mo
252.258 338.505 li
253.285 338.505 li
253.285 339.686 li
252.258 339.686 li
cp
f
254.848 346.868 mo
254.848 340.81 li
255.772 340.81 li
255.772 341.671 li
256.217 341.006 256.86 340.673 257.7 340.673 cv
258.066 340.673 258.402 340.739 258.708 340.87 cv
259.014 341.001 259.243 341.173 259.395 341.386 cv
259.547 341.599 259.653 341.852 259.714 342.145 cv
259.752 342.335 259.771 342.668 259.771 343.143 cv
259.771 346.868 li
258.744 346.868 li
258.744 343.183 li
258.744 342.765 258.704 342.452 258.625 342.245 cv
258.545 342.037 258.404 341.872 258.2 341.748 cv
257.997 341.625 257.757 341.563 257.484 341.563 cv
257.046 341.563 256.67 341.702 256.352 341.979 cv
256.035 342.257 255.875 342.784 255.875 343.56 cv
255.875 346.868 li
254.848 346.868 li
cp
f
262.122 343.257 mo
265.505 343.257 li
265.459 342.748 265.33 342.365 265.117 342.111 cv
264.789 341.715 264.365 341.517 263.844 341.517 cv
263.373 341.517 262.977 341.675 262.656 341.991 cv
262.335 342.306 262.156 342.729 262.122 343.257 cv
cp
265.493 344.917 mo
266.554 345.049 li
266.387 345.668 266.077 346.149 265.624 346.492 cv
265.172 346.834 264.594 347.005 263.89 347.005 cv
263.004 347.005 262.302 346.732 261.783 346.187 cv
261.264 345.641 261.003 344.875 261.003 343.89 cv
261.003 342.871 261.266 342.08 261.791 341.517 cv
262.316 340.954 262.996 340.673 263.833 340.673 cv
264.643 340.673 265.305 340.949 265.818 341.5 cv
266.332 342.052 266.588 342.827 266.588 343.828 cv
266.588 343.889 266.586 343.98 266.583 344.101 cv
262.065 344.101 li
262.103 344.767 262.291 345.277 262.629 345.63 cv
262.968 345.984 263.39 346.161 263.896 346.161 cv
264.272 346.161 264.594 346.062 264.86 345.864 cv
265.126 345.666 265.337 345.351 265.493 344.917 cv
cp
f
394.784 348.302 mo
397.619 348.302 li
396.746 345.986 li
396.48 345.282 396.282 344.704 396.153 344.252 cv
396.047 344.788 395.896 345.32 395.702 345.849 cv
394.784 348.302 li
cp
392.371 351.736 mo
395.583 343.373 li
396.775 343.373 li
400.198 351.736 li
398.937 351.736 li
397.961 349.203 li
394.464 349.203 li
393.546 351.736 li
392.371 351.736 li
cp
f
400.939 351.736 mo
400.939 345.678 li
401.864 345.678 li
401.864 346.596 li
402.099 346.167 402.317 345.883 402.517 345.746 cv
402.716 345.609 402.936 345.541 403.176 345.541 cv
403.522 345.541 403.874 345.651 404.231 345.872 cv
403.877 346.825 li
403.626 346.676 403.375 346.602 403.124 346.602 cv
402.9 346.602 402.698 346.67 402.52 346.805 cv
402.341 346.94 402.213 347.127 402.137 347.366 cv
402.023 347.732 401.966 348.131 401.966 348.565 cv
401.966 351.736 li
400.939 351.736 li
cp
f
405.503 348.599 mo
405.503 349.394 405.661 349.974 405.977 350.339 cv
406.292 350.704 406.688 350.886 407.163 350.886 cv
407.635 350.886 408.03 350.705 408.35 350.342 cv
408.669 349.978 408.829 349.409 408.829 348.633 cv
408.829 347.891 408.665 347.332 408.336 346.956 cv
408.007 346.579 407.61 346.391 407.146 346.391 cv
406.69 346.391 406.302 346.576 405.982 346.947 cv
405.663 347.318 405.503 347.869 405.503 348.599 cv
cp
404.653 352.238 mo
405.652 352.387 li
405.693 352.695 405.809 352.919 406 353.06 cv
406.254 353.25 406.602 353.345 407.043 353.345 cv
407.519 353.345 407.886 353.25 408.144 353.06 cv
408.403 352.87 408.578 352.603 408.669 352.261 cv
408.723 352.052 408.747 351.613 408.743 350.943 cv
408.295 351.472 407.736 351.736 407.066 351.736 cv
406.233 351.736 405.589 351.436 405.132 350.835 cv
404.676 350.234 404.448 349.513 404.448 348.673 cv
404.448 348.095 404.552 347.561 404.762 347.073 cv
404.971 346.584 405.274 346.207 405.672 345.94 cv
406.069 345.674 406.536 345.541 407.072 345.541 cv
407.787 345.541 408.376 345.83 408.84 346.408 cv
408.84 345.678 li
409.787 345.678 li
409.787 350.915 li
409.787 351.858 409.691 352.526 409.499 352.92 cv
409.307 353.314 409.003 353.625 408.587 353.853 cv
408.17 354.081 407.658 354.195 407.049 354.195 cv
406.327 354.195 405.743 354.033 405.298 353.707 cv
404.853 353.382 404.638 352.893 404.653 352.238 cv
cp
f
411.345 351.736 mo
411.345 345.678 li
412.372 345.678 li
412.372 351.736 li
411.345 351.736 li
cp
411.345 344.554 mo
411.345 343.373 li
412.372 343.373 li
412.372 344.554 li
411.345 344.554 li
cp
f
413.935 351.736 mo
413.935 345.678 li
414.859 345.678 li
414.859 346.539 li
415.304 345.874 415.947 345.541 416.787 345.541 cv
417.152 345.541 417.488 345.607 417.794 345.738 cv
418.1 345.869 418.329 346.041 418.482 346.254 cv
418.634 346.467 418.74 346.72 418.801 347.013 cv
418.839 347.203 418.858 347.536 418.858 348.011 cv
418.858 351.736 li
417.831 351.736 li
417.831 348.051 li
417.831 347.633 417.791 347.32 417.711 347.113 cv
417.631 346.905 417.49 346.74 417.286 346.616 cv
417.083 346.493 416.844 346.431 416.57 346.431 cv
416.133 346.431 415.756 346.57 415.438 346.847 cv
415.12 347.125 414.962 347.652 414.962 348.428 cv
414.962 351.736 li
413.935 351.736 li
cp
f
420.438 351.736 mo
420.438 345.678 li
421.465 345.678 li
421.465 351.736 li
420.438 351.736 li
cp
420.438 344.554 mo
420.438 343.373 li
421.465 343.373 li
421.465 344.554 li
420.438 344.554 li
cp
f
423.028 351.736 mo
423.028 345.678 li
423.952 345.678 li
423.952 346.539 li
424.397 345.874 425.04 345.541 425.881 345.541 cv
426.246 345.541 426.581 345.607 426.887 345.738 cv
427.194 345.869 427.423 346.041 427.575 346.254 cv
427.727 346.467 427.834 346.72 427.894 347.013 cv
427.932 347.203 427.951 347.536 427.951 348.011 cv
427.951 351.736 li
426.925 351.736 li
426.925 348.051 li
426.925 347.633 426.885 347.32 426.805 347.113 cv
426.725 346.905 426.583 346.74 426.38 346.616 cv
426.176 346.493 425.938 346.431 425.664 346.431 cv
425.226 346.431 424.849 346.57 424.531 346.847 cv
424.214 347.125 424.055 347.652 424.055 348.428 cv
424.055 351.736 li
423.028 351.736 li
cp
f
430.302 348.125 mo
433.685 348.125 li
433.639 347.616 433.51 347.233 433.297 346.979 cv
432.97 346.583 432.546 346.385 432.025 346.385 cv
431.553 346.385 431.156 346.543 430.835 346.859 cv
430.514 347.174 430.336 347.597 430.302 348.125 cv
cp
433.673 349.785 mo
434.734 349.917 li
434.567 350.536 434.257 351.018 433.804 351.36 cv
433.352 351.702 432.774 351.873 432.07 351.873 cv
431.184 351.873 430.481 351.6 429.962 351.055 cv
429.443 350.509 429.184 349.743 429.184 348.758 cv
429.184 347.739 429.446 346.948 429.971 346.385 cv
430.496 345.822 431.177 345.541 432.013 345.541 cv
432.823 345.541 433.485 345.817 433.998 346.368 cv
434.512 346.92 434.769 347.695 434.769 348.696 cv
434.769 348.757 434.767 348.848 434.763 348.97 cv
430.245 348.97 li
430.283 349.635 430.471 350.145 430.809 350.498 cv
431.148 350.852 431.57 351.029 432.076 351.029 cv
432.452 351.029 432.774 350.93 433.04 350.732 cv
433.306 350.535 433.517 350.219 433.673 349.785 cv
cp
f
52.8178 479.578 mo
52.8178 471.215 li
53.9245 471.215 li
53.9245 474.649 li
58.2716 474.649 li
58.2716 471.215 li
59.3783 471.215 li
59.3783 479.578 li
58.2716 479.578 li
58.2716 475.636 li
53.9245 475.636 li
53.9245 479.578 li
52.8178 479.578 li
cp
f
61.0954 479.578 mo
61.0954 473.52 li
62.1223 473.52 li
62.1223 479.578 li
61.0954 479.578 li
cp
61.0954 472.396 mo
61.0954 471.215 li
62.1223 471.215 li
62.1223 472.396 li
61.0954 472.396 li
cp
f
63.2746 477.77 mo
64.29 477.61 li
64.3471 478.017 64.5059 478.329 64.7664 478.546 cv
65.0269 478.763 65.3911 478.871 65.8588 478.871 cv
66.3304 478.871 66.6804 478.775 66.9086 478.583 cv
67.1367 478.391 67.2508 478.165 67.2508 477.907 cv
67.2508 477.675 67.15 477.492 66.9485 477.359 cv
66.8078 477.268 66.4579 477.152 65.8988 477.011 cv
65.1458 476.821 64.6238 476.657 64.3329 476.518 cv
64.0419 476.379 63.8214 476.187 63.6711 475.942 cv
63.5209 475.696 63.4457 475.425 63.4457 475.129 cv
63.4457 474.859 63.5076 474.609 63.6312 474.378 cv
63.7548 474.148 63.9231 473.957 64.136 473.805 cv
64.2958 473.687 64.5135 473.587 64.7892 473.506 cv
65.0649 473.424 65.3606 473.383 65.6763 473.383 cv
66.1517 473.383 66.5691 473.451 66.9285 473.588 cv
67.2879 473.725 67.5532 473.911 67.7244 474.145 cv
67.8954 474.378 68.0133 474.691 68.078 475.083 cv
67.074 475.22 li
67.0283 474.908 66.8962 474.665 66.6775 474.49 cv
66.4589 474.315 66.1498 474.227 65.7505 474.227 cv
65.2788 474.227 64.9423 474.305 64.7407 474.461 cv
64.5392 474.617 64.4384 474.8 64.4384 475.009 cv
64.4384 475.142 64.4802 475.262 64.5639 475.368 cv
64.6476 475.478 64.7788 475.57 64.9576 475.642 cv
65.0602 475.68 65.3626 475.768 65.8646 475.904 cv
66.591 476.098 67.0977 476.257 67.3849 476.381 cv
67.672 476.504 67.8974 476.684 68.0609 476.92 cv
68.2244 477.156 68.3062 477.448 68.3062 477.798 cv
68.3062 478.141 68.2064 478.463 68.0067 478.765 cv
67.807 479.068 67.5189 479.302 67.1424 479.467 cv
66.7659 479.632 66.34 479.715 65.8646 479.715 cv
65.0773 479.715 64.4774 479.552 64.0648 479.225 cv
63.652 478.897 63.3887 478.413 63.2746 477.77 cv
cp
f
71.769 478.66 mo
71.9173 479.567 li
71.6283 479.628 71.3697 479.658 71.1414 479.658 cv
70.7687 479.658 70.4797 479.599 70.2743 479.481 cv
70.069 479.363 69.9244 479.208 69.8408 479.016 cv
69.7571 478.824 69.7153 478.42 69.7153 477.804 cv
69.7153 474.319 li
68.9622 474.319 li
68.9622 473.52 li
69.7153 473.52 li
69.7153 472.02 li
70.7364 471.403 li
70.7364 473.52 li
71.769 473.52 li
71.769 474.319 li
70.7364 474.319 li
70.7364 477.861 li
70.7364 478.154 70.7545 478.342 70.7906 478.426 cv
70.8268 478.51 70.8857 478.576 70.9675 478.626 cv
71.0492 478.675 71.1662 478.7 71.3184 478.7 cv
71.4325 478.7 71.5826 478.686 71.769 478.66 cv
cp
f
72.7788 479.578 mo
72.7788 473.52 li
73.8056 473.52 li
73.8056 479.578 li
72.7788 479.578 li
cp
72.7788 472.396 mo
72.7788 471.215 li
73.8056 471.215 li
73.8056 472.396 li
72.7788 472.396 li
cp
f
76.0532 476.555 mo
76.0532 477.331 76.2168 477.911 76.5439 478.295 cv
76.8709 478.679 77.257 478.871 77.7019 478.871 cv
78.1507 478.871 78.5319 478.687 78.8457 478.32 cv
79.1595 477.953 79.3164 477.393 79.3164 476.64 cv
79.3164 475.811 79.1566 475.203 78.8372 474.815 cv
78.5177 474.427 78.1241 474.233 77.6563 474.233 cv
77.1999 474.233 76.8187 474.419 76.5125 474.792 cv
76.2064 475.165 76.0532 475.752 76.0532 476.555 cv
cp
79.2992 479.578 mo
79.2992 478.814 li
78.9151 479.415 78.3503 479.715 77.6049 479.715 cv
77.1219 479.715 76.6779 479.582 76.2729 479.316 cv
75.8678 479.05 75.554 478.678 75.3316 478.201 cv
75.1091 477.723 74.9979 477.175 74.9979 476.555 cv
74.9979 475.95 75.0987 475.401 75.3002 474.909 cv
75.5018 474.416 75.8042 474.039 76.2072 473.777 cv
76.6104 473.514 77.0611 473.383 77.5593 473.383 cv
77.9244 473.383 78.2496 473.46 78.5349 473.614 cv
78.82 473.768 79.052 473.969 79.2308 474.216 cv
79.2308 471.215 li
80.2519 471.215 li
80.2519 479.578 li
79.2992 479.578 li
cp
f
81.8721 479.578 mo
81.8721 473.52 li
82.899 473.52 li
82.899 479.578 li
81.8721 479.578 li
cp
81.8721 472.396 mo
81.8721 471.215 li
82.899 471.215 li
82.899 472.396 li
81.8721 472.396 li
cp
f
84.4621 479.578 mo
84.4621 473.52 li
85.3862 473.52 li
85.3862 474.381 li
85.8312 473.716 86.474 473.383 87.3145 473.383 cv
87.6796 473.383 88.0152 473.449 88.3213 473.58 cv
88.6275 473.711 88.8566 473.883 89.0088 474.096 cv
89.1608 474.309 89.2673 474.562 89.3282 474.855 cv
89.3663 475.045 89.3853 475.378 89.3853 475.853 cv
89.3853 479.578 li
88.3584 479.578 li
88.3584 475.893 li
88.3584 475.475 88.3185 475.162 88.2386 474.955 cv
88.1587 474.747 88.017 474.582 87.8136 474.458 cv
87.6102 474.335 87.3714 474.273 87.0977 474.273 cv
86.6603 474.273 86.2828 474.412 85.9652 474.689 cv
85.6477 474.967 85.489 475.494 85.489 476.27 cv
85.489 479.578 li
84.4621 479.578 li
cp
f
91.7356 475.967 mo
95.1186 475.967 li
95.0729 475.458 94.9436 475.075 94.7306 474.82 cv
94.4035 474.425 93.9795 474.227 93.4585 474.227 cv
92.9868 474.227 92.5904 474.385 92.269 474.701 cv
91.9476 475.016 91.7698 475.439 91.7356 475.967 cv
cp
95.1072 477.627 mo
96.1682 477.758 li
96.0008 478.378 95.6909 478.86 95.2383 479.202 cv
94.7858 479.544 94.2076 479.715 93.5041 479.715 cv
92.6179 479.715 91.9153 479.442 91.3961 478.897 cv
90.877 478.351 90.6175 477.585 90.6175 476.6 cv
90.6175 475.581 90.8799 474.79 91.4047 474.227 cv
91.9296 473.664 92.6103 473.383 93.4471 473.383 cv
94.2571 473.383 94.9189 473.659 95.4323 474.21 cv
95.9457 474.762 96.2025 475.537 96.2025 476.538 cv
96.2025 476.599 96.2005 476.69 96.1967 476.812 cv
91.6786 476.812 li
91.7166 477.477 91.9049 477.987 92.2434 478.34 cv
92.5818 478.694 93.004 478.871 93.5098 478.871 cv
93.8864 478.871 94.2076 478.772 94.4739 478.574 cv
94.7401 478.377 94.9512 478.061 95.1072 477.627 cv
cp
f
219.443 481.973 mo
219.443 473.61 li
221.109 473.61 li
223.089 479.532 li
223.271 480.083 223.404 480.496 223.488 480.77 cv
223.583 480.466 223.732 480.019 223.933 479.429 cv
225.935 473.61 li
227.424 473.61 li
227.424 481.973 li
226.358 481.973 li
226.358 474.974 li
223.927 481.973 li
222.929 481.973 li
220.51 474.854 li
220.51 481.973 li
219.443 481.973 li
cp
f
229.855 478.362 mo
233.237 478.362 li
233.192 477.853 233.063 477.471 232.85 477.216 cv
232.522 476.82 232.098 476.622 231.577 476.622 cv
231.106 476.622 230.709 476.78 230.388 477.096 cv
230.067 477.412 229.889 477.834 229.855 478.362 cv
cp
233.226 480.022 mo
234.287 480.154 li
234.12 480.774 233.81 481.255 233.357 481.597 cv
232.905 481.939 232.327 482.11 231.623 482.11 cv
230.737 482.11 230.034 481.837 229.515 481.292 cv
228.996 480.746 228.736 479.981 228.736 478.996 cv
228.736 477.976 228.999 477.185 229.524 476.622 cv
230.048 476.06 230.729 475.778 231.566 475.778 cv
232.376 475.778 233.038 476.054 233.551 476.605 cv
234.065 477.157 234.321 477.933 234.321 478.933 cv
234.321 478.994 234.32 479.085 234.316 479.207 cv
229.798 479.207 li
229.836 479.872 230.024 480.382 230.362 480.736 cv
230.701 481.089 231.123 481.266 231.629 481.266 cv
232.005 481.266 232.327 481.167 232.593 480.969 cv
232.859 480.772 233.07 480.456 233.226 480.022 cv
cp
f
237.818 481.055 mo
237.967 481.962 li
237.678 482.023 237.419 482.053 237.191 482.053 cv
236.818 482.053 236.529 481.994 236.324 481.876 cv
236.118 481.759 235.974 481.604 235.89 481.411 cv
235.807 481.22 235.765 480.815 235.765 480.199 cv
235.765 476.714 li
235.012 476.714 li
235.012 475.915 li
235.765 475.915 li
235.765 474.415 li
236.786 473.799 li
236.786 475.915 li
237.818 475.915 li
237.818 476.714 li
236.786 476.714 li
236.786 480.256 li
236.786 480.549 236.804 480.737 236.84 480.821 cv
236.876 480.905 236.935 480.971 237.017 481.021 cv
237.099 481.07 237.216 481.095 237.368 481.095 cv
237.482 481.095 237.632 481.082 237.818 481.055 cv
cp
f
238.822 481.973 mo
238.822 473.61 li
239.849 473.61 li
239.849 476.611 li
240.328 476.056 240.933 475.778 241.663 475.778 cv
242.112 475.778 242.502 475.866 242.833 476.043 cv
243.164 476.22 243.4 476.465 243.543 476.776 cv
243.686 477.088 243.757 477.541 243.757 478.134 cv
243.757 481.973 li
242.73 481.973 li
242.73 478.134 li
242.73 477.621 242.619 477.247 242.396 477.013 cv
242.174 476.779 241.859 476.662 241.452 476.662 cv
241.148 476.662 240.862 476.741 240.594 476.899 cv
240.326 477.057 240.135 477.271 240.02 477.541 cv
239.906 477.811 239.849 478.184 239.849 478.659 cv
239.849 481.973 li
238.822 481.973 li
cp
f
245.326 481.973 mo
245.326 475.915 li
246.353 475.915 li
246.353 481.973 li
245.326 481.973 li
cp
245.326 474.791 mo
245.326 473.61 li
246.353 473.61 li
246.353 474.791 li
245.326 474.791 li
cp
f
248.589 478.944 mo
248.589 479.72 248.758 480.301 249.097 480.687 cv
249.435 481.073 249.861 481.266 250.375 481.266 cv
250.884 481.266 251.308 481.072 251.647 480.684 cv
251.985 480.296 252.154 479.705 252.154 478.91 cv
252.154 478.161 251.984 477.593 251.644 477.207 cv
251.303 476.821 250.88 476.628 250.375 476.628 cv
249.861 476.628 249.435 476.82 249.097 477.204 cv
248.758 477.588 248.589 478.168 248.589 478.944 cv
cp
247.534 478.944 mo
247.534 477.822 247.845 476.991 248.469 476.451 cv
248.99 476.003 249.625 475.778 250.375 475.778 cv
251.207 475.778 251.888 476.051 252.417 476.597 cv
252.945 477.143 253.21 477.896 253.21 478.859 cv
253.21 479.638 253.093 480.252 252.859 480.698 cv
252.625 481.145 252.285 481.492 251.838 481.74 cv
251.391 481.987 250.903 482.11 250.375 482.11 cv
249.526 482.11 248.841 481.838 248.318 481.295 cv
247.795 480.751 247.534 479.967 247.534 478.944 cv
cp
f
254.413 481.973 mo
254.413 475.915 li
255.338 475.915 li
255.338 476.776 li
255.783 476.111 256.425 475.778 257.266 475.778 cv
257.631 475.778 257.967 475.844 258.273 475.975 cv
258.579 476.106 258.808 476.278 258.96 476.491 cv
259.112 476.704 259.219 476.957 259.28 477.25 cv
259.318 477.44 259.337 477.773 259.337 478.248 cv
259.337 481.973 li
258.31 481.973 li
258.31 478.288 li
258.31 477.87 258.27 477.557 258.19 477.35 cv
258.11 477.143 257.969 476.977 257.765 476.853 cv
257.562 476.73 257.323 476.668 257.049 476.668 cv
256.612 476.668 256.234 476.807 255.917 477.084 cv
255.599 477.362 255.44 477.889 255.44 478.665 cv
255.44 481.973 li
254.413 481.973 li
cp
f
260.917 481.973 mo
260.917 475.915 li
261.944 475.915 li
261.944 481.973 li
260.917 481.973 li
cp
260.917 474.791 mo
260.917 473.61 li
261.944 473.61 li
261.944 474.791 li
260.917 474.791 li
cp
f
263.507 481.973 mo
263.507 475.915 li
264.431 475.915 li
264.431 476.776 li
264.876 476.111 265.519 475.778 266.359 475.778 cv
266.724 475.778 267.06 475.844 267.366 475.975 cv
267.672 476.106 267.901 476.278 268.054 476.491 cv
268.206 476.704 268.312 476.957 268.373 477.25 cv
268.411 477.44 268.43 477.773 268.43 478.248 cv
268.43 481.973 li
267.403 481.973 li
267.403 478.288 li
267.403 477.87 267.363 477.557 267.283 477.35 cv
267.203 477.143 267.062 476.977 266.858 476.853 cv
266.655 476.73 266.416 476.668 266.142 476.668 cv
265.705 476.668 265.328 476.807 265.01 477.084 cv
264.692 477.362 264.534 477.889 264.534 478.665 cv
264.534 481.973 li
263.507 481.973 li
cp
f
270.78 478.362 mo
274.163 478.362 li
274.118 477.853 273.988 477.471 273.775 477.216 cv
273.448 476.82 273.024 476.622 272.503 476.622 cv
272.032 476.622 271.635 476.78 271.314 477.096 cv
270.992 477.412 270.815 477.834 270.78 478.362 cv
cp
274.152 480.022 mo
275.213 480.154 li
275.046 480.774 274.736 481.255 274.283 481.597 cv
273.831 481.939 273.252 482.11 272.549 482.11 cv
271.663 482.11 270.96 481.837 270.441 481.292 cv
269.922 480.746 269.662 479.981 269.662 478.996 cv
269.662 477.976 269.925 477.185 270.45 476.622 cv
270.974 476.06 271.655 475.778 272.492 475.778 cv
273.302 475.778 273.964 476.054 274.477 476.605 cv
274.991 477.157 275.247 477.933 275.247 478.933 cv
275.247 478.994 275.245 479.085 275.242 479.207 cv
270.723 479.207 li
270.761 479.872 270.95 480.382 271.288 480.736 cv
271.627 481.089 272.049 481.266 272.555 481.266 cv
272.931 481.266 273.252 481.167 273.519 480.969 cv
273.785 480.772 273.996 480.456 274.152 480.022 cv
cp
f
389.92 465.491 mo
389.92 458.115 li
387.164 458.115 li
387.164 457.128 li
393.793 457.128 li
393.793 458.115 li
391.027 458.115 li
391.027 465.491 li
389.92 465.491 li
cp
f
394.797 465.491 mo
394.797 457.128 li
395.824 457.128 li
395.824 460.128 li
396.303 459.573 396.908 459.296 397.638 459.296 cv
398.087 459.296 398.477 459.384 398.808 459.561 cv
399.139 459.738 399.375 459.982 399.518 460.294 cv
399.661 460.606 399.732 461.058 399.732 461.652 cv
399.732 465.491 li
398.705 465.491 li
398.705 461.652 li
398.705 461.138 398.594 460.764 398.371 460.531 cv
398.149 460.297 397.834 460.18 397.427 460.18 cv
397.123 460.18 396.837 460.259 396.569 460.416 cv
396.301 460.574 396.109 460.788 395.995 461.058 cv
395.881 461.328 395.824 461.701 395.824 462.176 cv
395.824 465.491 li
394.797 465.491 li
cp
f
401.284 465.491 mo
401.284 459.432 li
402.208 459.432 li
402.208 460.351 li
402.444 459.921 402.661 459.638 402.861 459.501 cv
403.061 459.364 403.28 459.296 403.52 459.296 cv
403.866 459.296 404.218 459.406 404.575 459.626 cv
404.222 460.579 li
403.971 460.431 403.72 460.357 403.469 460.357 cv
403.244 460.357 403.043 460.424 402.864 460.559 cv
402.685 460.694 402.558 460.881 402.482 461.121 cv
402.368 461.486 402.311 461.885 402.311 462.319 cv
402.311 465.491 li
401.284 465.491 li
cp
f
405.962 461.88 mo
409.345 461.88 li
409.299 461.37 409.17 460.988 408.957 460.733 cv
408.63 460.338 408.206 460.14 407.684 460.14 cv
407.213 460.14 406.816 460.298 406.495 460.613 cv
406.174 460.929 405.996 461.351 405.962 461.88 cv
cp
409.333 463.54 mo
410.394 463.671 li
410.227 464.291 409.917 464.772 409.464 465.114 cv
409.012 465.457 408.434 465.628 407.73 465.628 cv
406.844 465.628 406.141 465.355 405.622 464.809 cv
405.103 464.263 404.843 463.498 404.843 462.513 cv
404.843 461.494 405.106 460.703 405.631 460.14 cv
406.156 459.577 406.836 459.296 407.673 459.296 cv
408.483 459.296 409.145 459.571 409.658 460.123 cv
410.172 460.674 410.428 461.45 410.428 462.45 cv
410.428 462.511 410.427 462.602 410.423 462.724 cv
405.905 462.724 li
405.943 463.39 406.131 463.899 406.469 464.253 cv
406.808 464.607 407.23 464.784 407.736 464.784 cv
408.112 464.784 408.434 464.685 408.7 464.487 cv
408.966 464.289 409.177 463.973 409.333 463.54 cv
cp
f
412.357 462.462 mo
412.357 463.238 412.526 463.818 412.864 464.204 cv
413.203 464.59 413.629 464.784 414.142 464.784 cv
414.652 464.784 415.076 464.59 415.414 464.202 cv
415.753 463.814 415.922 463.222 415.922 462.427 cv
415.922 461.678 415.752 461.111 415.412 460.725 cv
415.071 460.339 414.648 460.146 414.142 460.146 cv
413.629 460.146 413.203 460.338 412.864 460.722 cv
412.526 461.106 412.357 461.686 412.357 462.462 cv
cp
411.301 462.462 mo
411.301 461.34 411.613 460.509 412.237 459.969 cv
412.758 459.52 413.393 459.296 414.142 459.296 cv
414.975 459.296 415.656 459.568 416.185 460.114 cv
416.713 460.66 416.977 461.414 416.977 462.376 cv
416.977 463.156 416.861 463.769 416.627 464.216 cv
416.393 464.663 416.052 465.01 415.605 465.257 cv
415.159 465.504 414.671 465.628 414.142 465.628 cv
413.294 465.628 412.609 465.356 412.086 464.812 cv
411.563 464.268 411.301 463.485 411.301 462.462 cv
cp
f
418.181 465.491 mo
418.181 459.432 li
419.105 459.432 li
419.105 460.294 li
419.55 459.628 420.193 459.296 421.034 459.296 cv
421.399 459.296 421.734 459.361 422.04 459.492 cv
422.347 459.624 422.576 459.796 422.728 460.009 cv
422.88 460.222 422.987 460.475 423.047 460.767 cv
423.085 460.958 423.104 461.29 423.104 461.766 cv
423.104 465.491 li
422.078 465.491 li
422.078 461.806 li
422.078 461.387 422.038 461.074 421.958 460.867 cv
421.878 460.66 421.736 460.494 421.533 460.371 cv
421.329 460.247 421.091 460.185 420.817 460.185 cv
420.379 460.185 420.002 460.324 419.684 460.602 cv
419.367 460.88 419.208 461.406 419.208 462.182 cv
419.208 465.491 li
418.181 465.491 li
cp
f
424.685 465.491 mo
424.685 459.432 li
425.711 459.432 li
425.711 465.491 li
424.685 465.491 li
cp
424.685 458.309 mo
424.685 457.128 li
425.711 457.128 li
425.711 458.309 li
424.685 458.309 li
cp
f
427.275 465.491 mo
427.275 459.432 li
428.199 459.432 li
428.199 460.294 li
428.644 459.628 429.286 459.296 430.127 459.296 cv
430.492 459.296 430.828 459.361 431.134 459.492 cv
431.44 459.624 431.669 459.796 431.821 460.009 cv
431.973 460.222 432.08 460.475 432.141 460.767 cv
432.179 460.958 432.198 461.29 432.198 461.766 cv
432.198 465.491 li
431.171 465.491 li
431.171 461.806 li
431.171 461.387 431.131 461.074 431.051 460.867 cv
430.971 460.66 430.83 460.494 430.626 460.371 cv
430.423 460.247 430.184 460.185 429.91 460.185 cv
429.473 460.185 429.095 460.324 428.778 460.602 cv
428.46 460.88 428.301 461.406 428.301 462.182 cv
428.301 465.491 li
427.275 465.491 li
cp
f
434.548 461.88 mo
437.931 461.88 li
437.885 461.37 437.756 460.988 437.543 460.733 cv
437.216 460.338 436.792 460.14 436.271 460.14 cv
435.799 460.14 435.403 460.298 435.081 460.613 cv
434.76 460.929 434.582 461.351 434.548 461.88 cv
cp
437.92 463.54 mo
438.981 463.671 li
438.813 464.291 438.503 464.772 438.051 465.114 cv
437.598 465.457 437.02 465.628 436.317 465.628 cv
435.43 465.628 434.728 465.355 434.209 464.809 cv
433.69 464.263 433.43 463.498 433.43 462.513 cv
433.43 461.494 433.692 460.703 434.217 460.14 cv
434.742 459.577 435.423 459.296 436.26 459.296 cv
437.07 459.296 437.731 459.571 438.245 460.123 cv
438.758 460.674 439.015 461.45 439.015 462.45 cv
439.015 462.511 439.013 462.602 439.009 462.724 cv
434.491 462.724 li
434.529 463.39 434.717 463.899 435.056 464.253 cv
435.394 464.607 435.816 464.784 436.322 464.784 cv
436.699 464.784 437.02 464.685 437.286 464.487 cv
437.553 464.289 437.764 463.973 437.92 463.54 cv
cp
f
28.8429 114.366 mo
28.8429 116.724 li
31.5685 116.724 li
31.5685 114.366 li
32.3046 114.366 li
32.3046 120.001 li
31.5685 120.001 li
31.5685 117.359 li
28.8429 117.359 li
28.8429 120.001 li
28.1154 120.001 li
28.1154 114.366 li
28.8429 114.366 li
cp
f
33.2108 121.564 mo
33.2108 121.226 li
33.6429 120.806 li
34.6823 119.817 35.152 119.291 35.1582 118.677 cv
35.1582 118.264 34.9578 117.882 34.3504 117.882 cv
33.981 117.882 33.6742 118.07 33.4863 118.226 cv
33.311 117.838 li
33.5928 117.6 33.9935 117.425 34.4632 117.425 cv
35.3398 117.425 35.7093 118.026 35.7093 118.608 cv
35.7093 119.36 35.1645 119.967 34.3066 120.794 cv
33.981 121.094 li
33.981 121.107 li
35.8094 121.107 li
35.8094 121.564 li
33.2108 121.564 li
cp
f
36.7772 120.001 mo
36.7772 114.366 li
37.5718 114.366 li
39.3775 117.217 li
39.7953 117.877 40.1221 118.471 40.3896 119.048 cv
40.4056 119.04 li
40.3395 118.287 40.3225 117.602 40.3225 116.724 cv
40.3225 114.366 li
41.0078 114.366 li
41.0078 120.001 li
40.2724 120.001 li
38.4826 117.142 li
38.0899 116.515 37.7136 115.871 37.4295 115.26 cv
37.4045 115.269 li
37.446 115.979 37.4631 116.657 37.4631 117.593 cv
37.4631 120.001 li
36.7772 120.001 li
cp
f
59.4892 119.91 mo
59.2216 120.044 58.6865 120.178 58.0011 120.178 cv
56.4129 120.178 55.2164 119.174 55.2164 117.326 cv
55.2164 115.562 56.4129 114.367 58.1594 114.367 cv
58.8619 114.367 59.3047 114.517 59.4971 114.618 cv
59.3218 115.211 li
59.0463 115.078 58.6535 114.977 58.1844 114.977 cv
56.8638 114.977 55.986 115.822 55.986 117.301 cv
55.986 118.681 56.7807 119.567 58.1514 119.567 cv
58.5943 119.567 59.0463 119.475 59.3389 119.333 cv
59.4892 119.91 li
cp
f
54.1127 116.686 mo
54.1127 117.283 li
43.5155 117.283 li
43.5155 116.686 li
54.1127 116.686 li
cp
f
74.1907 114.366 mo
74.1907 116.724 li
76.9162 116.724 li
76.9162 114.366 li
77.6517 114.366 li
77.6517 120.001 li
76.9162 120.001 li
76.9162 117.359 li
74.1907 117.359 li
74.1907 120.001 li
73.4632 120.001 li
73.4632 114.366 li
74.1907 114.366 li
cp
f
72.292 116.686 mo
72.292 117.283 li
61.8441 117.283 li
61.8441 116.686 li
72.292 116.686 li
cp
f
59.4892 101.996 mo
59.2216 102.13 58.6865 102.263 58.0011 102.263 cv
56.4129 102.263 55.2164 101.26 55.2164 99.4119 cv
55.2164 97.6478 56.4129 96.4524 58.1594 96.4524 cv
58.8619 96.4524 59.3047 96.6027 59.4971 96.7034 cv
59.3218 97.2966 li
59.0463 97.1634 58.6535 97.0626 58.1844 97.0626 cv
56.8638 97.0626 55.986 97.9074 55.986 99.3869 cv
55.986 100.767 56.7807 101.653 58.1514 101.653 cv
58.5943 101.653 59.0463 101.561 59.3389 101.419 cv
59.4892 101.996 li
cp
f
60.8417 99.3954 mo
60.8417 100.599 61.4941 101.678 62.6394 101.678 cv
63.7938 101.678 64.4451 100.616 64.4451 99.3368 cv
64.4451 98.2165 63.8599 97.0461 62.6485 97.0461 cv
61.444 97.0461 60.8417 98.1579 60.8417 99.3954 cv
cp
65.2147 99.3038 mo
65.2147 101.243 64.0363 102.272 62.5984 102.272 cv
61.1093 102.272 60.0641 101.118 60.0641 99.4119 cv
60.0641 97.6228 61.1764 96.4524 62.6815 96.4524 cv
64.2197 96.4524 65.2147 97.6313 65.2147 99.3038 cv
cp
f
66.6003 99.3954 mo
66.6003 100.599 67.2526 101.678 68.398 101.678 cv
69.5524 101.678 70.2036 100.616 70.2036 99.3368 cv
70.2036 98.2165 69.6184 97.0461 68.4071 97.0461 cv
67.2025 97.0461 66.6003 98.1579 66.6003 99.3954 cv
cp
70.9733 99.3038 mo
70.9733 101.243 69.7949 102.272 68.357 102.272 cv
66.8678 102.272 65.8227 101.118 65.8227 99.4119 cv
65.8227 97.6228 66.935 96.4524 68.4401 96.4524 cv
69.9782 96.4524 70.9733 97.6313 70.9733 99.3038 cv
cp
f
72.6434 96.5446 mo
72.6434 98.9019 li
75.369 98.9019 li
75.369 96.5446 li
76.1045 96.5446 li
76.1045 102.18 li
75.369 102.18 li
75.369 99.5378 li
72.6434 99.5378 li
72.6434 102.18 li
71.9159 102.18 li
71.9159 96.5446 li
72.6434 96.5446 li
cp
f
57.6052 103.462 mo
58.2022 103.462 li
58.2022 112.835 li
57.6052 112.835 li
57.6052 103.462 li
cp
f
59.4892 137.816 mo
59.2216 137.95 58.6865 138.083 58.0011 138.083 cv
56.4129 138.083 55.2164 137.08 55.2164 135.232 cv
55.2164 133.468 56.4129 132.273 58.1594 132.273 cv
58.8619 132.273 59.3047 132.423 59.4971 132.524 cv
59.3218 133.117 li
59.0463 132.983 58.6535 132.883 58.1844 132.883 cv
56.8638 132.883 55.986 133.728 55.986 135.207 cv
55.986 136.587 56.7807 137.473 58.1514 137.473 cv
58.5943 137.473 59.0463 137.381 59.3389 137.239 cv
59.4892 137.816 li
cp
1 0 0 rgb
f
61.1263 132.365 mo
61.1263 134.723 li
63.8519 134.723 li
63.8519 132.365 li
64.5874 132.365 li
64.5874 138 li
63.8519 138 li
63.8519 135.358 li
61.1263 135.358 li
61.1263 138 li
60.3988 138 li
60.3988 132.365 li
61.1263 132.365 li
cp
f
58.2022 130.746 mo
57.6052 130.746 li
57.6052 121.372 li
58.2022 121.372 li
58.2022 130.746 li
cp
f
74.9853 146.771 mo
74.7178 146.905 74.1827 147.038 73.4973 147.038 cv
71.9091 147.038 70.7125 146.035 70.7125 144.187 cv
70.7125 142.423 71.9091 141.227 73.6556 141.227 cv
74.358 141.227 74.8009 141.378 74.9933 141.479 cv
74.818 142.072 li
74.5425 141.938 74.1497 141.838 73.6806 141.838 cv
72.3599 141.838 71.4822 142.682 71.4822 144.162 cv
71.4822 145.542 72.2768 146.428 73.6476 146.428 cv
74.0905 146.428 74.5425 146.336 74.8351 146.194 cv
74.9853 146.771 li
cp
f
76.6225 141.32 mo
76.6225 143.677 li
79.3481 143.677 li
79.3481 141.32 li
80.0835 141.32 li
80.0835 146.955 li
79.3481 146.955 li
79.3481 144.313 li
76.6225 144.313 li
76.6225 146.955 li
75.895 146.955 li
75.895 141.32 li
76.6225 141.32 li
cp
f
81.1219 147.893 mo
81.279 147.993 81.641 148.15 82.0236 148.15 cv
82.7317 148.15 82.9503 147.699 82.9435 147.361 cv
82.9378 146.791 82.4243 146.547 81.8915 146.547 cv
81.5852 146.547 li
81.5852 146.133 li
81.8915 146.133 li
82.2923 146.133 82.8 145.927 82.8 145.444 cv
82.8 145.119 82.5928 144.831 82.0862 144.831 cv
81.7606 144.831 81.4475 144.975 81.2721 145.1 cv
81.1287 144.699 li
81.3405 144.543 81.7549 144.386 82.1921 144.386 cv
82.9936 144.386 83.3579 144.862 83.3579 145.357 cv
83.3579 145.776 83.1074 146.133 82.6065 146.315 cv
82.6065 146.327 li
83.1074 146.428 83.5139 146.803 83.5139 147.373 cv
83.5139 148.024 83.0072 148.594 82.0304 148.594 cv
81.5727 148.594 81.172 148.45 80.9716 148.319 cv
81.1219 147.893 li
cp
f
70.1725 141.641 mo
69.874 142.149 li
66.4412 140.149 li
66.7397 139.641 li
70.1725 141.641 li
cp
f
31.2588 141.32 mo
31.2588 143.677 li
33.9844 143.677 li
33.9844 141.32 li
34.7205 141.32 li
34.7205 146.955 li
33.9844 146.955 li
33.9844 144.313 li
31.2588 144.313 li
31.2588 146.955 li
30.5313 146.955 li
30.5313 141.32 li
31.2588 141.32 li
cp
f
35.765 147.893 mo
35.9216 147.993 36.2848 148.15 36.6667 148.15 cv
37.3743 148.15 37.5935 147.699 37.5872 147.361 cv
37.5809 146.791 37.0675 146.547 36.5352 146.547 cv
36.2284 146.547 li
36.2284 146.133 li
36.5352 146.133 li
36.936 146.133 37.4432 145.927 37.4432 145.444 cv
37.4432 145.119 37.2366 144.831 36.7294 144.831 cv
36.4037 144.831 36.0906 144.975 35.9153 145.1 cv
35.7713 144.699 li
35.9842 144.543 36.3975 144.386 36.8358 144.386 cv
37.6373 144.386 38.0005 144.862 38.0005 145.357 cv
38.0005 145.776 37.75 146.133 37.2491 146.315 cv
37.2491 146.327 li
37.75 146.428 38.157 146.803 38.157 147.373 cv
38.157 148.024 37.6498 148.594 36.673 148.594 cv
36.2159 148.594 35.8151 148.45 35.6148 148.319 cv
35.765 147.893 li
cp
f
43.1357 146.771 mo
42.8682 146.905 42.3331 147.038 41.6477 147.038 cv
40.0595 147.038 38.8635 146.035 38.8635 144.187 cv
38.8635 142.423 40.0595 141.227 41.8059 141.227 cv
42.5084 141.227 42.9513 141.378 43.1437 141.479 cv
42.9683 142.072 li
42.6928 141.938 42.3 141.838 41.831 141.838 cv
40.5103 141.838 39.6325 142.682 39.6325 144.162 cv
39.6325 145.542 40.4272 146.428 41.798 146.428 cv
42.2408 146.428 42.6928 146.336 42.9854 146.194 cv
43.1357 146.771 li
cp
f
46.1424 142.059 mo
45.8439 141.522 li
54.2619 136.656 li
54.5604 137.164 li
46.1424 142.059 li
cp
f
161.397 114.366 mo
161.397 116.724 li
164.123 116.724 li
164.123 114.366 li
164.858 114.366 li
164.858 120.001 li
164.123 120.001 li
164.123 117.359 li
161.397 117.359 li
161.397 120.001 li
160.67 120.001 li
160.67 114.366 li
161.397 114.366 li
cp
0 0 0 rgb
f
165.764 121.564 mo
165.764 121.226 li
166.197 120.806 li
167.237 119.817 167.707 119.291 167.712 118.677 cv
167.712 118.264 167.512 117.882 166.905 117.882 cv
166.535 117.882 166.229 118.07 166.04 118.226 cv
165.865 117.838 li
166.147 117.6 166.548 117.425 167.017 117.425 cv
167.893 117.425 168.263 118.026 168.263 118.608 cv
168.263 119.36 167.718 119.967 166.861 120.794 cv
166.535 121.094 li
166.535 121.107 li
168.364 121.107 li
168.364 121.564 li
165.764 121.564 li
cp
f
169.333 120.001 mo
169.333 114.366 li
170.127 114.366 li
171.933 117.217 li
172.351 117.877 172.677 118.471 172.945 119.048 cv
172.961 119.04 li
172.895 118.287 172.878 117.602 172.878 116.724 cv
172.878 114.366 li
173.563 114.366 li
173.563 120.001 li
172.828 120.001 li
171.038 117.142 li
170.645 116.515 170.27 115.871 169.985 115.26 cv
169.96 115.269 li
170.002 115.979 170.018 116.657 170.018 117.593 cv
170.018 120.001 li
169.333 120.001 li
cp
f
192.043 119.91 mo
191.776 120.044 191.241 120.178 190.555 120.178 cv
188.967 120.178 187.771 119.174 187.771 117.326 cv
187.771 115.562 188.967 114.367 190.714 114.367 cv
191.416 114.367 191.859 114.517 192.051 114.618 cv
191.876 115.211 li
191.6 115.078 191.208 114.977 190.739 114.977 cv
189.418 114.977 188.54 115.822 188.54 117.301 cv
188.54 118.681 189.335 119.567 190.706 119.567 cv
191.149 119.567 191.6 119.475 191.893 119.333 cv
192.043 119.91 li
cp
f
186.668 116.686 mo
186.668 117.283 li
176.07 117.283 li
176.07 116.686 li
186.668 116.686 li
cp
f
206.748 114.366 mo
206.748 116.724 li
209.474 116.724 li
209.474 114.366 li
210.209 114.366 li
210.209 120.001 li
209.474 120.001 li
209.474 117.359 li
206.748 117.359 li
206.748 120.001 li
206.021 120.001 li
206.021 114.366 li
206.748 114.366 li
cp
f
204.847 116.686 mo
204.847 117.283 li
194.399 117.283 li
194.399 116.686 li
204.847 116.686 li
cp
f
192.043 101.996 mo
191.776 102.13 191.241 102.263 190.555 102.263 cv
188.967 102.263 187.771 101.26 187.771 99.4119 cv
187.771 97.6478 188.967 96.4524 190.714 96.4524 cv
191.416 96.4524 191.859 96.6027 192.051 96.7034 cv
191.876 97.2966 li
191.6 97.1634 191.208 97.0626 190.739 97.0626 cv
189.418 97.0626 188.54 97.9074 188.54 99.3869 cv
188.54 100.767 189.335 101.653 190.706 101.653 cv
191.149 101.653 191.6 101.561 191.893 101.419 cv
192.043 101.996 li
cp
f
193.396 99.3954 mo
193.396 100.599 194.048 101.678 195.194 101.678 cv
196.348 101.678 197 100.616 197 99.3368 cv
197 98.2165 196.414 97.0461 195.203 97.0461 cv
193.998 97.0461 193.396 98.1579 193.396 99.3954 cv
cp
197.769 99.3038 mo
197.769 101.243 196.591 102.272 195.153 102.272 cv
193.663 102.272 192.618 101.118 192.618 99.4119 cv
192.618 97.6228 193.731 96.4524 195.236 96.4524 cv
196.774 96.4524 197.769 97.6313 197.769 99.3038 cv
cp
f
199.154 99.3954 mo
199.154 100.599 199.807 101.678 200.952 101.678 cv
202.107 101.678 202.759 100.616 202.759 99.3368 cv
202.759 98.2165 202.173 97.0461 200.961 97.0461 cv
199.757 97.0461 199.154 98.1579 199.154 99.3954 cv
cp
203.527 99.3038 mo
203.527 101.243 202.349 102.272 200.911 102.272 cv
199.422 102.272 198.377 101.118 198.377 99.4119 cv
198.377 97.6228 199.489 96.4524 200.994 96.4524 cv
202.532 96.4524 203.527 97.6313 203.527 99.3038 cv
cp
f
205.198 96.5446 mo
205.198 98.9019 li
207.923 98.9019 li
207.923 96.5446 li
208.659 96.5446 li
208.659 102.18 li
207.923 102.18 li
207.923 99.5378 li
205.198 99.5378 li
205.198 102.18 li
204.47 102.18 li
204.47 96.5446 li
205.198 96.5446 li
cp
f
190.16 103.462 mo
190.757 103.462 li
190.757 112.835 li
190.16 112.835 li
190.16 103.462 li
cp
f
192.043 137.816 mo
191.776 137.95 191.241 138.083 190.555 138.083 cv
188.967 138.083 187.771 137.08 187.771 135.232 cv
187.771 133.468 188.967 132.273 190.714 132.273 cv
191.416 132.273 191.859 132.423 192.051 132.524 cv
191.876 133.117 li
191.6 132.983 191.208 132.883 190.739 132.883 cv
189.418 132.883 188.54 133.728 188.54 135.207 cv
188.54 136.587 189.335 137.473 190.706 137.473 cv
191.149 137.473 191.6 137.381 191.893 137.239 cv
192.043 137.816 li
cp
1 0 0 rgb
f
193.681 132.365 mo
193.681 134.723 li
196.406 134.723 li
196.406 132.365 li
197.142 132.365 li
197.142 138 li
196.406 138 li
196.406 135.358 li
193.681 135.358 li
193.681 138 li
192.953 138 li
192.953 132.365 li
193.681 132.365 li
cp
f
198.05 139.562 mo
198.05 139.224 li
198.483 138.805 li
199.522 137.815 199.992 137.289 199.998 136.676 cv
199.998 136.262 199.798 135.88 199.191 135.88 cv
198.821 135.88 198.515 136.068 198.326 136.225 cv
198.15 135.837 li
198.433 135.599 198.833 135.423 199.302 135.423 cv
200.179 135.423 200.549 136.025 200.549 136.607 cv
200.549 137.358 200.004 137.966 199.146 138.792 cv
198.821 139.093 li
198.821 139.105 li
200.649 139.105 li
200.649 139.562 li
198.05 139.562 li
cp
f
190.757 130.746 mo
190.16 130.746 li
190.16 121.372 li
190.757 121.372 li
190.757 130.746 li
cp
f
192.043 155.728 mo
191.776 155.862 191.241 155.996 190.555 155.996 cv
188.967 155.996 187.771 154.992 187.771 153.144 cv
187.771 151.38 188.967 150.185 190.714 150.185 cv
191.416 150.185 191.859 150.335 192.051 150.436 cv
191.876 151.029 li
191.6 150.895 191.208 150.795 190.739 150.795 cv
189.418 150.795 188.54 151.64 188.54 153.119 cv
188.54 154.499 189.335 155.385 190.706 155.385 cv
191.149 155.385 191.6 155.293 191.893 155.151 cv
192.043 155.728 li
cp
f
193.681 150.277 mo
193.681 152.635 li
196.406 152.635 li
196.406 150.277 li
197.142 150.277 li
197.142 155.912 li
196.406 155.912 li
196.406 153.27 li
193.681 153.27 li
193.681 155.912 li
192.953 155.912 li
192.953 150.277 li
193.681 150.277 li
cp
f
190.757 148.656 mo
190.16 148.656 li
190.16 139.313 li
190.757 139.313 li
190.757 148.656 li
cp
f
163.81 159.232 mo
163.81 161.59 li
166.535 161.59 li
166.535 159.232 li
167.271 159.232 li
167.271 164.867 li
166.535 164.867 li
166.535 162.225 li
163.81 162.225 li
163.81 164.867 li
163.082 164.867 li
163.082 159.232 li
163.81 159.232 li
cp
f
168.312 165.802 mo
168.47 165.902 168.832 166.059 169.214 166.059 cv
169.922 166.059 170.141 165.608 170.134 165.27 cv
170.128 164.7 169.615 164.456 169.082 164.456 cv
168.776 164.456 li
168.776 164.042 li
169.082 164.042 li
169.483 164.042 169.991 163.836 169.991 163.354 cv
169.991 163.028 169.783 162.74 169.277 162.74 cv
168.951 162.74 168.638 162.884 168.463 163.009 cv
168.319 162.609 li
168.531 162.452 168.945 162.295 169.383 162.295 cv
170.184 162.295 170.548 162.771 170.548 163.266 cv
170.548 163.686 170.298 164.042 169.797 164.224 cv
169.797 164.237 li
170.298 164.337 170.704 164.713 170.704 165.282 cv
170.704 165.934 170.198 166.503 169.221 166.503 cv
168.763 166.503 168.363 166.359 168.162 166.228 cv
168.312 165.802 li
cp
f
175.691 164.683 mo
175.424 164.817 174.888 164.951 174.203 164.951 cv
172.615 164.951 171.418 163.947 171.418 162.1 cv
171.418 160.336 172.615 159.14 174.361 159.14 cv
175.064 159.14 175.507 159.29 175.699 159.391 cv
175.524 159.985 li
175.248 159.851 174.855 159.75 174.386 159.75 cv
173.066 159.75 172.188 160.595 172.188 162.075 cv
172.188 163.454 172.983 164.341 174.353 164.341 cv
174.796 164.341 175.248 164.249 175.541 164.106 cv
175.691 164.683 li
cp
f
178.697 159.97 mo
178.399 159.433 li
186.817 154.567 li
187.115 155.074 li
178.697 159.97 li
cp
f
207.538 164.683 mo
207.271 164.817 206.736 164.951 206.05 164.951 cv
204.462 164.951 203.266 163.947 203.266 162.1 cv
203.266 160.336 204.462 159.14 206.209 159.14 cv
206.911 159.14 207.354 159.29 207.546 159.391 cv
207.371 159.985 li
207.096 159.851 206.703 159.75 206.234 159.75 cv
204.913 159.75 204.035 160.595 204.035 162.075 cv
204.035 163.454 204.83 164.341 206.201 164.341 cv
206.644 164.341 207.096 164.249 207.388 164.106 cv
207.538 164.683 li
cp
f
209.176 159.232 mo
209.176 161.59 li
211.901 161.59 li
211.901 159.232 li
212.637 159.232 li
212.637 164.867 li
211.901 164.867 li
211.901 162.225 li
209.176 162.225 li
209.176 164.867 li
208.448 164.867 li
208.448 159.232 li
209.176 159.232 li
cp
f
213.676 165.802 mo
213.832 165.902 214.196 166.059 214.578 166.059 cv
215.285 166.059 215.505 165.608 215.499 165.27 cv
215.492 164.7 214.979 164.456 214.447 164.456 cv
214.139 164.456 li
214.139 164.042 li
214.447 164.042 li
214.848 164.042 215.354 163.836 215.354 163.354 cv
215.354 163.028 215.148 162.74 214.64 162.74 cv
214.315 162.74 214.002 162.884 213.826 163.009 cv
213.682 162.609 li
213.896 162.452 214.308 162.295 214.747 162.295 cv
215.549 162.295 215.911 162.771 215.911 163.266 cv
215.911 163.686 215.66 164.042 215.16 164.224 cv
215.16 164.237 li
215.66 164.337 216.068 164.713 216.068 165.282 cv
216.068 165.934 215.56 166.503 214.583 166.503 cv
214.127 166.503 213.726 166.359 213.526 166.228 cv
213.676 165.802 li
cp
f
202.727 159.552 mo
202.429 160.059 li
198.996 158.059 li
199.295 157.552 li
202.727 159.552 li
cp
f
418.553 93.6221 mo
418.553 95.9799 li
421.278 95.9799 li
421.278 93.6221 li
422.014 93.6221 li
422.014 99.2571 li
421.278 99.2571 li
421.278 96.6152 li
418.553 96.6152 li
418.553 99.2571 li
417.825 99.2571 li
417.825 93.6221 li
418.553 93.6221 li
cp
0 0 0 rgb
f
422.918 100.82 mo
422.918 100.482 li
423.35 100.062 li
424.389 99.0727 424.859 98.5467 424.865 97.933 cv
424.865 97.5198 424.665 97.1378 424.057 97.1378 cv
423.688 97.1378 423.381 97.3256 423.193 97.4822 cv
423.018 97.094 li
423.3 96.856 423.701 96.6807 424.17 96.6807 cv
425.047 96.6807 425.416 97.2818 425.416 97.8642 cv
425.416 98.6156 424.871 99.223 424.014 100.05 cv
423.688 100.35 li
423.688 100.363 li
425.516 100.363 li
425.516 100.82 li
422.918 100.82 li
cp
f
426.492 99.2571 mo
426.492 93.6221 li
427.286 93.6221 li
429.092 96.4729 li
429.51 97.1332 429.836 97.727 430.103 98.3042 cv
430.121 98.2956 li
430.053 97.5431 430.037 96.8577 430.037 95.9799 cv
430.037 93.6221 li
430.722 93.6221 li
430.722 99.2571 li
429.987 99.2571 li
428.198 96.3978 li
427.804 95.7704 427.428 95.1266 427.144 94.5164 cv
427.119 94.5249 li
427.16 95.2354 427.178 95.9128 427.178 96.8492 cv
427.178 99.2571 li
426.492 99.2571 li
cp
f
449.202 99.1655 mo
448.935 99.2992 448.4 99.433 447.714 99.433 cv
446.126 99.433 444.93 98.4294 444.93 96.5816 cv
444.93 94.8175 446.126 93.6221 447.873 93.6221 cv
448.576 93.6221 449.019 93.7724 449.211 93.8731 cv
449.035 94.4669 li
448.76 94.3325 448.366 94.2323 447.898 94.2323 cv
446.577 94.2323 445.699 95.0771 445.699 96.5566 cv
445.699 97.9364 446.493 98.8228 447.865 98.8228 cv
448.308 98.8228 448.76 98.7306 449.052 98.5882 cv
449.202 99.1655 li
cp
f
443.826 95.9412 mo
443.826 96.5382 li
433.229 96.5382 li
433.229 95.9412 li
443.826 95.9412 li
cp
f
463.901 93.6221 mo
463.901 95.9799 li
466.627 95.9799 li
466.627 93.6221 li
467.363 93.6221 li
467.363 99.2571 li
466.627 99.2571 li
466.627 96.6152 li
463.901 96.6152 li
463.901 99.2571 li
463.174 99.2571 li
463.174 93.6221 li
463.901 93.6221 li
cp
f
462.005 95.9412 mo
462.005 96.5382 li
451.558 96.5382 li
451.558 95.9412 li
462.005 95.9412 li
cp
f
449.202 81.2517 mo
448.935 81.3855 448.4 81.5192 447.714 81.5192 cv
446.126 81.5192 444.93 80.5156 444.93 78.6678 cv
444.93 76.9037 446.126 75.7083 447.873 75.7083 cv
448.576 75.7083 449.019 75.8586 449.211 75.9594 cv
449.035 76.5525 li
448.76 76.4193 448.366 76.3186 447.898 76.3186 cv
446.577 76.3186 445.699 77.1633 445.699 78.6428 cv
445.699 80.0227 446.493 80.909 447.865 80.909 cv
448.308 80.909 448.76 80.8168 449.052 80.6745 cv
449.202 81.2517 li
cp
f
450.556 78.6513 mo
450.556 79.8553 451.207 80.934 452.353 80.934 cv
453.507 80.934 454.159 79.8718 454.159 78.5927 cv
454.159 77.4724 453.574 76.302 452.361 76.302 cv
451.157 76.302 450.556 77.4138 450.556 78.6513 cv
cp
454.928 78.5597 mo
454.928 80.4991 453.749 81.5278 452.311 81.5278 cv
450.823 81.5278 449.778 80.3739 449.778 78.6678 cv
449.778 76.8787 450.89 75.7083 452.395 75.7083 cv
453.933 75.7083 454.928 76.8872 454.928 78.5597 cv
cp
f
456.314 78.6513 mo
456.314 79.8553 456.966 80.934 458.112 80.934 cv
459.265 80.934 459.917 79.8718 459.917 78.5927 cv
459.917 77.4724 459.332 76.302 458.12 76.302 cv
456.916 76.302 456.314 77.4138 456.314 78.6513 cv
cp
460.687 78.5597 mo
460.687 80.4991 459.508 81.5278 458.07 81.5278 cv
456.582 81.5278 455.537 80.3739 455.537 78.6678 cv
455.537 76.8787 456.648 75.7083 458.153 75.7083 cv
459.691 75.7083 460.687 76.8872 460.687 78.5597 cv
cp
f
462.357 75.8005 mo
462.357 78.1578 li
465.083 78.1578 li
465.083 75.8005 li
465.819 75.8005 li
465.819 81.4355 li
465.083 81.4355 li
465.083 78.7937 li
462.357 78.7937 li
462.357 81.4355 li
461.63 81.4355 li
461.63 75.8005 li
462.357 75.8005 li
cp
f
447.319 82.7171 mo
447.916 82.7171 li
447.916 92.0904 li
447.319 92.0904 li
447.319 82.7171 li
cp
f
449.202 117.072 mo
448.935 117.206 448.4 117.339 447.714 117.339 cv
446.126 117.339 444.93 116.336 444.93 114.488 cv
444.93 112.724 446.126 111.528 447.873 111.528 cv
448.576 111.528 449.019 111.679 449.211 111.78 cv
449.035 112.373 li
448.76 112.239 448.366 112.139 447.898 112.139 cv
446.577 112.139 445.699 112.983 445.699 114.463 cv
445.699 115.843 446.493 116.729 447.865 116.729 cv
448.308 116.729 448.76 116.637 449.052 116.495 cv
449.202 117.072 li
cp
1 0 0 rgb
f
450.84 111.621 mo
450.84 113.979 li
453.565 113.979 li
453.565 111.621 li
454.301 111.621 li
454.301 117.256 li
453.565 117.256 li
453.565 114.614 li
450.84 114.614 li
450.84 117.256 li
450.112 117.256 li
450.112 111.621 li
450.84 111.621 li
cp
f
455.215 118.818 mo
455.215 118.48 li
455.648 118.061 li
456.687 117.071 457.157 116.545 457.163 115.932 cv
457.163 115.518 456.962 115.136 456.355 115.136 cv
455.986 115.136 455.679 115.324 455.491 115.481 cv
455.316 115.093 li
455.597 114.855 455.998 114.679 456.468 114.679 cv
457.344 114.679 457.714 115.28 457.714 115.863 cv
457.714 116.614 457.169 117.222 456.311 118.048 cv
455.986 118.349 li
455.986 118.361 li
457.814 118.361 li
457.814 118.818 li
455.215 118.818 li
cp
f
447.916 110.001 mo
447.319 110.001 li
447.319 100.628 li
447.916 100.628 li
447.916 110.001 li
cp
f
447.916 131.882 mo
447.617 132.061 li
447.319 131.882 li
447.319 118.568 li
447.916 118.568 li
447.916 131.882 li
cp
f
432.423 141.195 mo
431.826 140.837 li
447.319 131.882 li
447.617 132.061 li
447.617 132.419 li
432.423 141.195 li
cp
f
434.423 142.509 mo
434.124 142.001 li
447.468 134.27 li
447.766 134.807 li
434.423 142.509 li
cp
f
432.423 158.748 mo
431.826 159.106 li
431.826 140.837 li
432.423 141.195 li
432.423 158.748 li
cp
f
447.617 167.524 mo
447.617 168.241 li
431.826 159.106 li
432.423 158.748 li
447.617 167.524 li
cp
f
447.766 165.136 mo
447.468 165.673 li
434.124 157.942 li
434.423 157.435 li
447.766 165.136 li
cp
f
462.841 158.748 mo
463.438 159.106 li
447.617 168.241 li
447.617 167.524 li
462.841 158.748 li
cp
f
462.841 141.195 mo
463.438 140.837 li
463.438 159.106 li
462.841 158.748 li
462.841 141.195 li
cp
f
460.692 142.27 mo
461.289 142.27 li
461.289 157.673 li
460.692 157.673 li
460.692 142.27 li
cp
f
447.617 132.419 mo
447.617 132.061 li
447.916 131.882 li
463.438 140.837 li
462.841 141.195 li
447.617 132.419 li
cp
f
47.8893 228.818 mo
47.8893 231.176 li
50.6149 231.176 li
50.6149 228.818 li
51.351 228.818 li
51.351 234.453 li
50.6149 234.453 li
50.6149 231.811 li
47.8893 231.811 li
47.8893 234.453 li
47.1618 234.453 li
47.1618 228.818 li
47.8893 228.818 li
cp
0 0 0 rgb
f
52.2561 236.015 mo
52.2561 235.677 li
52.6881 235.257 li
53.7276 234.268 54.1972 233.742 54.2035 233.128 cv
54.2035 232.715 54.0031 232.333 53.3957 232.333 cv
53.0263 232.333 52.7194 232.521 52.5316 232.677 cv
52.3563 232.289 li
52.638 232.051 53.0388 231.876 53.5084 231.876 cv
54.3851 231.876 54.7545 232.477 54.7545 233.059 cv
54.7545 233.811 54.2098 234.418 53.3519 235.245 cv
53.0263 235.545 li
53.0263 235.558 li
54.8547 235.558 li
54.8547 236.015 li
52.2561 236.015 li
cp
f
55.8281 234.453 mo
55.8281 228.818 li
56.6228 228.818 li
58.4285 231.669 li
58.8463 232.329 59.1725 232.923 59.44 233.5 cv
59.4571 233.492 li
59.3899 232.739 59.3734 232.054 59.3734 231.176 cv
59.3734 228.818 li
60.0588 228.818 li
60.0588 234.453 li
59.3233 234.453 li
57.5342 231.594 li
57.1408 230.967 56.7645 230.323 56.4805 229.713 cv
56.4554 229.721 li
56.497 230.432 56.5141 231.109 56.5141 232.045 cv
56.5141 234.453 li
55.8281 234.453 li
cp
f
78.5435 234.358 mo
78.276 234.491 77.7409 234.625 77.0555 234.625 cv
75.4667 234.625 74.2713 233.622 74.2713 231.774 cv
74.2713 230.01 75.4667 228.814 77.2143 228.814 cv
77.9168 228.814 78.3597 228.965 78.5521 229.065 cv
78.3762 229.659 li
78.1007 229.525 77.7073 229.425 77.2394 229.425 cv
75.9182 229.425 75.0404 230.269 75.0404 231.749 cv
75.0404 233.129 75.8345 234.015 77.2058 234.015 cv
77.6493 234.015 78.1007 233.923 78.3933 233.78 cv
78.5435 234.358 li
cp
f
73.1638 231.137 mo
73.1638 231.734 li
62.5666 231.734 li
62.5666 231.137 li
73.1638 231.137 li
cp
f
93.2416 228.818 mo
93.2416 231.176 li
95.9678 231.176 li
95.9678 228.818 li
96.7032 228.818 li
96.7032 234.453 li
95.9678 234.453 li
95.9678 231.811 li
93.2416 231.811 li
93.2416 234.453 li
92.5141 234.453 li
92.5141 228.818 li
93.2416 228.818 li
cp
f
91.3431 231.137 mo
91.3431 231.734 li
80.8952 231.734 li
80.8952 231.137 li
91.3431 231.137 li
cp
f
78.5435 216.446 mo
78.276 216.58 77.7409 216.714 77.0555 216.714 cv
75.4667 216.714 74.2713 215.71 74.2713 213.862 cv
74.2713 212.098 75.4667 210.903 77.2143 210.903 cv
77.9168 210.903 78.3597 211.053 78.5521 211.154 cv
78.3762 211.747 li
78.1007 211.614 77.7073 211.513 77.2394 211.513 cv
75.9182 211.513 75.0404 212.358 75.0404 213.837 cv
75.0404 215.217 75.8345 216.103 77.2058 216.103 cv
77.6493 216.103 78.1007 216.011 78.3933 215.869 cv
78.5435 216.446 li
cp
f
79.8967 213.846 mo
79.8967 215.05 80.5485 216.129 81.6944 216.129 cv
82.8477 216.129 83.5 215.066 83.5 213.787 cv
83.5 212.667 82.9148 211.497 81.7023 211.497 cv
80.4984 211.497 79.8967 212.608 79.8967 213.846 cv
cp
84.2691 213.754 mo
84.2691 215.694 83.0902 216.722 81.6522 216.722 cv
80.1642 216.722 79.1191 215.568 79.1191 213.862 cv
79.1191 212.073 80.2308 210.903 81.7359 210.903 cv
83.274 210.903 84.2691 212.082 84.2691 213.754 cv
cp
f
85.6552 213.846 mo
85.6552 215.05 86.307 216.129 87.4529 216.129 cv
88.6062 216.129 89.2586 215.066 89.2586 213.787 cv
89.2586 212.667 88.6734 211.497 87.4609 211.497 cv
86.2569 211.497 85.6552 212.608 85.6552 213.846 cv
cp
90.0276 213.754 mo
90.0276 215.694 88.8487 216.722 87.4108 216.722 cv
85.9228 216.722 84.8776 215.568 84.8776 213.862 cv
84.8776 212.073 85.9894 210.903 87.4945 210.903 cv
89.0326 210.903 90.0276 212.082 90.0276 213.754 cv
cp
f
91.6984 210.995 mo
91.6984 213.352 li
94.424 213.352 li
94.424 210.995 li
95.1594 210.995 li
95.1594 216.63 li
94.424 216.63 li
94.424 213.988 li
91.6984 213.988 li
91.6984 216.63 li
90.9709 216.63 li
90.9709 210.995 li
91.6984 210.995 li
cp
f
76.6564 217.913 mo
77.2534 217.913 li
77.2534 227.287 li
76.6564 227.287 li
76.6564 217.913 li
cp
f
78.5435 252.264 mo
78.276 252.398 77.7409 252.532 77.0555 252.532 cv
75.4667 252.532 74.2713 251.528 74.2713 249.68 cv
74.2713 247.916 75.4667 246.721 77.2143 246.721 cv
77.9168 246.721 78.3597 246.871 78.5521 246.972 cv
78.3762 247.565 li
78.1007 247.431 77.7073 247.331 77.2394 247.331 cv
75.9182 247.331 75.0404 248.176 75.0404 249.655 cv
75.0404 251.035 75.8345 251.921 77.2058 251.921 cv
77.6493 251.921 78.1007 251.829 78.3933 251.687 cv
78.5435 252.264 li
cp
1 0 0 rgb
f
80.1807 246.813 mo
80.1807 249.171 li
82.9063 249.171 li
82.9063 246.813 li
83.6423 246.813 li
83.6423 252.448 li
82.9063 252.448 li
82.9063 249.806 li
80.1807 249.806 li
80.1807 252.448 li
79.4532 252.448 li
79.4532 246.813 li
80.1807 246.813 li
cp
f
84.5537 254.013 mo
84.5537 253.675 li
84.9858 253.256 li
86.0252 252.266 86.4949 251.74 86.5011 251.127 cv
86.5011 250.713 86.3007 250.331 85.6933 250.331 cv
85.3239 250.331 85.0171 250.519 84.8292 250.676 cv
84.6539 250.288 li
84.9357 250.05 85.3364 249.874 85.8061 249.874 cv
86.6827 249.874 87.0522 250.475 87.0522 251.058 cv
87.0522 251.809 86.5074 252.417 85.6495 253.243 cv
85.3239 253.544 li
85.3239 253.556 li
87.1523 253.556 li
87.1523 254.013 li
84.5537 254.013 li
cp
f
77.2534 245.197 mo
76.6564 245.197 li
76.6564 235.824 li
77.2534 235.824 li
77.2534 245.197 li
cp
f
78.5435 270.174 mo
78.276 270.308 77.7409 270.442 77.0555 270.442 cv
75.4667 270.442 74.2713 269.438 74.2713 267.591 cv
74.2713 265.826 75.4667 264.631 77.2143 264.631 cv
77.9168 264.631 78.3597 264.781 78.5521 264.882 cv
78.3762 265.475 li
78.1007 265.342 77.7073 265.241 77.2394 265.241 cv
75.9182 265.241 75.0404 266.086 75.0404 267.566 cv
75.0404 268.945 75.8345 269.832 77.2058 269.832 cv
77.6493 269.832 78.1007 269.74 78.3933 269.597 cv
78.5435 270.174 li
cp
f
77.2534 263.108 mo
76.6564 263.108 li
76.6564 253.764 li
77.2534 253.764 li
77.2534 263.108 li
cp
f
77.2534 294.72 mo
76.9549 295.019 li
76.6564 294.929 li
76.6564 271.645 li
77.2534 271.645 li
77.2534 294.72 li
cp
f
96.4528 270.174 mo
96.1852 270.308 95.6501 270.442 94.9642 270.442 cv
93.3754 270.442 92.18 269.438 92.18 267.591 cv
92.18 265.826 93.3754 264.631 95.123 264.631 cv
95.8255 264.631 96.2683 264.781 96.4607 264.882 cv
96.2854 265.475 li
96.0088 265.342 95.616 265.241 95.148 265.241 cv
93.8268 265.241 92.949 266.086 92.949 267.566 cv
92.949 268.945 93.7431 269.832 95.115 269.832 cv
95.5579 269.832 96.0088 269.74 96.3014 269.597 cv
96.4528 270.174 li
cp
f
98.0888 264.723 mo
98.0888 267.081 li
100.814 267.081 li
100.814 264.723 li
101.55 264.723 li
101.55 270.358 li
100.814 270.358 li
100.814 267.716 li
98.0888 267.716 li
98.0888 270.358 li
97.3613 270.358 li
97.3613 264.723 li
98.0888 264.723 li
cp
f
91.1043 266.959 mo
91.1043 267.556 li
80.8952 267.556 li
80.8952 266.959 li
91.1043 266.959 li
cp
f
91.1043 269.108 mo
91.1043 269.705 li
80.8952 269.705 li
80.8952 269.108 li
91.1043 269.108 li
cp
f
94.7163 294.72 mo
94.8656 295.019 li
94.7163 295.317 li
77.134 295.317 li
76.9549 295.019 li
77.2534 294.72 li
94.7163 294.72 li
cp
f
93.6417 296.87 mo
93.6417 297.467 li
78.2086 297.467 li
78.2086 296.87 li
93.6417 296.87 li
cp
f
101.469 285.768 mo
101.469 280.133 li
102.264 280.133 li
104.069 282.984 li
104.487 283.645 104.814 284.238 105.081 284.816 cv
105.097 284.807 li
105.031 284.054 105.014 283.369 105.014 282.491 cv
105.014 280.133 li
105.7 280.133 li
105.7 285.768 li
104.964 285.768 li
103.174 282.909 li
102.782 282.282 102.406 281.638 102.121 281.028 cv
102.096 281.036 li
102.138 281.747 102.154 282.424 102.154 283.361 cv
102.154 285.768 li
101.469 285.768 li
cp
f
107.697 280.133 mo
107.697 282.491 li
110.422 282.491 li
110.422 280.133 li
111.158 280.133 li
111.158 285.768 li
110.422 285.768 li
110.422 283.127 li
107.697 283.127 li
107.697 285.768 li
106.969 285.768 li
106.969 280.133 li
107.697 280.133 li
cp
f
101.612 278.332 mo
101.104 278.63 li
96.8656 271.287 li
97.373 270.989 li
101.612 278.332 li
cp
f
100.627 286.631 mo
101.104 286.989 li
95.2238 295.049 li
94.8656 295.019 li
94.7163 294.72 li
100.627 286.631 li
cp
f
68.3578 310.541 mo
67.6712 310.541 li
76.6564 294.929 li
76.9549 295.019 li
77.134 295.317 li
68.3578 310.541 li
cp
f
77.134 325.736 mo
76.8056 326.333 li
67.6712 310.541 li
68.3578 310.541 li
77.134 325.736 li
cp
f
78.4773 323.736 mo
77.94 324.034 li
70.2384 310.691 li
70.7459 310.392 li
78.4773 323.736 li
cp
f
94.7163 325.736 mo
95.0447 326.333 li
76.8056 326.333 li
77.134 325.736 li
94.7163 325.736 li
cp
f
103.493 310.541 mo
104.179 310.541 li
95.0447 326.333 li
94.7163 325.736 li
103.493 310.541 li
cp
f
101.104 310.392 mo
101.612 310.691 li
93.9103 324.034 li
93.373 323.736 li
101.104 310.392 li
cp
f
94.7163 295.317 mo
94.8656 295.019 li
95.2238 295.049 li
104.179 310.541 li
103.493 310.541 li
94.7163 295.317 li
cp
f
226.55 228.819 mo
226.55 231.176 li
229.275 231.176 li
229.275 228.819 li
230.011 228.819 li
230.011 234.454 li
229.275 234.454 li
229.275 231.812 li
226.55 231.812 li
226.55 234.454 li
225.822 234.454 li
225.822 228.819 li
226.55 228.819 li
cp
0 0 0 rgb
f
230.922 236.015 mo
230.922 235.677 li
231.353 235.258 li
232.393 234.268 232.862 233.742 232.869 233.129 cv
232.869 232.715 232.668 232.333 232.06 232.333 cv
231.691 232.333 231.384 232.521 231.197 232.678 cv
231.022 232.29 li
231.303 232.052 231.704 231.876 232.174 231.876 cv
233.051 231.876 233.42 232.477 233.42 233.06 cv
233.42 233.811 232.875 234.419 232.017 235.245 cv
231.691 235.546 li
231.691 235.558 li
233.52 235.558 li
233.52 236.015 li
230.922 236.015 li
cp
f
234.487 234.454 mo
234.487 228.819 li
235.282 228.819 li
237.088 231.67 li
237.506 232.33 237.832 232.924 238.1 233.501 cv
238.116 233.492 li
238.05 232.74 238.033 232.054 238.033 231.176 cv
238.033 228.819 li
238.718 228.819 li
238.718 234.454 li
237.983 234.454 li
236.193 231.595 li
235.8 230.967 235.424 230.323 235.14 229.713 cv
235.115 229.722 li
235.157 230.432 235.173 231.11 235.173 232.046 cv
235.173 234.454 li
234.487 234.454 li
cp
f
257.201 234.358 mo
256.933 234.491 256.398 234.625 255.713 234.625 cv
254.124 234.625 252.928 233.622 252.928 231.774 cv
252.928 230.01 254.124 228.814 255.871 228.814 cv
256.573 228.814 257.016 228.965 257.209 229.065 cv
257.033 229.659 li
256.758 229.525 256.365 229.425 255.896 229.425 cv
254.575 229.425 253.697 230.269 253.697 231.749 cv
253.697 233.129 254.492 234.015 255.863 234.015 cv
256.306 234.015 256.758 233.923 257.05 233.78 cv
257.201 234.358 li
cp
f
251.823 231.137 mo
251.823 231.734 li
241.226 231.734 li
241.226 231.137 li
251.823 231.137 li
cp
f
271.903 228.819 mo
271.903 231.176 li
274.629 231.176 li
274.629 228.819 li
275.364 228.819 li
275.364 234.454 li
274.629 234.454 li
274.629 231.812 li
271.903 231.812 li
271.903 234.454 li
271.176 234.454 li
271.176 228.819 li
271.903 228.819 li
cp
f
270.003 231.137 mo
270.003 231.734 li
259.555 231.734 li
259.555 231.137 li
270.003 231.137 li
cp
f
257.201 216.446 mo
256.933 216.58 256.398 216.714 255.713 216.714 cv
254.124 216.714 252.928 215.71 252.928 213.862 cv
252.928 212.098 254.124 210.903 255.871 210.903 cv
256.573 210.903 257.016 211.053 257.209 211.154 cv
257.033 211.748 li
256.758 211.613 256.365 211.513 255.896 211.513 cv
254.575 211.513 253.697 212.358 253.697 213.837 cv
253.697 215.217 254.492 216.103 255.863 216.103 cv
256.306 216.103 256.758 216.011 257.05 215.869 cv
257.201 216.446 li
cp
f
258.553 213.846 mo
258.553 215.05 259.206 216.129 260.351 216.129 cv
261.505 216.129 262.158 215.066 262.158 213.787 cv
262.158 212.667 261.571 211.497 260.36 211.497 cv
259.155 211.497 258.553 212.608 258.553 213.846 cv
cp
262.926 213.754 mo
262.926 215.694 261.748 216.722 260.31 216.722 cv
258.821 216.722 257.776 215.568 257.776 213.862 cv
257.776 212.073 258.888 210.903 260.393 210.903 cv
261.931 210.903 262.926 212.082 262.926 213.754 cv
cp
f
264.312 213.846 mo
264.312 215.05 264.964 216.129 266.109 216.129 cv
267.264 216.129 267.916 215.066 267.916 213.787 cv
267.916 212.667 267.33 211.497 266.118 211.497 cv
264.914 211.497 264.312 212.608 264.312 213.846 cv
cp
268.685 213.754 mo
268.685 215.694 267.506 216.722 266.068 216.722 cv
264.579 216.722 263.534 215.568 263.534 213.862 cv
263.534 212.073 264.646 210.903 266.152 210.903 cv
267.69 210.903 268.685 212.082 268.685 213.754 cv
cp
f
270.355 210.995 mo
270.355 213.353 li
273.08 213.353 li
273.08 210.995 li
273.816 210.995 li
273.816 216.63 li
273.08 216.63 li
273.08 213.988 li
270.355 213.988 li
270.355 216.63 li
269.627 216.63 li
269.627 210.995 li
270.355 210.995 li
cp
f
255.316 217.913 mo
255.913 217.913 li
255.913 227.287 li
255.316 227.287 li
255.316 217.913 li
cp
f
257.201 252.264 mo
256.933 252.398 256.398 252.532 255.713 252.532 cv
254.124 252.532 252.928 251.528 252.928 249.68 cv
252.928 247.916 254.124 246.721 255.871 246.721 cv
256.573 246.721 257.016 246.871 257.209 246.972 cv
257.033 247.565 li
256.758 247.432 256.365 247.331 255.896 247.331 cv
254.575 247.331 253.697 248.176 253.697 249.655 cv
253.697 251.035 254.492 251.921 255.863 251.921 cv
256.306 251.921 256.758 251.829 257.05 251.687 cv
257.201 252.264 li
cp
1 0 0 rgb
f
258.838 246.813 mo
258.838 249.17 li
261.563 249.17 li
261.563 246.813 li
262.299 246.813 li
262.299 252.448 li
261.563 252.448 li
261.563 249.806 li
258.838 249.806 li
258.838 252.448 li
258.11 252.448 li
258.11 246.813 li
258.838 246.813 li
cp
f
263.207 254.014 mo
263.207 253.676 li
263.639 253.256 li
264.678 252.267 265.147 251.741 265.154 251.127 cv
265.154 250.714 264.954 250.332 264.346 250.332 cv
263.977 250.332 263.67 250.52 263.483 250.676 cv
263.308 250.288 li
263.589 250.05 263.99 249.875 264.46 249.875 cv
265.336 249.875 265.705 250.476 265.705 251.058 cv
265.705 251.81 265.161 252.417 264.303 253.244 cv
263.977 253.544 li
263.977 253.557 li
265.805 253.557 li
265.805 254.014 li
263.207 254.014 li
cp
f
255.913 245.197 mo
255.316 245.197 li
255.316 235.824 li
255.913 235.824 li
255.913 245.197 li
cp
f
257.201 270.175 mo
256.933 270.309 256.398 270.443 255.713 270.443 cv
254.124 270.443 252.928 269.439 252.928 267.591 cv
252.928 265.827 254.124 264.632 255.871 264.632 cv
256.573 264.632 257.016 264.782 257.209 264.883 cv
257.033 265.476 li
256.758 265.343 256.365 265.242 255.896 265.242 cv
254.575 265.242 253.697 266.087 253.697 267.566 cv
253.697 268.946 254.492 269.832 255.863 269.832 cv
256.306 269.832 256.758 269.74 257.05 269.598 cv
257.201 270.175 li
cp
f
258.838 264.724 mo
258.838 267.081 li
261.563 267.081 li
261.563 264.724 li
262.299 264.724 li
262.299 270.359 li
261.563 270.359 li
261.563 267.717 li
258.838 267.717 li
258.838 270.359 li
258.11 270.359 li
258.11 264.724 li
258.838 264.724 li
cp
f
263.207 271.925 mo
263.207 271.587 li
263.639 271.168 li
264.678 270.178 265.147 269.652 265.154 269.039 cv
265.154 268.625 264.954 268.243 264.346 268.243 cv
263.977 268.243 263.67 268.431 263.483 268.588 cv
263.308 268.2 li
263.589 267.962 263.99 267.786 264.46 267.786 cv
265.336 267.786 265.705 268.388 265.705 268.97 cv
265.705 269.721 265.161 270.329 264.303 271.155 cv
263.977 271.456 li
263.977 271.468 li
265.805 271.468 li
265.805 271.925 li
263.207 271.925 li
cp
f
255.913 263.108 mo
255.316 263.108 li
255.316 253.765 li
255.913 253.765 li
255.913 263.108 li
cp
f
257.201 288.09 mo
256.933 288.224 256.398 288.357 255.713 288.357 cv
254.124 288.357 252.928 287.354 252.928 285.506 cv
252.928 283.742 254.124 282.547 255.871 282.547 cv
256.573 282.547 257.016 282.697 257.209 282.798 cv
257.033 283.391 li
256.758 283.257 256.365 283.157 255.896 283.157 cv
254.575 283.157 253.697 284.002 253.697 285.481 cv
253.697 286.861 254.492 287.747 255.863 287.747 cv
256.306 287.747 256.758 287.655 257.05 287.513 cv
257.201 288.09 li
cp
f
258.838 282.639 mo
258.838 284.997 li
261.563 284.997 li
261.563 282.639 li
262.299 282.639 li
262.299 288.274 li
261.563 288.274 li
261.563 285.632 li
258.838 285.632 li
258.838 288.274 li
258.11 288.274 li
258.11 282.639 li
258.838 282.639 li
cp
f
263.207 289.836 mo
263.207 289.498 li
263.639 289.079 li
264.678 288.089 265.147 287.563 265.154 286.95 cv
265.154 286.536 264.954 286.154 264.346 286.154 cv
263.977 286.154 263.67 286.342 263.483 286.499 cv
263.308 286.111 li
263.589 285.873 263.99 285.697 264.46 285.697 cv
265.336 285.697 265.705 286.298 265.705 286.881 cv
265.705 287.632 265.161 288.24 264.303 289.066 cv
263.977 289.367 li
263.977 289.379 li
265.805 289.379 li
265.805 289.836 li
263.207 289.836 li
cp
f
255.913 281.019 mo
255.316 281.019 li
255.316 271.675 li
255.913 271.675 li
255.913 281.019 li
cp
f
257.201 305.999 mo
256.933 306.133 256.398 306.267 255.713 306.267 cv
254.124 306.267 252.928 305.263 252.928 303.415 cv
252.928 301.651 254.124 300.456 255.871 300.456 cv
256.573 300.456 257.016 300.606 257.209 300.707 cv
257.033 301.3 li
256.758 301.167 256.365 301.066 255.896 301.066 cv
254.575 301.066 253.697 301.911 253.697 303.39 cv
253.697 304.77 254.492 305.656 255.863 305.656 cv
256.306 305.656 256.758 305.564 257.05 305.422 cv
257.201 305.999 li
cp
f
258.838 300.548 mo
258.838 302.905 li
261.563 302.905 li
261.563 300.548 li
262.299 300.548 li
262.299 306.183 li
261.563 306.183 li
261.563 303.541 li
258.838 303.541 li
258.838 306.183 li
258.11 306.183 li
258.11 300.548 li
258.838 300.548 li
cp
f
263.207 307.747 mo
263.207 307.409 li
263.639 306.989 li
264.678 306 265.147 305.474 265.154 304.86 cv
265.154 304.447 264.954 304.065 264.346 304.065 cv
263.977 304.065 263.67 304.253 263.483 304.409 cv
263.308 304.021 li
263.589 303.783 263.99 303.608 264.46 303.608 cv
265.336 303.608 265.705 304.209 265.705 304.791 cv
265.705 305.543 265.161 306.15 264.303 306.977 cv
263.977 307.277 li
263.977 307.29 li
265.805 307.29 li
265.805 307.747 li
263.207 307.747 li
cp
f
255.913 298.929 mo
255.316 298.929 li
255.316 289.586 li
255.913 289.586 li
255.913 298.929 li
cp
f
253.263 324.011 mo
253.263 318.376 li
254.057 318.376 li
255.863 321.227 li
256.281 321.888 256.607 322.481 256.875 323.058 cv
256.891 323.049 li
256.825 322.297 256.808 321.612 256.808 320.733 cv
256.808 318.376 li
257.493 318.376 li
257.493 324.011 li
256.758 324.011 li
254.968 321.152 li
254.575 320.524 254.2 319.88 253.915 319.27 cv
253.89 319.278 li
253.932 319.988 253.948 320.667 253.948 321.603 cv
253.948 324.011 li
253.263 324.011 li
cp
f
259.49 318.376 mo
259.49 320.733 li
262.216 320.733 li
262.216 318.376 li
262.951 318.376 li
262.951 324.011 li
262.216 324.011 li
262.216 321.368 li
259.49 321.368 li
259.49 324.011 li
258.763 324.011 li
258.763 318.376 li
259.49 318.376 li
cp
f
263.859 325.567 mo
263.859 325.23 li
264.291 324.81 li
265.331 323.821 265.801 323.295 265.807 322.681 cv
265.807 322.268 265.606 321.885 264.999 321.885 cv
264.629 321.885 264.323 322.074 264.134 322.23 cv
263.959 321.842 li
264.241 321.604 264.642 321.429 265.111 321.429 cv
265.988 321.429 266.358 322.03 266.358 322.612 cv
266.358 323.363 265.812 323.971 264.955 324.798 cv
264.629 325.098 li
264.629 325.111 li
266.458 325.111 li
266.458 325.567 li
263.859 325.567 li
cp
f
255.913 316.84 mo
255.316 316.84 li
255.316 307.497 li
255.913 307.497 li
255.913 316.84 li
cp
f
43.5716 388.256 mo
43.5716 390.614 li
46.2972 390.614 li
46.2972 388.256 li
47.0332 388.256 li
47.0332 393.892 li
46.2972 393.892 li
46.2972 391.25 li
43.5716 391.25 li
43.5716 393.892 li
42.8441 393.892 li
42.8441 388.256 li
43.5716 388.256 li
cp
0 0 0 rgb
f
47.9389 395.453 mo
47.9389 395.115 li
48.371 394.696 li
49.4104 393.705 49.8801 393.179 49.8863 392.567 cv
49.8863 392.152 49.6859 391.771 49.0786 391.771 cv
48.7091 391.771 48.4023 391.959 48.2144 392.116 cv
48.0391 391.727 li
48.3209 391.49 48.7216 391.314 49.1913 391.314 cv
50.0679 391.314 50.4374 391.916 50.4374 392.497 cv
50.4374 393.249 49.8926 393.856 49.0347 394.682 cv
48.7091 394.983 li
48.7091 394.996 li
50.5375 394.996 li
50.5375 395.453 li
47.9389 395.453 li
cp
f
51.507 393.892 mo
51.507 388.256 li
52.3017 388.256 li
54.1073 391.108 li
54.5252 391.769 54.8513 392.362 55.1189 392.939 cv
55.136 392.93 li
55.0688 392.179 55.0523 391.492 55.0523 390.614 cv
55.0523 388.256 li
55.7377 388.256 li
55.7377 393.892 li
55.0022 393.892 li
53.2125 391.032 li
52.8197 390.406 52.4434 389.762 52.1593 389.151 cv
52.1343 389.159 li
52.1758 389.871 52.1929 390.547 52.1929 391.484 cv
52.1929 393.892 li
51.507 393.892 li
cp
f
74.2178 393.795 mo
73.9503 393.93 73.4152 394.063 72.7298 394.063 cv
71.141 394.063 69.9456 393.06 69.9456 391.212 cv
69.9456 389.448 71.141 388.253 72.8886 388.253 cv
73.5905 388.253 74.034 388.403 74.2264 388.504 cv
74.0505 389.097 li
73.775 388.963 73.3816 388.863 72.9137 388.863 cv
71.5925 388.863 70.7147 389.707 70.7147 391.187 cv
70.7147 392.567 71.5088 393.453 72.8801 393.453 cv
73.323 393.453 73.775 393.362 74.0676 393.219 cv
74.2178 393.795 li
cp
f
68.8413 390.575 mo
68.8413 391.172 li
58.2441 391.172 li
58.2441 390.575 li
68.8413 390.575 li
cp
f
88.9222 388.256 mo
88.9222 390.614 li
91.6478 390.614 li
91.6478 388.256 li
92.3838 388.256 li
92.3838 393.892 li
91.6478 393.892 li
91.6478 391.25 li
88.9222 391.25 li
88.9222 393.892 li
88.1947 393.892 li
88.1947 388.256 li
88.9222 388.256 li
cp
f
87.0207 390.575 mo
87.0207 391.172 li
76.5728 391.172 li
76.5728 390.575 li
87.0207 390.575 li
cp
f
74.2178 375.883 mo
73.9503 376.018 73.4152 376.151 72.7298 376.151 cv
71.141 376.151 69.9456 375.148 69.9456 373.3 cv
69.9456 371.536 71.141 370.341 72.8886 370.341 cv
73.5905 370.341 74.034 370.491 74.2264 370.591 cv
74.0505 371.185 li
73.775 371.051 73.3816 370.951 72.9137 370.951 cv
71.5925 370.951 70.7147 371.795 70.7147 373.275 cv
70.7147 374.655 71.5088 375.541 72.8801 375.541 cv
73.323 375.541 73.775 375.449 74.0676 375.307 cv
74.2178 375.883 li
cp
f
75.571 373.284 mo
75.571 374.487 76.2227 375.566 77.3681 375.566 cv
78.5219 375.566 79.1743 374.504 79.1743 373.225 cv
79.1743 372.105 78.5891 370.934 77.3766 370.934 cv
76.1727 370.934 75.571 372.046 75.571 373.284 cv
cp
79.9434 373.192 mo
79.9434 375.132 78.7645 376.16 77.3265 376.16 cv
75.8385 376.16 74.7934 375.005 74.7934 373.3 cv
74.7934 371.511 75.9051 370.341 77.4102 370.341 cv
78.9483 370.341 79.9434 371.519 79.9434 373.192 cv
cp
f
81.3295 373.284 mo
81.3295 374.487 81.9813 375.566 83.1266 375.566 cv
84.2805 375.566 84.9329 374.504 84.9329 373.225 cv
84.9329 372.105 84.3477 370.934 83.1352 370.934 cv
81.9312 370.934 81.3295 372.046 81.3295 373.284 cv
cp
85.7019 373.192 mo
85.7019 375.132 84.523 376.16 83.0851 376.16 cv
81.5971 376.16 80.5519 375.005 80.5519 373.3 cv
80.5519 371.511 81.6637 370.341 83.1688 370.341 cv
84.7069 370.341 85.7019 371.519 85.7019 373.192 cv
cp
f
87.3727 370.432 mo
87.3727 372.79 li
90.0983 372.79 li
90.0983 370.432 li
90.8343 370.432 li
90.8343 376.068 li
90.0983 376.068 li
90.0983 373.425 li
87.3727 373.425 li
87.3727 376.068 li
86.6452 376.068 li
86.6452 370.432 li
87.3727 370.432 li
cp
f
72.3339 377.351 mo
72.9309 377.351 li
72.9309 386.724 li
72.3339 386.724 li
72.3339 377.351 li
cp
f
74.2178 411.702 mo
73.9503 411.836 73.4152 411.969 72.7298 411.969 cv
71.141 411.969 69.9456 410.966 69.9456 409.118 cv
69.9456 407.355 71.141 406.159 72.8886 406.159 cv
73.5905 406.159 74.034 406.31 74.2264 406.41 cv
74.0505 407.003 li
73.775 406.87 73.3816 406.77 72.9137 406.77 cv
71.5925 406.77 70.7147 407.613 70.7147 409.093 cv
70.7147 410.473 71.5088 411.359 72.8801 411.359 cv
73.323 411.359 73.775 411.268 74.0676 411.126 cv
74.2178 411.702 li
cp
1 0 0 rgb
f
75.855 406.251 mo
75.855 408.608 li
78.5806 408.608 li
78.5806 406.251 li
79.3166 406.251 li
79.3166 411.886 li
78.5806 411.886 li
78.5806 409.244 li
75.855 409.244 li
75.855 411.886 li
75.1275 411.886 li
75.1275 406.251 li
75.855 406.251 li
cp
f
80.2246 413.452 mo
80.2246 413.113 li
80.6566 412.693 li
81.6961 411.705 82.1657 411.179 82.172 410.564 cv
82.172 410.152 81.9716 409.77 81.3642 409.77 cv
80.9948 409.77 80.688 409.957 80.5001 410.113 cv
80.3248 409.726 li
80.6066 409.487 81.0073 409.312 81.4769 409.312 cv
82.3536 409.312 82.723 409.913 82.723 410.496 cv
82.723 411.247 82.1783 411.855 81.3204 412.682 cv
80.9948 412.982 li
80.9948 412.994 li
82.8232 412.994 li
82.8232 413.452 li
80.2246 413.452 li
cp
f
72.9309 404.635 mo
72.3339 404.635 li
72.3339 395.262 li
72.9309 395.262 li
72.9309 404.635 li
cp
f
74.2178 429.613 mo
73.9503 429.747 73.4152 429.88 72.7298 429.88 cv
71.141 429.88 69.9456 428.877 69.9456 427.029 cv
69.9456 425.266 71.141 424.07 72.8886 424.07 cv
73.5905 424.07 74.034 424.221 74.2264 424.321 cv
74.0505 424.914 li
73.775 424.781 73.3816 424.681 72.9137 424.681 cv
71.5925 424.681 70.7147 425.524 70.7147 427.004 cv
70.7147 428.384 71.5088 429.27 72.8801 429.27 cv
73.323 429.27 73.775 429.179 74.0676 429.036 cv
74.2178 429.613 li
cp
f
72.9309 422.546 mo
72.3339 422.546 li
72.3339 413.202 li
72.9309 413.202 li
72.9309 422.546 li
cp
f
64.9499 451.928 mo
64.9499 454.286 li
67.6754 454.286 li
67.6754 451.928 li
68.4115 451.928 li
68.4115 457.564 li
67.6754 457.564 li
67.6754 454.922 li
64.9499 454.922 li
64.9499 457.564 li
64.2224 457.564 li
64.2224 451.928 li
64.9499 451.928 li
cp
f
73.6099 457.38 mo
73.3423 457.514 72.8072 457.647 72.1219 457.647 cv
70.5331 457.647 69.3376 456.644 69.3376 454.796 cv
69.3376 453.033 70.5331 451.837 72.2807 451.837 cv
72.9826 451.837 73.426 451.988 73.6184 452.088 cv
73.4425 452.681 li
73.167 452.548 72.7737 452.448 72.3057 452.448 cv
70.9845 452.448 70.1067 453.291 70.1067 454.771 cv
70.1067 456.151 70.9008 457.037 72.2721 457.037 cv
72.715 457.037 73.167 456.946 73.4596 456.803 cv
73.6099 457.38 li
cp
f
72.9309 450.307 mo
72.3339 450.307 li
72.3339 431.083 li
72.9309 431.083 li
72.9309 450.307 li
cp
f
76.2742 450.307 mo
75.6772 450.307 li
75.6772 431.083 li
76.2742 431.083 li
76.2742 450.307 li
cp
f
88.1947 429.716 mo
88.1947 424.081 li
88.9893 424.081 li
90.795 426.933 li
91.2129 427.593 91.539 428.186 91.8066 428.763 cv
91.8237 428.754 li
91.7565 428.003 91.74 427.316 91.74 426.438 cv
91.74 424.081 li
92.4254 424.081 li
92.4254 429.716 li
91.6899 429.716 li
89.9007 426.856 li
89.5074 426.23 89.1311 425.586 88.847 424.975 cv
88.822 424.983 li
88.8635 425.695 88.8806 426.371 88.8806 427.308 cv
88.8806 429.716 li
88.1947 429.716 li
cp
f
94.4217 424.081 mo
94.4217 426.438 li
97.1473 426.438 li
97.1473 424.081 li
97.8833 424.081 li
97.8833 429.716 li
97.1473 429.716 li
97.1473 427.074 li
94.4217 427.074 li
94.4217 429.716 li
93.6942 429.716 li
93.6942 424.081 li
94.4217 424.081 li
cp
f
86.9908 426.397 mo
86.9908 426.994 li
76.5728 426.994 li
76.5728 426.397 li
86.9908 426.397 li
cp
f
88.1947 457.473 mo
88.1947 451.837 li
88.9893 451.837 li
90.795 454.689 li
91.2129 455.35 91.539 455.943 91.8066 456.52 cv
91.8237 456.511 li
91.7565 455.759 91.74 455.073 91.74 454.195 cv
91.74 451.837 li
92.4254 451.837 li
92.4254 457.473 li
91.6899 457.473 li
89.9007 454.613 li
89.5074 453.987 89.1311 453.342 88.847 452.732 cv
88.822 452.74 li
88.8635 453.452 88.8806 454.128 88.8806 455.065 cv
88.8806 457.473 li
88.1947 457.473 li
cp
f
86.9908 454.158 mo
86.9908 454.755 li
76.513 454.755 li
76.513 454.158 li
86.9908 454.158 li
cp
f
101.088 445.111 mo
100.82 445.245 100.285 445.379 99.5996 445.379 cv
98.0109 445.379 96.8154 444.376 96.8154 442.528 cv
96.8154 440.764 98.0109 439.569 99.7585 439.569 cv
100.46 439.569 100.904 439.719 101.096 439.819 cv
100.92 440.412 li
100.645 440.279 100.251 440.179 99.7835 440.179 cv
98.4623 440.179 97.5845 441.023 97.5845 442.503 cv
97.5845 443.883 98.3786 444.768 99.7499 444.768 cv
100.193 444.768 100.645 444.677 100.937 444.535 cv
101.088 445.111 li
cp
f
102.725 439.66 mo
102.725 442.018 li
105.45 442.018 li
105.45 439.66 li
106.186 439.66 li
106.186 445.295 li
105.45 445.295 li
105.45 442.653 li
102.725 442.653 li
102.725 445.295 li
101.997 445.295 li
101.997 439.66 li
102.725 439.66 li
cp
f
97.7372 438.516 mo
97.2297 438.815 li
92.7819 431.143 li
93.2894 430.844 li
97.7372 438.516 li
cp
f
96.7521 445.501 mo
97.2297 445.86 li
93.7372 450.606 li
93.2595 450.278 li
96.7521 445.501 li
cp
f
95.2596 444.427 mo
95.7372 444.785 li
92.2744 449.531 li
91.767 449.203 li
95.2596 444.427 li
cp
f
223.306 388.254 mo
223.306 390.612 li
226.031 390.612 li
226.031 388.254 li
226.767 388.254 li
226.767 393.89 li
226.031 393.89 li
226.031 391.247 li
223.306 391.247 li
223.306 393.89 li
222.578 393.89 li
222.578 388.254 li
223.306 388.254 li
cp
0 0 0 rgb
f
227.671 395.459 mo
227.671 395.12 li
228.103 394.7 li
229.142 393.712 229.612 393.186 229.618 392.571 cv
229.618 392.159 229.418 391.777 228.81 391.777 cv
228.441 391.777 228.134 391.965 227.946 392.121 cv
227.771 391.733 li
228.053 391.494 228.453 391.319 228.923 391.319 cv
229.8 391.319 230.169 391.92 230.169 392.503 cv
230.169 393.254 229.624 393.862 228.766 394.689 cv
228.441 394.99 li
228.441 395.001 li
230.269 395.001 li
230.269 395.459 li
227.671 395.459 li
cp
f
231.243 393.89 mo
231.243 388.254 li
232.038 388.254 li
233.844 391.106 li
234.261 391.766 234.588 392.36 234.855 392.937 cv
234.872 392.928 li
234.805 392.176 234.789 391.49 234.789 390.612 cv
234.789 388.254 li
235.474 388.254 li
235.474 393.89 li
234.739 393.89 li
232.949 391.03 li
232.556 390.404 232.18 389.759 231.896 389.149 cv
231.871 389.157 li
231.912 389.869 231.929 390.545 231.929 391.482 cv
231.929 393.89 li
231.243 393.89 li
cp
f
253.955 393.796 mo
253.688 393.931 253.153 394.064 252.467 394.064 cv
250.878 394.064 249.683 393.061 249.683 391.213 cv
249.683 389.45 250.878 388.254 252.626 388.254 cv
253.328 388.254 253.771 388.404 253.964 388.505 cv
253.788 389.098 li
253.512 388.965 253.119 388.864 252.651 388.864 cv
251.33 388.864 250.452 389.708 250.452 391.188 cv
250.452 392.568 251.246 393.454 252.618 393.454 cv
253.06 393.454 253.512 393.363 253.805 393.22 cv
253.955 393.796 li
cp
f
248.579 390.576 mo
248.579 391.173 li
237.981 391.173 li
237.981 390.576 li
248.579 390.576 li
cp
f
268.66 388.254 mo
268.66 390.612 li
271.385 390.612 li
271.385 388.254 li
272.121 388.254 li
272.121 393.89 li
271.385 393.89 li
271.385 391.247 li
268.66 391.247 li
268.66 393.89 li
267.932 393.89 li
267.932 388.254 li
268.66 388.254 li
cp
f
266.758 390.576 mo
266.758 391.173 li
256.31 391.173 li
256.31 390.576 li
266.758 390.576 li
cp
f
253.955 375.883 mo
253.688 376.018 253.153 376.151 252.467 376.151 cv
250.878 376.151 249.683 375.148 249.683 373.3 cv
249.683 371.536 250.878 370.341 252.626 370.341 cv
253.328 370.341 253.771 370.491 253.964 370.591 cv
253.788 371.185 li
253.512 371.051 253.119 370.951 252.651 370.951 cv
251.33 370.951 250.452 371.795 250.452 373.275 cv
250.452 374.655 251.246 375.541 252.618 375.541 cv
253.06 375.541 253.512 375.449 253.805 375.307 cv
253.955 375.883 li
cp
f
255.308 373.284 mo
255.308 374.487 255.96 375.566 257.106 375.566 cv
258.259 375.566 258.912 374.504 258.912 373.225 cv
258.912 372.105 258.327 370.934 257.114 370.934 cv
255.91 370.934 255.308 372.046 255.308 373.284 cv
cp
259.681 373.192 mo
259.681 375.132 258.502 376.16 257.064 376.16 cv
255.576 376.16 254.531 375.005 254.531 373.3 cv
254.531 371.511 255.643 370.341 257.148 370.341 cv
258.686 370.341 259.681 371.519 259.681 373.192 cv
cp
f
261.067 373.284 mo
261.067 374.487 261.719 375.566 262.864 375.566 cv
264.018 375.566 264.67 374.504 264.67 373.225 cv
264.67 372.105 264.085 370.934 262.873 370.934 cv
261.669 370.934 261.067 372.046 261.067 373.284 cv
cp
265.439 373.192 mo
265.439 375.132 264.26 376.16 262.823 376.16 cv
261.335 376.16 260.289 375.005 260.289 373.3 cv
260.289 371.511 261.401 370.341 262.906 370.341 cv
264.444 370.341 265.439 371.519 265.439 373.192 cv
cp
f
267.11 370.432 mo
267.11 372.79 li
269.836 372.79 li
269.836 370.432 li
270.572 370.432 li
270.572 376.068 li
269.836 376.068 li
269.836 373.425 li
267.11 373.425 li
267.11 376.068 li
266.383 376.068 li
266.383 370.432 li
267.11 370.432 li
cp
f
252.071 377.352 mo
252.668 377.352 li
252.668 386.725 li
252.071 386.725 li
252.071 377.352 li
cp
f
253.955 411.708 mo
253.688 411.843 253.153 411.976 252.467 411.976 cv
250.878 411.976 249.683 410.973 249.683 409.125 cv
249.683 407.362 250.878 406.166 252.626 406.166 cv
253.328 406.166 253.771 406.317 253.964 406.417 cv
253.788 407.01 li
253.512 406.877 253.119 406.776 252.651 406.776 cv
251.33 406.776 250.452 407.62 250.452 409.1 cv
250.452 410.48 251.246 411.366 252.618 411.366 cv
253.06 411.366 253.512 411.275 253.805 411.132 cv
253.955 411.708 li
cp
1 0 0 rgb
f
255.592 406.257 mo
255.592 408.615 li
258.318 408.615 li
258.318 406.257 li
259.054 406.257 li
259.054 411.893 li
258.318 411.893 li
258.318 409.25 li
255.592 409.25 li
255.592 411.893 li
254.865 411.893 li
254.865 406.257 li
255.592 406.257 li
cp
f
259.961 413.463 mo
259.961 413.125 li
260.394 412.705 li
261.433 411.716 261.903 411.19 261.909 410.576 cv
261.909 410.164 261.708 409.781 261.101 409.781 cv
260.732 409.781 260.425 409.969 260.237 410.125 cv
260.062 409.738 li
260.343 409.499 260.744 409.323 261.214 409.323 cv
262.09 409.323 262.46 409.924 262.46 410.507 cv
262.46 411.259 261.915 411.867 261.057 412.693 cv
260.732 412.994 li
260.732 413.005 li
262.56 413.005 li
262.56 413.463 li
259.961 413.463 li
cp
f
252.668 404.635 mo
252.071 404.635 li
252.071 395.262 li
252.668 395.262 li
252.668 404.635 li
cp
f
253.955 429.616 mo
253.688 429.75 253.153 429.884 252.467 429.884 cv
250.878 429.884 249.683 428.881 249.683 427.033 cv
249.683 425.269 250.878 424.074 252.626 424.074 cv
253.328 424.074 253.771 424.224 253.964 424.324 cv
253.788 424.917 li
253.512 424.784 253.119 424.684 252.651 424.684 cv
251.33 424.684 250.452 425.528 250.452 427.008 cv
250.452 428.388 251.246 429.273 252.618 429.273 cv
253.06 429.273 253.512 429.182 253.805 429.04 cv
253.955 429.616 li
cp
f
255.592 424.165 mo
255.592 426.523 li
258.318 426.523 li
258.318 424.165 li
259.054 424.165 li
259.054 429.8 li
258.318 429.8 li
258.318 427.158 li
255.592 427.158 li
255.592 429.8 li
254.865 429.8 li
254.865 424.165 li
255.592 424.165 li
cp
f
259.961 431.373 mo
259.961 431.035 li
260.394 430.616 li
261.433 429.625 261.903 429.099 261.909 428.487 cv
261.909 428.072 261.708 427.691 261.101 427.691 cv
260.732 427.691 260.425 427.879 260.237 428.036 cv
260.062 427.646 li
260.343 427.41 260.744 427.234 261.214 427.234 cv
262.09 427.234 262.46 427.835 262.46 428.417 cv
262.46 429.169 261.915 429.775 261.057 430.602 cv
260.732 430.903 li
260.732 430.916 li
262.56 430.916 li
262.56 431.373 li
259.961 431.373 li
cp
f
252.668 422.546 mo
252.071 422.546 li
252.071 413.203 li
252.668 413.203 li
252.668 422.546 li
cp
f
250.1 446.827 mo
250.427 447.027 250.903 447.194 251.404 447.194 cv
252.148 447.194 252.583 446.802 252.583 446.232 cv
252.583 445.705 252.282 445.405 251.522 445.112 cv
250.602 444.787 250.033 444.31 250.033 443.515 cv
250.033 442.637 250.761 441.986 251.856 441.986 cv
252.433 441.986 252.851 442.119 253.102 442.261 cv
252.901 442.855 li
252.717 442.754 252.341 442.587 251.831 442.587 cv
251.062 442.587 250.769 443.047 250.769 443.432 cv
250.769 443.959 251.112 444.217 251.889 444.519 cv
252.843 444.887 253.327 445.347 253.327 446.174 cv
253.327 447.044 252.684 447.796 251.354 447.796 cv
250.811 447.796 250.218 447.637 249.916 447.437 cv
250.1 446.827 li
cp
f
252.668 440.457 mo
252.071 440.457 li
252.071 431.113 li
252.668 431.113 li
252.668 440.457 li
cp
f
253.955 465.438 mo
253.688 465.572 253.153 465.705 252.467 465.705 cv
250.878 465.705 249.683 464.702 249.683 462.855 cv
249.683 461.091 250.878 459.896 252.626 459.896 cv
253.328 459.896 253.771 460.046 253.964 460.146 cv
253.788 460.739 li
253.512 460.606 253.119 460.506 252.651 460.506 cv
251.33 460.506 250.452 461.35 250.452 462.83 cv
250.452 464.209 251.246 465.095 252.618 465.095 cv
253.06 465.095 253.512 465.004 253.805 464.862 cv
253.955 465.438 li
cp
f
255.592 459.987 mo
255.592 462.345 li
258.318 462.345 li
258.318 459.987 li
259.054 459.987 li
259.054 465.622 li
258.318 465.622 li
258.318 462.98 li
255.592 462.98 li
255.592 465.622 li
254.865 465.622 li
254.865 459.987 li
255.592 459.987 li
cp
f
260.093 466.556 mo
260.25 466.656 260.613 466.813 260.995 466.813 cv
261.702 466.813 261.921 466.362 261.915 466.024 cv
261.909 465.454 261.395 465.21 260.863 465.21 cv
260.556 465.21 li
260.556 464.797 li
260.863 464.797 li
261.264 464.797 261.771 464.591 261.771 464.108 cv
261.771 463.783 261.564 463.494 261.057 463.494 cv
260.732 463.494 260.419 463.639 260.243 463.764 cv
260.099 463.364 li
260.312 463.206 260.725 463.049 261.164 463.049 cv
261.965 463.049 262.328 463.525 262.328 464.02 cv
262.328 464.441 262.078 464.797 261.577 464.978 cv
261.577 464.992 li
262.078 465.092 262.485 465.467 262.485 466.037 cv
262.485 466.688 261.978 467.257 261.001 467.257 cv
260.544 467.257 260.143 467.114 259.943 466.982 cv
260.093 466.556 li
cp
f
252.668 458.367 mo
252.071 458.367 li
252.071 448.994 li
252.668 448.994 li
252.668 458.367 li
cp
f
386.224 408.28 mo
386.224 410.638 li
388.95 410.638 li
388.95 408.28 li
389.685 408.28 li
389.685 413.916 li
388.95 413.916 li
388.95 411.273 li
386.224 411.273 li
386.224 413.916 li
385.497 413.916 li
385.497 408.28 li
386.224 408.28 li
cp
0 0 0 rgb
f
390.59 415.484 mo
390.59 415.146 li
391.023 414.725 li
392.063 413.737 392.533 413.211 392.538 412.596 cv
392.538 412.184 392.338 411.802 391.731 411.802 cv
391.361 411.802 391.055 411.99 390.866 412.146 cv
390.691 411.758 li
390.973 411.519 391.374 411.344 391.843 411.344 cv
392.719 411.344 393.09 411.945 393.09 412.528 cv
393.09 413.28 392.544 413.888 391.687 414.714 cv
391.361 415.015 li
391.361 415.026 li
393.19 415.026 li
393.19 415.484 li
390.59 415.484 li
cp
f
394.162 413.916 mo
394.162 408.28 li
394.957 408.28 li
396.762 411.132 li
397.18 411.793 397.507 412.386 397.774 412.963 cv
397.79 412.954 li
397.724 412.203 397.707 411.516 397.707 410.638 cv
397.707 408.28 li
398.393 408.28 li
398.393 413.916 li
397.657 413.916 li
395.867 411.056 li
395.475 410.43 395.099 409.785 394.814 409.175 cv
394.789 409.183 li
394.831 409.895 394.847 410.572 394.847 411.508 cv
394.847 413.916 li
394.162 413.916 li
cp
f
416.874 413.821 mo
416.606 413.956 416.071 414.089 415.386 414.089 cv
413.798 414.089 412.601 413.086 412.601 411.238 cv
412.601 409.475 413.798 408.279 415.544 408.279 cv
416.247 408.279 416.69 408.43 416.882 408.53 cv
416.707 409.123 li
416.431 408.99 416.038 408.889 415.569 408.889 cv
414.249 408.889 413.371 409.733 413.371 411.213 cv
413.371 412.593 414.165 413.479 415.536 413.479 cv
415.979 413.479 416.431 413.388 416.724 413.245 cv
416.874 413.821 li
cp
f
411.497 410.601 mo
411.497 411.198 li
400.9 411.198 li
400.9 410.601 li
411.497 410.601 li
cp
f
431.579 408.28 mo
431.579 410.638 li
434.304 410.638 li
434.304 408.28 li
435.04 408.28 li
435.04 413.916 li
434.304 413.916 li
434.304 411.273 li
431.579 411.273 li
431.579 413.916 li
430.851 413.916 li
430.851 408.28 li
431.579 408.28 li
cp
f
429.677 410.601 mo
429.677 411.198 li
419.229 411.198 li
419.229 410.601 li
429.677 410.601 li
cp
f
416.874 395.908 mo
416.606 396.043 416.071 396.176 415.386 396.176 cv
413.798 396.176 412.601 395.173 412.601 393.325 cv
412.601 391.561 413.798 390.366 415.544 390.366 cv
416.247 390.366 416.69 390.516 416.882 390.616 cv
416.707 391.21 li
416.431 391.076 416.038 390.976 415.569 390.976 cv
414.249 390.976 413.371 391.82 413.371 393.3 cv
413.371 394.68 414.165 395.566 415.536 395.566 cv
415.979 395.566 416.431 395.474 416.724 395.332 cv
416.874 395.908 li
cp
f
418.227 393.309 mo
418.227 394.512 418.879 395.591 420.024 395.591 cv
421.179 395.591 421.831 394.53 421.831 393.25 cv
421.831 392.13 421.245 390.959 420.033 390.959 cv
418.829 390.959 418.227 392.072 418.227 393.309 cv
cp
422.6 393.217 mo
422.6 395.157 421.421 396.185 419.983 396.185 cv
418.494 396.185 417.449 395.03 417.449 393.325 cv
417.449 391.536 418.561 390.366 420.066 390.366 cv
421.604 390.366 422.6 391.544 422.6 393.217 cv
cp
f
423.985 393.309 mo
423.985 394.512 424.637 395.591 425.783 395.591 cv
426.937 395.591 427.59 394.53 427.59 393.25 cv
427.59 392.13 427.003 390.959 425.792 390.959 cv
424.587 390.959 423.985 392.072 423.985 393.309 cv
cp
428.358 393.217 mo
428.358 395.157 427.18 396.185 425.742 396.185 cv
424.253 396.185 423.207 395.03 423.207 393.325 cv
423.207 391.536 424.32 390.366 425.825 390.366 cv
427.363 390.366 428.358 391.544 428.358 393.217 cv
cp
f
430.028 390.457 mo
430.028 392.815 li
432.754 392.815 li
432.754 390.457 li
433.489 390.457 li
433.489 396.093 li
432.754 396.093 li
432.754 393.45 li
430.028 393.45 li
430.028 396.093 li
429.301 396.093 li
429.301 390.457 li
430.028 390.457 li
cp
f
414.99 397.377 mo
415.587 397.377 li
415.587 406.75 li
414.99 406.75 li
414.99 397.377 li
cp
f
416.874 431.735 mo
416.606 431.869 416.071 432.002 415.386 432.002 cv
413.798 432.002 412.601 430.999 412.601 429.151 cv
412.601 427.388 413.798 426.192 415.544 426.192 cv
416.247 426.192 416.69 426.343 416.882 426.443 cv
416.707 427.036 li
416.431 426.903 416.038 426.803 415.569 426.803 cv
414.249 426.803 413.371 427.646 413.371 429.126 cv
413.371 430.506 414.165 431.392 415.536 431.392 cv
415.979 431.392 416.431 431.301 416.724 431.159 cv
416.874 431.735 li
cp
1 0 0 rgb
f
418.511 426.284 mo
418.511 428.641 li
421.237 428.641 li
421.237 426.284 li
421.972 426.284 li
421.972 431.919 li
421.237 431.919 li
421.237 429.277 li
418.511 429.277 li
418.511 431.919 li
417.784 431.919 li
417.784 426.284 li
418.511 426.284 li
cp
f
415.587 424.661 mo
414.99 424.661 li
414.99 415.288 li
415.587 415.288 li
415.587 424.661 li
cp
f
391.905 435.234 mo
391.905 437.592 li
394.631 437.592 li
394.631 435.234 li
395.367 435.234 li
395.367 440.87 li
394.631 440.87 li
394.631 438.228 li
391.905 438.228 li
391.905 440.87 li
391.178 440.87 li
391.178 435.234 li
391.905 435.234 li
cp
f
397.071 438.086 mo
397.071 439.29 397.723 440.368 398.869 440.368 cv
400.023 440.368 400.675 439.307 400.675 438.027 cv
400.675 436.907 400.089 435.737 398.878 435.737 cv
397.673 435.737 397.071 436.849 397.071 438.086 cv
cp
401.444 437.994 mo
401.444 439.934 400.266 440.962 398.828 440.962 cv
397.338 440.962 396.293 439.808 396.293 438.102 cv
396.293 436.314 397.406 435.143 398.911 435.143 cv
400.449 435.143 401.444 436.322 401.444 437.994 cv
cp
f
403.557 435.945 mo
403.258 435.437 li
411.647 430.571 li
411.945 431.079 li
403.557 435.945 li
cp
f
432.369 440.686 mo
432.101 440.82 431.566 440.953 430.881 440.953 cv
429.293 440.953 428.096 439.95 428.096 438.102 cv
428.096 436.339 429.293 435.143 431.039 435.143 cv
431.742 435.143 432.185 435.294 432.377 435.394 cv
432.202 435.987 li
431.926 435.854 431.533 435.754 431.064 435.754 cv
429.744 435.754 428.866 436.597 428.866 438.077 cv
428.866 439.457 429.66 440.343 431.031 440.343 cv
431.474 440.343 431.926 440.252 432.219 440.109 cv
432.369 440.686 li
cp
f
434.006 435.234 mo
434.006 437.592 li
436.732 437.592 li
436.732 435.234 li
437.467 435.234 li
437.467 440.87 li
436.732 440.87 li
436.732 438.228 li
434.006 438.228 li
434.006 440.87 li
433.279 440.87 li
433.279 435.234 li
434.006 435.234 li
cp
f
438.515 441.806 mo
438.672 441.906 439.034 442.063 439.416 442.063 cv
440.124 442.063 440.343 441.612 440.336 441.274 cv
440.331 440.704 439.817 440.46 439.284 440.46 cv
438.978 440.46 li
438.978 440.047 li
439.284 440.047 li
439.685 440.047 440.193 439.841 440.193 439.358 cv
440.193 439.032 439.986 438.744 439.479 438.744 cv
439.153 438.744 438.84 438.889 438.665 439.014 cv
438.521 438.614 li
438.733 438.456 439.148 438.299 439.585 438.299 cv
440.386 438.299 440.751 438.775 440.751 439.27 cv
440.751 439.691 440.5 440.047 439.999 440.228 cv
439.999 440.242 li
440.5 440.342 440.907 440.717 440.907 441.287 cv
440.907 441.938 440.4 442.507 439.423 442.507 cv
438.965 442.507 438.565 442.364 438.364 442.232 cv
438.515 441.806 li
cp
f
427.557 435.556 mo
427.259 436.064 li
423.826 434.064 li
424.124 433.556 li
427.557 435.556 li
cp
f
300.06 114.348 mo
300.06 116.811 li
302.907 116.811 li
302.907 114.348 li
303.676 114.348 li
303.676 120.235 li
302.907 120.235 li
302.907 117.475 li
300.06 117.475 li
300.06 120.235 li
299.299 120.235 li
299.299 114.348 li
300.06 114.348 li
cp
0 0 0 rgb
f
304.618 121.867 mo
304.618 121.514 li
305.07 121.075 li
306.157 120.04 306.647 119.491 306.654 118.85 cv
306.654 118.417 306.445 118.018 305.809 118.018 cv
305.423 118.018 305.102 118.214 304.907 118.378 cv
304.723 117.972 li
305.018 117.724 305.437 117.54 305.928 117.54 cv
306.844 117.54 307.23 118.169 307.23 118.777 cv
307.23 119.563 306.661 120.198 305.764 121.062 cv
305.423 121.376 li
305.423 121.39 li
307.335 121.39 li
307.335 121.867 li
304.618 121.867 li
cp
f
308.346 120.235 mo
308.346 114.348 li
309.176 114.348 li
311.062 117.327 li
311.5 118.017 311.84 118.637 312.119 119.24 cv
312.137 119.23 li
312.067 118.445 312.049 117.728 312.049 116.811 cv
312.049 114.348 li
312.766 114.348 li
312.766 120.235 li
311.997 120.235 li
310.128 117.248 li
309.718 116.593 309.324 115.92 309.027 115.283 cv
309.001 115.291 li
309.045 116.034 309.062 116.741 309.062 117.72 cv
309.062 120.235 li
308.346 120.235 li
cp
f
332.061 120.14 mo
331.781 120.28 331.222 120.42 330.506 120.42 cv
328.846 120.42 327.597 119.372 327.597 117.441 cv
327.597 115.599 328.846 114.35 330.672 114.35 cv
331.405 114.35 331.869 114.507 332.069 114.612 cv
331.886 115.231 li
331.598 115.092 331.187 114.987 330.698 114.987 cv
329.318 114.987 328.401 115.869 328.401 117.415 cv
328.401 118.856 329.231 119.782 330.663 119.782 cv
331.126 119.782 331.598 119.686 331.903 119.538 cv
332.061 120.14 li
cp
f
326.445 116.774 mo
326.445 117.397 li
315.38 117.397 li
315.38 116.774 li
326.445 116.774 li
cp
f
347.411 114.348 mo
347.411 116.811 li
350.259 116.811 li
350.259 114.348 li
351.027 114.348 li
351.027 120.235 li
350.259 120.235 li
350.259 117.475 li
347.411 117.475 li
347.411 120.235 li
346.651 120.235 li
346.651 114.348 li
347.411 114.348 li
cp
f
345.428 116.774 mo
345.428 117.397 li
334.518 117.397 li
334.518 116.774 li
345.428 116.774 li
cp
f
332.061 101.435 mo
331.781 101.575 331.222 101.714 330.506 101.714 cv
328.846 101.714 327.597 100.666 327.597 98.7357 cv
327.597 96.893 328.846 95.6441 330.672 95.6441 cv
331.405 95.6441 331.869 95.8012 332.069 95.9059 cv
331.886 96.5258 li
331.598 96.3864 331.187 96.2816 330.698 96.2816 cv
329.318 96.2816 328.401 97.1634 328.401 98.7095 cv
328.401 100.151 329.231 101.076 330.663 101.076 cv
331.126 101.076 331.598 100.981 331.903 100.832 cv
332.061 101.435 li
cp
f
333.472 98.7186 mo
333.472 99.9761 334.152 101.103 335.349 101.103 cv
336.555 101.103 337.235 99.9937 337.235 98.6571 cv
337.235 97.4867 336.624 96.264 335.358 96.264 cv
334.1 96.264 333.472 97.4258 333.472 98.7186 cv
cp
338.039 98.6224 mo
338.039 100.648 336.807 101.723 335.306 101.723 cv
333.751 101.723 332.659 100.517 332.659 98.7357 cv
332.659 96.8668 333.821 95.6441 335.392 95.6441 cv
337 95.6441 338.039 96.8754 338.039 98.6224 cv
cp
f
339.485 98.7186 mo
339.485 99.9761 340.166 101.103 341.363 101.103 cv
342.568 101.103 343.249 99.9937 343.249 98.6571 cv
343.249 97.4867 342.638 96.264 341.372 96.264 cv
340.114 96.264 339.485 97.4258 339.485 98.7186 cv
cp
344.053 98.6224 mo
344.053 100.648 342.821 101.723 341.319 101.723 cv
339.764 101.723 338.672 100.517 338.672 98.7357 cv
338.672 96.8668 339.835 95.6441 341.406 95.6441 cv
343.013 95.6441 344.053 96.8754 344.053 98.6224 cv
cp
f
345.796 95.7397 mo
345.796 98.2029 li
348.643 98.2029 li
348.643 95.7397 li
349.412 95.7397 li
349.412 101.627 li
348.643 101.627 li
348.643 98.8666 li
345.796 98.8666 li
345.796 101.627 li
345.035 101.627 li
345.035 95.7397 li
345.796 95.7397 li
cp
f
330.092 102.965 mo
330.715 102.965 li
330.715 112.753 li
330.092 112.753 li
330.092 102.965 li
cp
f
332.061 138.836 mo
331.781 138.976 331.222 139.116 330.506 139.116 cv
328.846 139.116 327.597 138.068 327.597 136.137 cv
327.597 134.295 328.846 133.046 330.672 133.046 cv
331.405 133.046 331.869 133.203 332.069 133.307 cv
331.886 133.927 li
331.598 133.788 331.187 133.683 330.698 133.683 cv
329.318 133.683 328.401 134.565 328.401 136.111 cv
328.401 137.552 329.231 138.478 330.663 138.478 cv
331.126 138.478 331.598 138.382 331.903 138.234 cv
332.061 138.836 li
cp
1 0 0 rgb
f
333.769 133.141 mo
333.769 135.604 li
336.616 135.604 li
336.616 133.141 li
337.385 133.141 li
337.385 139.028 li
336.616 139.028 li
336.616 136.268 li
333.769 136.268 li
333.769 139.028 li
333.008 139.028 li
333.008 133.141 li
333.769 133.141 li
cp
f
330.715 131.455 mo
330.092 131.455 li
330.092 121.668 li
330.715 121.668 li
330.715 131.455 li
cp
f
348.241 148.186 mo
347.961 148.326 347.402 148.465 346.686 148.465 cv
345.026 148.465 343.777 147.418 343.777 145.487 cv
343.777 143.645 345.026 142.396 346.852 142.396 cv
347.586 142.396 348.049 142.553 348.249 142.657 cv
348.066 143.277 li
347.778 143.138 347.367 143.033 346.879 143.033 cv
345.499 143.033 344.581 143.915 344.581 145.461 cv
344.581 146.902 345.411 147.828 346.843 147.828 cv
347.307 147.828 347.778 147.732 348.083 147.584 cv
348.241 148.186 li
cp
f
349.949 142.491 mo
349.949 144.954 li
352.797 144.954 li
352.797 142.491 li
353.565 142.491 li
353.565 148.378 li
352.797 148.378 li
352.797 145.618 li
349.949 145.618 li
349.949 148.378 li
349.189 148.378 li
349.189 142.491 li
349.949 142.491 li
cp
f
354.645 149.357 mo
354.808 149.462 355.189 149.625 355.588 149.625 cv
356.327 149.625 356.556 149.154 356.55 148.8 cv
356.543 148.205 356.007 147.949 355.45 147.949 cv
355.129 147.949 li
355.129 147.517 li
355.45 147.517 li
355.869 147.517 356.399 147.301 356.399 146.797 cv
356.399 146.457 356.184 146.155 355.653 146.155 cv
355.313 146.155 354.985 146.306 354.803 146.437 cv
354.651 146.018 li
354.874 145.854 355.306 145.691 355.765 145.691 cv
356.603 145.691 356.982 146.188 356.982 146.705 cv
356.982 147.144 356.72 147.517 356.196 147.707 cv
356.196 147.72 li
356.72 147.825 357.146 148.217 357.146 148.813 cv
357.146 149.494 356.615 150.09 355.594 150.09 cv
355.117 150.09 354.698 149.939 354.488 149.802 cv
354.645 149.357 li
cp
f
343.215 142.832 mo
342.903 143.362 li
339.318 141.274 li
339.63 140.744 li
343.215 142.832 li
cp
f
302.585 142.491 mo
302.585 144.954 li
305.433 144.954 li
305.433 142.491 li
306.201 142.491 li
306.201 148.378 li
305.433 148.378 li
305.433 145.618 li
302.585 145.618 li
302.585 148.378 li
301.825 148.378 li
301.825 142.491 li
302.585 142.491 li
cp
f
307.148 150.018 mo
307.148 149.664 li
307.6 149.226 li
308.686 148.191 309.177 147.641 309.184 147 cv
309.184 146.568 308.974 146.169 308.339 146.169 cv
307.953 146.169 307.632 146.365 307.436 146.529 cv
307.253 146.122 li
307.548 145.874 307.967 145.691 308.458 145.691 cv
309.374 145.691 309.76 146.319 309.76 146.928 cv
309.76 147.714 309.191 148.348 308.294 149.212 cv
307.953 149.527 li
307.953 149.54 li
309.865 149.54 li
309.865 150.018 li
307.148 150.018 li
cp
f
314.981 148.186 mo
314.701 148.326 314.142 148.465 313.426 148.465 cv
311.766 148.465 310.517 147.418 310.517 145.487 cv
310.517 143.645 311.766 142.396 313.592 142.396 cv
314.325 142.396 314.789 142.553 314.989 142.657 cv
314.806 143.277 li
314.518 143.138 314.107 143.033 313.618 143.033 cv
312.238 143.033 311.321 143.915 311.321 145.461 cv
311.321 146.902 312.151 147.828 313.583 147.828 cv
314.046 147.828 314.518 147.732 314.823 147.584 cv
314.981 148.186 li
cp
f
318.123 143.269 mo
317.811 142.707 li
326.601 137.627 li
326.913 138.157 li
318.123 143.269 li
cp
f
315.852 166.861 mo
315.572 167.001 315.013 167.141 314.297 167.141 cv
312.637 167.141 311.388 166.093 311.388 164.163 cv
311.388 162.32 312.637 161.071 314.463 161.071 cv
315.196 161.071 315.66 161.228 315.86 161.333 cv
315.677 161.953 li
315.389 161.813 314.978 161.709 314.489 161.709 cv
313.109 161.709 312.192 162.59 312.192 164.136 cv
312.192 165.578 313.022 166.503 314.454 166.503 cv
314.917 166.503 315.389 166.408 315.694 166.259 cv
315.852 166.861 li
cp
f
317.56 161.167 mo
317.56 163.63 li
320.407 163.63 li
320.407 161.167 li
321.176 161.167 li
321.176 167.054 li
320.407 167.054 li
320.407 164.294 li
317.56 164.294 li
317.56 167.054 li
316.799 167.054 li
316.799 161.167 li
317.56 161.167 li
cp
f
322.26 168.028 mo
322.424 168.133 322.804 168.297 323.202 168.297 cv
323.942 168.297 324.172 167.826 324.165 167.472 cv
324.159 166.876 323.621 166.621 323.066 166.621 cv
322.745 166.621 li
322.745 166.189 li
323.066 166.189 li
323.485 166.189 324.015 165.973 324.015 165.469 cv
324.015 165.129 323.799 164.827 323.268 164.827 cv
322.928 164.827 322.601 164.978 322.417 165.109 cv
322.266 164.69 li
322.49 164.526 322.921 164.362 323.38 164.362 cv
324.218 164.362 324.597 164.86 324.597 165.377 cv
324.597 165.816 324.335 166.189 323.811 166.379 cv
323.811 166.392 li
324.335 166.497 324.761 166.89 324.761 167.485 cv
324.761 168.166 324.23 168.762 323.209 168.762 cv
322.731 168.762 322.312 168.611 322.102 168.474 cv
322.26 168.028 li
cp
f
314.538 159.508 mo
313.915 159.477 li
313.915 151.435 li
314.538 151.466 li
314.538 159.508 li
cp
f
388.228 229.044 mo
388.228 231.382 li
390.931 231.382 li
390.931 229.044 li
391.66 229.044 li
391.66 234.631 li
390.931 234.631 li
390.931 232.012 li
388.228 232.012 li
388.228 234.631 li
387.506 234.631 li
387.506 229.044 li
388.228 229.044 li
cp
0 0 0 rgb
f
392.559 236.179 mo
392.559 235.844 li
392.988 235.428 li
394.019 234.447 394.484 233.926 394.49 233.317 cv
394.49 232.907 394.292 232.529 393.69 232.529 cv
393.323 232.529 393.019 232.715 392.832 232.87 cv
392.659 232.485 li
392.938 232.249 393.336 232.076 393.801 232.076 cv
394.67 232.076 395.036 232.672 395.036 233.249 cv
395.036 233.994 394.497 234.596 393.646 235.416 cv
393.323 235.714 li
393.323 235.726 li
395.136 235.726 li
395.136 236.179 li
392.559 236.179 li
cp
f
396.096 234.631 mo
396.096 229.044 li
396.884 229.044 li
398.675 231.871 li
399.09 232.526 399.413 233.114 399.678 233.687 cv
399.694 233.678 li
399.628 232.932 399.612 232.253 399.612 231.382 cv
399.612 229.044 li
400.292 229.044 li
400.292 234.631 li
399.562 234.631 li
397.788 231.797 li
397.399 231.174 397.025 230.536 396.743 229.931 cv
396.718 229.94 li
396.76 230.644 396.776 231.316 396.776 232.244 cv
396.776 234.631 li
396.096 234.631 li
cp
f
418.601 234.535 mo
418.336 234.668 417.805 234.801 417.126 234.801 cv
415.55 234.801 414.365 233.805 414.365 231.974 cv
414.365 230.224 415.55 229.039 417.283 229.039 cv
417.98 229.039 418.419 229.188 418.609 229.288 cv
418.435 229.876 li
418.162 229.744 417.772 229.644 417.308 229.644 cv
415.999 229.644 415.128 230.482 415.128 231.949 cv
415.128 233.317 415.915 234.195 417.275 234.195 cv
417.714 234.195 418.162 234.104 418.452 233.963 cv
418.601 234.535 li
cp
f
413.267 231.346 mo
413.267 231.938 li
402.767 231.938 li
402.767 231.346 li
413.267 231.346 li
cp
f
433.158 229.044 mo
433.158 231.382 li
435.861 231.382 li
435.861 229.044 li
436.59 229.044 li
436.59 234.631 li
435.861 234.631 li
435.861 232.012 li
433.158 232.012 li
433.158 234.631 li
432.436 234.631 li
432.436 229.044 li
433.158 229.044 li
cp
f
431.278 231.346 mo
431.278 231.938 li
420.927 231.938 li
420.927 231.346 li
431.278 231.346 li
cp
f
418.601 216.792 mo
418.336 216.925 417.805 217.058 417.126 217.058 cv
415.55 217.058 414.365 216.063 414.365 214.231 cv
414.365 212.481 415.55 211.296 417.283 211.296 cv
417.98 211.296 418.419 211.445 418.609 211.545 cv
418.435 212.134 li
418.162 212 417.772 211.901 417.308 211.901 cv
415.999 211.901 415.128 212.739 415.128 214.206 cv
415.128 215.574 415.915 216.452 417.275 216.452 cv
417.714 216.452 418.162 216.361 418.452 216.22 cv
418.601 216.792 li
cp
f
419.939 214.214 mo
419.939 215.408 420.586 216.477 421.722 216.477 cv
422.866 216.477 423.513 215.424 423.513 214.156 cv
423.513 213.045 422.932 211.885 421.73 211.885 cv
420.537 211.885 419.939 212.987 419.939 214.214 cv
cp
424.274 214.122 mo
424.274 216.046 423.106 217.066 421.68 217.066 cv
420.204 217.066 419.168 215.922 419.168 214.231 cv
419.168 212.456 420.271 211.296 421.763 211.296 cv
423.288 211.296 424.274 212.465 424.274 214.122 cv
cp
f
425.644 214.214 mo
425.644 215.408 426.291 216.477 427.427 216.477 cv
428.571 216.477 429.217 215.424 429.217 214.156 cv
429.217 213.045 428.637 211.885 427.435 211.885 cv
426.242 211.885 425.644 212.987 425.644 214.214 cv
cp
429.979 214.122 mo
429.979 216.046 428.811 217.066 427.385 217.066 cv
425.909 217.066 424.873 215.922 424.873 214.231 cv
424.873 212.456 425.976 211.296 427.468 211.296 cv
428.993 211.296 429.979 212.465 429.979 214.122 cv
cp
f
431.633 211.387 mo
431.633 213.725 li
434.335 213.725 li
434.335 211.387 li
435.064 211.387 li
435.064 216.974 li
434.335 216.974 li
434.335 214.355 li
431.633 214.355 li
431.633 216.974 li
430.911 216.974 li
430.911 211.387 li
431.633 211.387 li
cp
f
416.727 218.244 mo
417.319 218.244 li
417.319 227.531 li
416.727 227.531 li
416.727 218.244 li
cp
f
418.601 252.278 mo
418.336 252.41 417.805 252.543 417.126 252.543 cv
415.55 252.543 414.365 251.548 414.365 249.716 cv
414.365 247.967 415.55 246.782 417.283 246.782 cv
417.98 246.782 418.419 246.931 418.609 247.03 cv
418.435 247.618 li
418.162 247.486 417.772 247.387 417.308 247.387 cv
415.999 247.387 415.128 248.224 415.128 249.691 cv
415.128 251.059 415.915 251.938 417.275 251.938 cv
417.714 251.938 418.162 251.846 418.452 251.706 cv
418.601 252.278 li
cp
1 0 0 rgb
f
420.221 246.873 mo
420.221 249.21 li
422.924 249.21 li
422.924 246.873 li
423.653 246.873 li
423.653 252.46 li
422.924 252.46 li
422.924 249.84 li
420.221 249.84 li
420.221 252.46 li
419.5 252.46 li
419.5 246.873 li
420.221 246.873 li
cp
f
424.543 254.012 mo
424.543 253.677 li
424.972 253.261 li
426.003 252.28 426.468 251.759 426.474 251.15 cv
426.474 250.74 426.276 250.362 425.674 250.362 cv
425.307 250.362 425.003 250.548 424.816 250.703 cv
424.643 250.318 li
424.922 250.082 425.32 249.908 425.785 249.908 cv
426.654 249.908 427.02 250.505 427.02 251.082 cv
427.02 251.827 426.481 252.429 425.63 253.249 cv
425.307 253.547 li
425.307 253.559 li
427.12 253.559 li
427.12 254.012 li
424.543 254.012 li
cp
f
417.319 245.276 mo
416.727 245.276 li
416.727 235.99 li
417.319 235.99 li
417.319 245.276 li
cp
f
418.601 270.024 mo
418.336 270.156 417.805 270.289 417.126 270.289 cv
415.55 270.289 414.365 269.294 414.365 267.462 cv
414.365 265.713 415.55 264.527 417.283 264.527 cv
417.98 264.527 418.419 264.677 418.609 264.776 cv
418.435 265.364 li
418.162 265.232 417.772 265.133 417.308 265.133 cv
415.999 265.133 415.128 265.97 415.128 267.437 cv
415.128 268.805 415.915 269.684 417.275 269.684 cv
417.714 269.684 418.162 269.592 418.452 269.451 cv
418.601 270.024 li
cp
f
420.221 264.619 mo
420.221 266.956 li
422.924 266.956 li
422.924 264.619 li
423.653 264.619 li
423.653 270.206 li
422.924 270.206 li
422.924 267.586 li
420.221 267.586 li
420.221 270.206 li
419.5 270.206 li
419.5 264.619 li
420.221 264.619 li
cp
f
424.543 271.758 mo
424.543 271.422 li
424.972 271.006 li
426.003 270.025 426.468 269.504 426.474 268.895 cv
426.474 268.485 426.276 268.107 425.674 268.107 cv
425.307 268.107 425.003 268.293 424.816 268.448 cv
424.643 268.064 li
424.922 267.827 425.32 267.654 425.785 267.654 cv
426.654 267.654 427.02 268.25 427.02 268.827 cv
427.02 269.572 426.481 270.174 425.63 270.994 cv
425.307 271.292 li
425.307 271.304 li
427.12 271.304 li
427.12 271.758 li
424.543 271.758 li
cp
f
417.319 263.022 mo
416.727 263.022 li
416.727 253.765 li
417.319 253.765 li
417.319 263.022 li
cp
f
418.601 287.773 mo
418.336 287.906 417.805 288.039 417.126 288.039 cv
415.55 288.039 414.365 287.044 414.365 285.212 cv
414.365 283.462 415.55 282.277 417.283 282.277 cv
417.98 282.277 418.419 282.426 418.609 282.526 cv
418.435 283.115 li
418.162 282.981 417.772 282.882 417.308 282.882 cv
415.999 282.882 415.128 283.72 415.128 285.187 cv
415.128 286.555 415.915 287.434 417.275 287.434 cv
417.714 287.434 418.162 287.342 418.452 287.201 cv
418.601 287.773 li
cp
f
420.221 282.368 mo
420.221 284.706 li
422.924 284.706 li
422.924 282.368 li
423.653 282.368 li
423.653 287.956 li
422.924 287.956 li
422.924 285.336 li
420.221 285.336 li
420.221 287.956 li
419.5 287.956 li
419.5 282.368 li
420.221 282.368 li
cp
f
424.543 289.504 mo
424.543 289.169 li
424.972 288.753 li
426.003 287.772 426.468 287.251 426.474 286.642 cv
426.474 286.232 426.276 285.854 425.674 285.854 cv
425.307 285.854 425.003 286.04 424.816 286.195 cv
424.643 285.811 li
424.922 285.574 425.32 285.401 425.785 285.401 cv
426.654 285.401 427.02 285.997 427.02 286.574 cv
427.02 287.319 426.481 287.921 425.63 288.741 cv
425.307 289.039 li
425.307 289.051 li
427.12 289.051 li
427.12 289.504 li
424.543 289.504 li
cp
f
417.319 280.767 mo
416.727 280.767 li
416.727 271.51 li
417.319 271.51 li
417.319 280.767 li
cp
f
414.696 305.613 mo
414.696 300.026 li
415.484 300.026 li
417.275 302.853 li
417.689 303.508 418.013 304.096 418.278 304.668 cv
418.294 304.66 li
418.228 303.914 418.212 303.234 418.212 302.363 cv
418.212 300.026 li
418.892 300.026 li
418.892 305.613 li
418.162 305.613 li
416.388 302.778 li
415.999 302.156 415.625 301.518 415.343 300.913 cv
415.318 300.921 li
415.36 301.626 415.376 302.297 415.376 303.226 cv
415.376 305.613 li
414.696 305.613 li
cp
f
420.867 300.026 mo
420.867 302.363 li
423.57 302.363 li
423.57 300.026 li
424.298 300.026 li
424.298 305.613 li
423.57 305.613 li
423.57 302.993 li
420.867 302.993 li
420.867 305.613 li
420.145 305.613 li
420.145 300.026 li
420.867 300.026 li
cp
f
417.319 298.513 mo
416.727 298.513 li
416.727 289.256 li
417.319 289.256 li
417.319 298.513 li
cp
f
418.601 323.259 mo
418.336 323.391 417.805 323.525 417.126 323.525 cv
415.55 323.525 414.365 322.53 414.365 320.698 cv
414.365 318.948 415.55 317.763 417.283 317.763 cv
417.98 317.763 418.419 317.912 418.609 318.012 cv
418.435 318.601 li
418.162 318.467 417.772 318.368 417.308 318.368 cv
415.999 318.368 415.128 319.205 415.128 320.673 cv
415.128 322.04 415.915 322.919 417.275 322.919 cv
417.714 322.919 418.162 322.828 418.452 322.687 cv
418.601 323.259 li
cp
f
417.319 316.259 mo
416.727 316.259 li
416.727 306.794 li
417.319 306.794 li
417.319 316.259 li
cp
f
390.62 326.646 mo
390.62 328.985 li
393.323 328.985 li
393.323 326.646 li
394.052 326.646 li
394.052 332.234 li
393.323 332.234 li
393.323 329.615 li
390.62 329.615 li
390.62 332.234 li
389.898 332.234 li
389.898 326.646 li
390.62 326.646 li
cp
f
394.949 333.786 mo
394.949 333.451 li
395.378 333.035 li
396.408 332.054 396.874 331.533 396.88 330.924 cv
396.88 330.514 396.682 330.136 396.079 330.136 cv
395.713 330.136 395.409 330.322 395.222 330.476 cv
395.049 330.092 li
395.328 329.856 395.725 329.682 396.191 329.682 cv
397.06 329.682 397.426 330.278 397.426 330.855 cv
397.426 331.601 396.887 332.202 396.036 333.022 cv
395.713 333.32 li
395.713 333.333 li
397.525 333.333 li
397.525 333.786 li
394.949 333.786 li
cp
f
398.486 332.234 mo
398.486 326.646 li
399.274 326.646 li
401.065 329.473 li
401.479 330.129 401.803 330.718 402.068 331.289 cv
402.084 331.281 li
402.018 330.534 402.002 329.855 402.002 328.985 cv
402.002 326.646 li
402.682 326.646 li
402.682 332.234 li
401.952 332.234 li
400.178 329.399 li
399.789 328.777 399.415 328.139 399.133 327.533 cv
399.108 327.542 li
399.15 328.246 399.166 328.918 399.166 329.847 cv
399.166 332.234 li
398.486 332.234 li
cp
f
405.843 327.172 mo
405.547 326.669 li
413.415 322.115 li
413.71 322.647 li
405.843 327.172 li
cp
f
430.043 332.234 mo
430.043 326.646 li
430.831 326.646 li
432.622 329.473 li
433.036 330.129 433.36 330.718 433.625 331.289 cv
433.641 331.281 li
433.575 330.534 433.559 329.855 433.559 328.985 cv
433.559 326.646 li
434.239 326.646 li
434.239 332.234 li
433.509 332.234 li
431.735 329.399 li
431.346 328.777 430.972 328.139 430.69 327.533 cv
430.665 327.542 li
430.707 328.246 430.723 328.918 430.723 329.847 cv
430.723 332.234 li
430.043 332.234 li
cp
f
436.214 326.646 mo
436.214 328.985 li
438.917 328.985 li
438.917 326.646 li
439.645 326.646 li
439.645 332.234 li
438.917 332.234 li
438.917 329.615 li
436.214 329.615 li
436.214 332.234 li
435.492 332.234 li
435.492 326.646 li
436.214 326.646 li
cp
f
429.031 325.723 mo
428.735 326.226 li
421.104 321.848 li
421.4 321.316 li
429.031 325.723 li
cp
f
427.966 327.557 mo
427.67 328.059 li
420.04 323.682 li
420.335 323.179 li
427.966 327.557 li
cp
f
452.788 217.078 mo
449.368 221.577 li
449.368 221.649 li
454.804 220.929 li
454.804 223.377 li
449.368 222.729 li
449.368 222.801 li
452.824 227.121 li
450.556 228.417 li
448.396 223.377 li
448.324 223.377 li
445.984 228.452 li
443.933 227.156 li
447.353 222.765 li
447.353 222.693 li
442.025 223.377 li
442.025 220.929 li
447.316 221.613 li
447.316 221.541 li
443.933 217.15 li
446.129 215.89 li
448.36 220.893 li
448.433 220.893 li
450.628 215.854 li
452.788 217.078 li
cp
0 0 0 rgb
f
500 50 mo
0 50 li
0 0 li
500 0 li
500 50 li
cp
f
91.5845 37.6289 mo
91.5845 16.1543 li
107.507 16.1543 li
107.507 19.7871 li
95.9204 19.7871 li
95.9204 24.5479 li
106.702 24.5479 li
106.702 28.166 li
95.9204 28.166 li
95.9204 34.0107 li
107.917 34.0107 li
107.917 37.6289 li
91.5845 37.6289 li
cp
1 1 1 rgb
f
110.115 33.1904 mo
114.246 32.5605 li
114.421 33.3613 114.778 33.9692 115.315 34.3843 cv
115.852 34.7993 116.604 35.0068 117.571 35.0068 cv
118.635 35.0068 119.436 34.8115 119.973 34.4209 cv
120.334 34.1475 120.515 33.7813 120.515 33.3223 cv
120.515 33.0098 120.417 32.751 120.222 32.5459 cv
120.017 32.3506 119.558 32.1699 118.845 32.0039 cv
115.525 31.2715 113.42 30.6025 112.532 29.9971 cv
111.301 29.1572 110.686 27.9902 110.686 26.4961 cv
110.686 25.1484 111.218 24.0156 112.283 23.0977 cv
113.347 22.1797 114.998 21.7207 117.234 21.7207 cv
119.363 21.7207 120.945 22.0674 121.98 22.7607 cv
123.015 23.4541 123.728 24.4795 124.119 25.8369 cv
120.237 26.5547 li
120.071 25.9492 119.755 25.4854 119.292 25.1631 cv
118.828 24.8408 118.167 24.6797 117.307 24.6797 cv
116.223 24.6797 115.447 24.8311 114.978 25.1338 cv
114.666 25.3486 114.509 25.627 114.509 25.9688 cv
114.509 26.2617 114.646 26.5107 114.919 26.7158 cv
115.291 26.9893 116.572 27.375 118.765 27.873 cv
120.957 28.3711 122.488 28.9814 123.357 29.7041 cv
124.216 30.4365 124.646 31.457 124.646 32.7656 cv
124.646 34.1914 124.05 35.417 122.859 36.4424 cv
121.667 37.4678 119.905 37.9805 117.571 37.9805 cv
115.452 37.9805 113.774 37.5508 112.539 36.6914 cv
111.303 35.832 110.496 34.665 110.115 33.1904 cv
cp
f
126.799 33.1904 mo
130.93 32.5605 li
131.106 33.3613 131.462 33.9692 132 34.3843 cv
132.537 34.7993 133.289 35.0068 134.255 35.0068 cv
135.32 35.0068 136.121 34.8115 136.658 34.4209 cv
137.019 34.1475 137.2 33.7813 137.2 33.3223 cv
137.2 33.0098 137.102 32.751 136.907 32.5459 cv
136.702 32.3506 136.243 32.1699 135.53 32.0039 cv
132.209 31.2715 130.105 30.6025 129.216 29.9971 cv
127.986 29.1572 127.371 27.9902 127.371 26.4961 cv
127.371 25.1484 127.903 24.0156 128.967 23.0977 cv
130.032 22.1797 131.682 21.7207 133.918 21.7207 cv
136.047 21.7207 137.629 22.0674 138.665 22.7607 cv
139.7 23.4541 140.413 24.4795 140.803 25.8369 cv
136.921 26.5547 li
136.755 25.9492 136.44 25.4854 135.977 25.1631 cv
135.512 24.8408 134.851 24.6797 133.992 24.6797 cv
132.908 24.6797 132.131 24.8311 131.663 25.1338 cv
131.35 25.3486 131.194 25.627 131.194 25.9688 cv
131.194 26.2617 131.331 26.5107 131.604 26.7158 cv
131.975 26.9893 133.256 27.375 135.45 27.873 cv
137.641 28.3711 139.172 28.9814 140.042 29.7041 cv
140.901 30.4365 141.331 31.457 141.331 32.7656 cv
141.331 34.1914 140.735 35.417 139.543 36.4424 cv
138.352 37.4678 136.589 37.9805 134.255 37.9805 cv
132.136 37.9805 130.458 37.5508 129.223 36.6914 cv
127.988 35.832 127.18 34.665 126.799 33.1904 cv
cp
f
154.177 28.5176 mo
154.148 27.3262 153.84 26.4204 153.254 25.8003 cv
152.668 25.1802 151.956 24.8701 151.116 24.8701 cv
150.217 24.8701 149.475 25.1973 148.889 25.8516 cv
148.303 26.5059 148.015 27.3945 148.025 28.5176 cv
154.177 28.5176 li
cp
153.943 32.6777 mo
158.044 33.3662 li
157.517 34.8701 156.684 36.0151 155.546 36.8013 cv
154.409 37.5874 152.986 37.9805 151.277 37.9805 cv
148.572 37.9805 146.57 37.0967 145.271 35.3291 cv
144.246 33.9131 143.733 32.126 143.733 29.9678 cv
143.733 27.3896 144.407 25.3706 145.754 23.9106 cv
147.102 22.4507 148.806 21.7207 150.867 21.7207 cv
153.181 21.7207 155.007 22.4849 156.345 24.0132 cv
157.683 25.5415 158.323 27.8828 158.264 31.0371 cv
147.952 31.0371 li
147.981 32.2578 148.313 33.2075 148.948 33.8862 cv
149.583 34.5649 150.374 34.9043 151.321 34.9043 cv
151.965 34.9043 152.507 34.7285 152.947 34.377 cv
153.386 34.0254 153.718 33.459 153.943 32.6777 cv
cp
f
175.769 37.6289 mo
171.653 37.6289 li
171.653 29.6895 li
171.653 28.0098 171.565 26.9233 171.389 26.4302 cv
171.213 25.937 170.928 25.5537 170.532 25.2803 cv
170.137 25.0068 169.661 24.8701 169.104 24.8701 cv
168.391 24.8701 167.751 25.0654 167.185 25.4561 cv
166.619 25.8467 166.23 26.3643 166.02 27.0088 cv
165.81 27.6533 165.706 28.8447 165.706 30.583 cv
165.706 37.6289 li
161.589 37.6289 li
161.589 22.0723 li
165.413 22.0723 li
165.413 24.3574 li
166.77 22.5996 168.479 21.7207 170.54 21.7207 cv
171.448 21.7207 172.278 21.8843 173.03 22.2114 cv
173.782 22.5386 174.35 22.9561 174.737 23.4639 cv
175.122 23.9717 175.39 24.5479 175.542 25.1924 cv
175.693 25.8369 175.769 26.7598 175.769 27.9609 cv
175.769 37.6289 li
cp
f
187.078 22.0723 mo
187.078 25.3535 li
184.265 25.3535 li
184.265 31.623 li
184.265 32.8926 184.292 33.6323 184.345 33.8423 cv
184.399 34.0522 184.521 34.2256 184.712 34.3623 cv
184.902 34.499 185.134 34.5674 185.408 34.5674 cv
185.789 34.5674 186.34 34.4355 187.063 34.1719 cv
187.415 37.3652 li
186.458 37.7754 185.374 37.9805 184.163 37.9805 cv
183.42 37.9805 182.751 37.856 182.156 37.6069 cv
181.56 37.3579 181.123 37.0356 180.845 36.6401 cv
180.566 36.2446 180.374 35.71 180.266 35.0361 cv
180.178 34.5576 180.134 33.5908 180.134 32.1357 cv
180.134 25.3535 li
178.245 25.3535 li
178.245 22.0723 li
180.134 22.0723 li
180.134 18.9814 li
184.265 16.5791 li
184.265 22.0723 li
187.078 22.0723 li
cp
f
189.934 37.6289 mo
189.934 22.0723 li
194.05 22.0723 li
194.05 37.6289 li
189.934 37.6289 li
cp
189.934 19.9629 mo
189.934 16.1543 li
194.05 16.1543 li
194.05 19.9629 li
189.934 19.9629 li
cp
f
206.853 30.1582 mo
206.326 30.334 205.491 30.5439 204.348 30.7881 cv
203.206 31.0322 202.458 31.2715 202.107 31.5059 cv
201.57 31.8867 201.301 32.3701 201.301 32.9561 cv
201.301 33.5322 201.516 34.0303 201.946 34.4502 cv
202.375 34.8701 202.922 35.0801 203.586 35.0801 cv
204.329 35.0801 205.037 34.8359 205.71 34.3477 cv
206.208 33.9766 206.536 33.5225 206.692 32.9854 cv
206.799 32.6338 206.853 31.9648 206.853 30.9785 cv
206.853 30.1582 li
cp
201.345 26.8184 mo
197.61 26.1445 li
198.03 24.6406 198.752 23.5273 199.778 22.8047 cv
200.803 22.082 202.327 21.7207 204.348 21.7207 cv
206.184 21.7207 207.551 21.938 208.45 22.3726 cv
209.348 22.8071 209.981 23.3589 210.346 24.0278 cv
210.713 24.6968 210.896 25.9248 210.896 27.7119 cv
210.852 32.5166 li
210.852 33.8838 210.918 34.8921 211.049 35.5415 cv
211.182 36.1909 211.428 36.8867 211.79 37.6289 cv
207.717 37.6289 li
207.61 37.3555 207.478 36.9502 207.322 36.4131 cv
207.253 36.1689 207.205 36.0078 207.175 35.9297 cv
206.472 36.6133 205.72 37.126 204.919 37.4678 cv
204.119 37.8096 203.264 37.9805 202.356 37.9805 cv
200.754 37.9805 199.493 37.5459 198.569 36.6768 cv
197.647 35.8076 197.185 34.709 197.185 33.3809 cv
197.185 32.502 197.395 31.7183 197.815 31.0298 cv
198.235 30.3413 198.823 29.814 199.581 29.4478 cv
200.336 29.0815 201.428 28.7617 202.854 28.4883 cv
204.778 28.127 206.111 27.79 206.853 27.4775 cv
206.853 27.0674 li
206.853 26.2764 206.658 25.7124 206.267 25.3755 cv
205.876 25.0386 205.139 24.8701 204.055 24.8701 cv
203.323 24.8701 202.751 25.0142 202.341 25.3022 cv
201.931 25.5903 201.599 26.0957 201.345 26.8184 cv
cp
f
214.954 37.6289 mo
214.954 16.1543 li
219.07 16.1543 li
219.07 37.6289 li
214.954 37.6289 li
cp
f
241.921 29.1328 mo
238.962 21.1641 li
236.062 29.1328 li
241.921 29.1328 li
cp
249.905 37.6289 mo
245.188 37.6289 li
243.313 32.751 li
234.729 32.751 li
232.957 37.6289 li
228.357 37.6289 li
236.721 16.1543 li
241.306 16.1543 li
249.905 37.6289 li
cp
f
251.867 22.0723 mo
255.661 22.0723 li
255.661 24.1963 li
257.019 22.5459 258.635 21.7207 260.51 21.7207 cv
261.506 21.7207 262.37 21.9258 263.103 22.3359 cv
263.835 22.7461 264.436 23.3662 264.904 24.1963 cv
265.588 23.3662 266.325 22.7461 267.116 22.3359 cv
267.907 21.9258 268.752 21.7207 269.65 21.7207 cv
270.793 21.7207 271.76 21.9526 272.551 22.4165 cv
273.342 22.8804 273.933 23.5615 274.323 24.46 cv
274.606 25.124 274.748 26.1982 274.748 27.6826 cv
274.748 37.6289 li
270.632 37.6289 li
270.632 28.7373 li
270.632 27.1943 270.49 26.1982 270.207 25.749 cv
269.826 25.1631 269.24 24.8701 268.449 24.8701 cv
267.873 24.8701 267.331 25.0459 266.823 25.3975 cv
266.315 25.749 265.949 26.2642 265.725 26.9429 cv
265.5 27.6216 265.388 28.6934 265.388 30.1582 cv
265.388 37.6289 li
261.271 37.6289 li
261.271 29.1035 li
261.271 27.5898 261.198 26.6133 261.052 26.1738 cv
260.905 25.7344 260.678 25.4072 260.371 25.1924 cv
260.063 24.9775 259.646 24.8701 259.118 24.8701 cv
258.483 24.8701 257.912 25.041 257.404 25.3828 cv
256.896 25.7246 256.533 26.2178 256.313 26.8623 cv
256.094 27.5068 255.983 28.5762 255.983 30.0703 cv
255.983 37.6289 li
251.867 37.6289 li
251.867 22.0723 li
cp
f
278.85 37.6289 mo
278.85 22.0723 li
282.966 22.0723 li
282.966 37.6289 li
278.85 37.6289 li
cp
278.85 19.9629 mo
278.85 16.1543 li
282.966 16.1543 li
282.966 19.9629 li
278.85 19.9629 li
cp
f
301.335 37.6289 mo
297.219 37.6289 li
297.219 29.6895 li
297.219 28.0098 297.131 26.9233 296.955 26.4302 cv
296.779 25.937 296.494 25.5537 296.098 25.2803 cv
295.703 25.0068 295.227 24.8701 294.67 24.8701 cv
293.957 24.8701 293.317 25.0654 292.751 25.4561 cv
292.185 25.8467 291.796 26.3643 291.586 27.0088 cv
291.376 27.6533 291.271 28.8447 291.271 30.583 cv
291.271 37.6289 li
287.155 37.6289 li
287.155 22.0723 li
290.979 22.0723 li
290.979 24.3574 li
292.336 22.5996 294.045 21.7207 296.105 21.7207 cv
297.014 21.7207 297.844 21.8843 298.596 22.2114 cv
299.348 22.5386 299.916 22.9561 300.303 23.4639 cv
300.688 23.9717 300.956 24.5479 301.107 25.1924 cv
301.259 25.8369 301.335 26.7598 301.335 27.9609 cv
301.335 37.6289 li
cp
f
308.776 29.8506 mo
308.776 31.3936 309.143 32.5752 309.875 33.3955 cv
310.607 34.2158 311.511 34.626 312.585 34.626 cv
313.659 34.626 314.56 34.2158 315.288 33.3955 cv
316.015 32.5752 316.379 31.3838 316.379 29.8213 cv
316.379 28.2979 316.015 27.126 315.288 26.3057 cv
314.56 25.4854 313.659 25.0752 312.585 25.0752 cv
311.511 25.0752 310.607 25.4854 309.875 26.3057 cv
309.143 27.126 308.776 28.3076 308.776 29.8506 cv
cp
304.558 29.6309 mo
304.558 28.2637 304.895 26.9404 305.568 25.6611 cv
306.242 24.3818 307.196 23.4053 308.433 22.7314 cv
309.667 22.0576 311.047 21.7207 312.57 21.7207 cv
314.924 21.7207 316.853 22.4849 318.356 24.0132 cv
319.86 25.5415 320.612 27.4727 320.612 29.8066 cv
320.612 32.1602 319.853 34.1108 318.335 35.6587 cv
316.815 37.2065 314.904 37.9805 312.6 37.9805 cv
311.174 37.9805 309.813 37.6582 308.521 37.0137 cv
307.226 36.3691 306.242 35.4243 305.568 34.1792 cv
304.895 32.9341 304.558 31.418 304.558 29.6309 cv
cp
f
342.468 29.1328 mo
339.509 21.1641 li
336.608 29.1328 li
342.468 29.1328 li
cp
350.451 37.6289 mo
345.734 37.6289 li
343.859 32.751 li
335.275 32.751 li
333.503 37.6289 li
328.903 37.6289 li
337.268 16.1543 li
341.853 16.1543 li
350.451 37.6289 li
cp
f
366.286 26.6719 mo
362.229 27.4043 li
362.092 26.5938 361.781 25.9834 361.299 25.5732 cv
360.814 25.1631 360.188 24.958 359.416 24.958 cv
358.391 24.958 357.572 25.312 356.963 26.02 cv
356.352 26.728 356.047 27.9121 356.047 29.5723 cv
356.047 31.418 356.356 32.7217 356.977 33.4834 cv
357.597 34.2451 358.43 34.626 359.475 34.626 cv
360.256 34.626 360.896 34.4038 361.394 33.9595 cv
361.892 33.5151 362.243 32.751 362.448 31.667 cv
366.491 32.3555 li
366.071 34.2109 365.266 35.6123 364.074 36.5596 cv
362.883 37.5068 361.286 37.9805 359.284 37.9805 cv
357.009 37.9805 355.194 37.2627 353.842 35.8271 cv
352.489 34.3916 351.813 32.4043 351.813 29.8652 cv
351.813 27.2969 352.492 25.2974 353.85 23.8667 cv
355.207 22.436 357.043 21.7207 359.357 21.7207 cv
361.252 21.7207 362.758 22.1284 363.877 22.9438 cv
364.994 23.7593 365.798 25.002 366.286 26.6719 cv
cp
f
369.406 37.6289 mo
369.406 22.0723 li
373.522 22.0723 li
373.522 37.6289 li
369.406 37.6289 li
cp
369.406 19.9629 mo
369.406 16.1543 li
373.522 16.1543 li
373.522 19.9629 li
369.406 19.9629 li
cp
f
381.022 29.5137 mo
381.022 31.1738 381.252 32.375 381.711 33.1172 cv
382.375 34.1914 383.303 34.7285 384.494 34.7285 cv
385.441 34.7285 386.247 34.3257 386.911 33.52 cv
387.575 32.7144 387.907 31.5107 387.907 29.9092 cv
387.907 28.1221 387.585 26.8354 386.94 26.0493 cv
386.296 25.2632 385.471 24.8701 384.465 24.8701 cv
383.488 24.8701 382.67 25.2583 382.012 26.0347 cv
381.352 26.811 381.022 27.9707 381.022 29.5137 cv
cp
392.009 37.6289 mo
388.186 37.6289 li
388.186 35.3438 li
387.551 36.2324 386.801 36.894 385.938 37.3286 cv
385.072 37.7632 384.201 37.9805 383.322 37.9805 cv
381.535 37.9805 380.004 37.2603 378.73 35.8198 cv
377.455 34.3794 376.818 32.3701 376.818 29.792 cv
376.818 27.1553 377.438 25.1509 378.679 23.7788 cv
379.919 22.4067 381.486 21.7207 383.381 21.7207 cv
385.119 21.7207 386.623 22.4434 387.893 23.8887 cv
387.893 16.1543 li
392.009 16.1543 li
392.009 37.6289 li
cp
f
394.616 33.1904 mo
398.747 32.5605 li
398.923 33.3613 399.279 33.9692 399.816 34.3843 cv
400.354 34.7993 401.105 35.0068 402.072 35.0068 cv
403.137 35.0068 403.938 34.8115 404.475 34.4209 cv
404.836 34.1475 405.017 33.7813 405.017 33.3223 cv
405.017 33.0098 404.919 32.751 404.724 32.5459 cv
404.519 32.3506 404.06 32.1699 403.347 32.0039 cv
400.026 31.2715 397.922 30.6025 397.033 29.9971 cv
395.803 29.1572 395.188 27.9902 395.188 26.4961 cv
395.188 25.1484 395.72 24.0156 396.784 23.0977 cv
397.849 22.1797 399.499 21.7207 401.735 21.7207 cv
403.864 21.7207 405.446 22.0674 406.481 22.7607 cv
407.517 23.4541 408.229 24.4795 408.62 25.8369 cv
404.738 26.5547 li
404.572 25.9492 404.257 25.4854 403.794 25.1631 cv
403.329 24.8408 402.668 24.6797 401.809 24.6797 cv
400.725 24.6797 399.948 24.8311 399.479 25.1338 cv
399.167 25.3486 399.011 25.627 399.011 25.9688 cv
399.011 26.2617 399.147 26.5107 399.421 26.7158 cv
399.792 26.9893 401.073 27.375 403.267 27.873 cv
405.458 28.3711 406.989 28.9814 407.858 29.7041 cv
408.718 30.4365 409.147 31.457 409.147 32.7656 cv
409.147 34.1914 408.552 35.417 407.36 36.4424 cv
406.169 37.4678 404.406 37.9805 402.072 37.9805 cv
399.953 37.9805 398.275 37.5508 397.04 36.6914 cv
395.805 35.832 394.997 34.665 394.616 33.1904 cv
cp
f
62.9728 50.0487 mo
62.9728 50.04 62.974 50.0318 62.974 50.0231 cv
62.974 36.8668 52.3091 26.2019 39.1528 26.2019 cv
25.9965 26.2019 15.3316 36.8668 15.3316 50.0231 cv
15.3316 50.0318 15.3328 50.04 15.3328 50.0487 cv
12.9507 50.0487 li
12.978 64.4739 24.7205 76.2019 39.1528 76.2019 cv
53.5851 76.2019 65.3276 64.4739 65.3549 50.0487 cv
62.9728 50.0487 li
cp
.231373 .929412 .556863 rgb
f
28.5152 59.1416 mo
27.6999 59.1416 li
27.6999 64.1023 li
28.3268 64.1023 li
29.3044 64.1023 29.9302 63.9459 30.2053 63.6301 cv
30.4799 63.3143 30.6159 62.5833 30.6159 61.4352 cv
30.6159 60.5216 30.4549 59.9092 30.1321 59.6028 cv
29.8093 59.2945 29.269 59.1416 28.5152 59.1416 cv
cp
27.6999 54.2366 mo
27.6999 58.6123 li
28.3268 58.6123 li
29.1305 58.6123 29.6691 58.5001 29.9407 58.2768 cv
30.2118 58.0552 30.3478 57.43 30.3478 56.4041 cv
30.3478 55.5457 30.2379 54.9693 30.0181 54.6762 cv
29.7982 54.3837 29.312 54.2366 28.563 54.2366 cv
27.6999 54.2366 li
cp
29.2644 64.6321 mo
23.6418 64.6321 li
23.6418 64.1023 li
25.0276 64.1023 li
25.0276 54.2366 li
23.6418 54.2366 li
23.6418 53.7074 li
29.4353 53.7074 li
30.777 53.7074 31.7366 53.9667 32.3153 54.4855 cv
32.8933 55.0031 33.1836 55.5997 33.1836 56.2733 cv
33.1836 56.8391 32.9603 57.3701 32.5153 57.8662 cv
32.0698 58.3639 31.2929 58.6873 30.185 58.8402 cv
30.185 58.8723 li
32.4496 59.1654 33.5825 60.0791 33.5825 61.6103 cv
33.5825 62.5228 33.2191 63.255 32.4904 63.8058 cv
31.7622 64.3571 30.6875 64.6321 29.2644 64.6321 cv
cp
1 1 1 rgb
f
39.2604 55.0915 mo
39.2604 54.7605 39.3767 54.4797 39.6069 54.2482 cv
39.8379 54.0185 40.1171 53.9027 40.4433 53.9027 cv
40.7731 53.9027 41.058 54.0191 41.2947 54.2529 cv
41.5303 54.4873 41.6483 54.7663 41.6483 55.0915 cv
41.6483 55.4177 41.5303 55.6986 41.2947 55.9348 cv
41.058 56.1708 40.7731 56.2895 40.4433 56.2895 cv
40.1171 56.2895 39.8379 56.1708 39.6069 55.9348 cv
39.3767 55.6986 39.2604 55.4177 39.2604 55.0915 cv
cp
41.6326 57.8702 mo
41.6326 64.1366 li
42.2677 64.1366 li
42.2677 64.6321 li
38.6247 64.6321 li
38.6247 64.1366 li
39.4082 64.1366 li
39.4082 58.5786 li
38.6247 58.5786 li
38.6247 58.0732 li
39.66 58.0732 li
40.1984 58.0732 40.6487 58.0412 41.0138 57.9726 cv
41.3761 57.9051 41.5832 57.8702 41.6326 57.8702 cv
cp
f
50.9 58.2866 mo
50.6109 58.2866 50.3795 58.3541 50.2044 58.4936 cv
50.0299 58.632 49.9235 58.8432 49.8857 59.1293 cv
49.8473 59.4137 49.8293 60.157 49.8293 61.3573 cv
49.8293 62.5251 49.8461 63.2422 49.8816 63.5086 cv
49.9171 63.7749 50.0264 63.9907 50.2096 64.1564 cv
50.3916 64.321 50.6389 64.4047 50.9488 64.4047 cv
51.1989 64.4047 51.4187 64.3333 51.6077 64.1884 cv
51.7961 64.0448 51.909 63.7842 51.9468 63.4062 cv
51.9851 63.0293 52.0032 62.3896 52.0032 61.4882 cv
52.0032 60.0803 51.9496 59.1951 51.8398 58.8315 cv
51.731 58.468 51.4182 58.2866 50.9 58.2866 cv
cp
50.9 64.8363 mo
49.8072 64.8363 48.9342 64.4885 48.2818 63.7924 cv
47.6292 63.0962 47.303 62.2867 47.303 61.3619 cv
47.303 60.4263 47.635 59.6103 48.298 58.9147 cv
48.9604 58.218 49.8293 57.8702 50.9 57.8702 cv
51.9829 57.8702 52.857 58.2151 53.5223 58.9031 cv
54.1881 59.5917 54.522 60.4099 54.522 61.3619 cv
54.522 62.3082 54.1917 63.1229 53.531 63.8086 cv
52.8703 64.4937 51.9928 64.8363 50.9 64.8363 cv
cp
f
38.7509 51.9406 mo
34.6718 45.7549 30.5798 42.7105 30.5798 42.7105 cv
30.5798 42.7105 35.9169 48.5494 38.0961 54.0952 cv
36.1752 53.455 31.4545 51.2857 28.5961 46.9488 cv
24.9979 41.4908 27.8755 33.2488 27.8755 33.2488 cv
27.8755 33.2488 34.8235 35.0144 38.4211 40.4714 cv
41.126 44.5749 40.0263 50.3499 39.3156 52.9588 cv
39.1504 52.6076 38.9638 52.2662 38.7509 51.9406 cv
cp
f
41.9723 50.9123 mo
46.815 43.8997 49.1669 43.3885 49.1669 43.3885 cv
49.1669 43.3885 43.7414 48.4854 42.4805 53.0879 cv
43.9787 52.5884 47.6571 50.9001 49.8828 47.52 cv
52.686 43.2705 50.4446 36.8476 50.4446 36.8476 cv
50.4446 36.8476 45.0308 38.223 42.2287 42.4731 cv
40.1217 45.6712 40.851 49.6787 41.407 51.7126 cv
41.5331 51.4386 41.8006 51.1613 41.9723 50.9123 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.0.0
%%For: (logos) ()
%%Title: (1086_essential_amino_acids.eps)
%%CreationDate: 11/25/2015 3:42 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj26BpGi)`T'Mj6&/Q#q@TRbT<B$S6'i@d1g_UAjJ4N3bMf\cBnc.t%3N&mgX$]2lDk/0/R1'p-f66kaWk0&_o'Ln,en?)e
%g](Eu314@G3#VX6rr-\AiFuf2hS$9bZ!HaheQ]_X::j]uFpm\L]@1'-'Rj(dRI/-O>cD8jf:1%Y5FHo*;E]^t\P7NLDD^\@G3>sT
%bD<5e5js4a^[=EA(]_;a>TR^Q!GJ[nlbOcQCmoQl,B$A7$cC<Ma%t,pT-P5FV!l1855`Sg8]fJs*.Jt+rqRTFPM6ddg:d?.V,QV9
%g+A\*-,\ZI#T#;9qGF*Hm&BYgi`>QVG;"S94NP/t7nAtm$!7>*O/"r)0,?qUo3#]#J)'DM2uN)U]Ss&Vg"@h6*3O$!S;beQZE$'k
%$POXnOVWf'h63HA2_2R&Z-hZ.Q=lN65P?1r1%9r:/pgpUpG:!EMl[1>>lDe.0ASN%JbkEsrL]A!ds@ikmq>JZ3k`5HrrGWtfP'bl
%^KL$<DDc`*2F4QD0k.b#X#C((\9kbh+gtTWdVmrN^X>-FpHVL.bs(],,ni\Q]]bu)<IWLr,(2VrbO^$q^\rm&]'KGLRHnF<&2M.R
%#V9L?\q;C81^ei$R?P.\8&etV&2UtPs,]l8+K@(VNT3KDAXRPf(@GijhWQe2YnXf4_ppCY2B,a_U&!)O"q(!Kop29YEt8W4Q9I:]
%m6-uOe>a8;B?5r_rgBt-.R6Rom:1Q%re%Ai&H-[0%fm/H[%Tj^K`hARf*c^Q37qs=iSm>)h*9e5*OYqHCGAn++4`5dlIB4Q"3dlY
%?64QJ5ON(u5C'F/aV2rIc\EUYe.6a;%+N]-[Igtef/)]D0D,JaGP(ED%WJT)8-rcro49G3o6Xs_#;kbr1[6I^V*E5>C&3JAK7/U^
%puFH<=q@c/3q:o`6UZ<]"T0c4p^TO:c`"*@XWR4Jq]+d#_kpSP::&BKF>@ss^RY<NF9^_s:NOJ6OH^X%!W3$]&P"#\h1V29+na^(
%<,2\D3!V&nIMgL'lQ=ls\s-g,X[_Wn&>)'sYX%j"7<F5;njERFT?UQQ&ppB11[gmcHe">[C2PoI0?q40l(*>TXg`'$s'@1B<#o\0
%pb+SnOmuYk$8kbNKbZ)^B&gC"3Bq4W1\je\H]m'#\!t-@Ofg"$7RB7rY.ceJ"rV$K=,T$:_4?r:P-D:E9?Y<)VW:"GhJ'Z>.9?@9
%9O0<[L;I?ZW'uc`#5k9#d/PRF;6Sk-HeL,E=8O4DXcs$[UG5NJ18S.V>kSG1E+tfTIk"hM[i1%$N6gA,Zbpsmd63C>0i(t\,)[O5
%'h/``/5^Lg6buiegPcl,0J1@65.nZdEF;//\uGoHhUaILTNA19HAu[G^A"tgX/GOcHW?f`+TIj,-4;3t>:P$I\LUf:9CWH<>$,n5
%--``$KeUqY9mJ#p:]3%GArdi^a@%e1rC3unJl@t?So:>D]em]6hf:L+d7>oo7Qg0H]E3N^n[0B%0/$ZR=aQQabAOT4WRMgt]!&n)
%V'AtI$fXSS_GV[2<MH'WTU(h6\gVuore_^=Qglm-g>@C.r;3\*^]/<ppb;KQo]*M(I=1g/p^$Xcq?69okpLRonB("RH+*dG,(*#X
%JJ$(C)=/+9,X.09(_*ZtHh=*4oC[%piUimp"0q@-TH?]?+00ONBKR78iR/+HS<rsW?HF_p%$hFTd-&.8"$cF!IK;VY^W[_D?ne3o
%0"Bsccga+Nn.IDSrKhI'=V#R>&W3+"MkVVV1=2<fqEC!<a?YJ8-O[4.97[a1+Ggp(5QihJK3XKK$:-*hLCTEe$Xqkb#\=j+\M,*@
%C#+`6mTfEL2WEbs%uc>E-L'pHLXSa]+2GmIPrg.;Eq%3"VZ<>5HqNZ+,F4lU9`k>4P*^\o-(n]RBM?'NoRRLk142^`;?%BhPD;pD
%4s>:Tq>f''5gpp4O,opJs!i?a6.o]9T`l.Qn0u0Y#>tN_iKJmi#To^Y6./9=#<7Kd/U6mg.K'(H!eV"+P:u+BB&1rDY;:cs?tk=B
%5+g#Rq&h?^,1#k0h?->]Gpc\=Q!i:!>X"LtKt/<RF!AYGIa/%0B/q=jLHlkFWW5^%J[lD\bX3HhmY397Jhi-I&XJgiJI$l.6plK\
%p`Lt;#`L"OZ35h/a?0`+#Qc;<X?]`M^q`*cW&[2Hg\L_"5I5<jmgogW?m0r=d3g#a$IPagI7b;>Ac*s50n^,>837'EG6R#<i,/S&
%+li[fL(@JIElTg8^[n*aJM09XI*aD+Q%Ar=d'XF,%^j_Ph+#ZhFU>hT5=LVaOON_d)F#d,AIr/P4Rmq\*-``[=!@&a&%jCo&'H*H
%/o]>GmL%lm!8Pj#f*fCm;SEPp_E];-O:6$J0q^i#LsIJdA4'C7Z1&Ql=*j:'g)Of\N2SR8l)rE8[,i>2/&qdV/24Tq8/Y9aJ3k[=
%.,?%C%HZ?ro'Iq&#3jFn7?VO`dLEJkP)X4H-`I;+$rZJD6o0qg,"QcGP3df04('t)?p8WUpgYM!jA"5uTjLk#Q1Tju<LIYt3DUaD
%qf54L^p=G/Pm)P#.E\:bAJ"Ym\i!G1TQCK>'SaI(d-;?<+AjGH\J!8l'U1l#90e,-,Zp_nq!lIaTH=bJ0*LB<rZha0.k%S&T/([-
%j]b";[!rC4m)I(r0@>6g!L&&J`Wmh>?PAU3.0'`KO]Yuihe7!NibC#g1\_i,pBgBiM#-Em=Dl.#Juo'K6WHoP"KmA':[*Xp$ibgr
%G=*H='K<q#9GdgRE,cGjE$"p9A)t83#3J7VJ;o,s^/0MoD-1`[l#K!F4TgfM,mpa,J#0WCf*NV[TZ&o(FBC+7/V^W&&1eNK$Fj@j
%\/L0E^m\E,q!Z7t2.7GC?@f!ZE$1[FY<I0I5bSd%3CFDI4du=A]l9Qj0b0:>O?55eAR+WOpj0\E0YM*DQ3#p_5q^+;e;4*9.L?%(
%cEq7*&3F#IQp<=b-ufj7ErCb$/tNC?7+1$[JDWWhI-(nE\f-0R6Oc:f<VMI:SM?ZMB7PCGMgojP-#C?EqnJ^#(RXS^bpUQoPM)r,
%FOHnOS$oTHbh2V,(TN'qW<;&u"hmEGS;c7#Dql[.>'V,ePpgNZQk_pD_'pT9.JG8fel/G>`1q-;AKi:/,"9XC*6:TK/g;\_a[&$h
%JEU'G,9T&anrY+L6*/?[)tCbg8Vkhp7T,%_&s\`,3\QWLPFruu(.;KI^!)D-%j<TX5/_[Xj%#%U6!mN_J/=b\RDLQkG[]gt;<YeE
%!#$&?";HTE'T2!#eAtS8;5Bin5@k8J5ZBH+0Hi!DOV"U>'X7BIZuHH."9i_,!k<c43:k6\+8QL;/Efl,InKR4?2OkUa<JBqJh%GT
%7P9i59SlFeUa0JI7UTh$8fZ!J4j'?"A^)#;`RV7,91pld047T294S5_fN;_e/N&p9(,;"!fnlO1o3&:t,XG%WZkPs>D(J+2&Wp=W
%7m&@p+A38u`6tIB.@-o@1*n0U$;!LiCghdkA.,3W8/JTX9Z^BfAP174UtN&>ZQr:q+RCZgI#?%lQ"2)BAYKlA%,5A>X9Qa6Cc?0e
%0_LXg&u"ApLd_%%@kLB,OU"t26W,+)*b't&nmE_PS4jd!0\44q(F'aX+`T!M]4>L"c3+Hq-m^-k7FDdkLX>USP`?qj*[Mo5ol22O
%\0rNUP*9!K/;XCqLufs44#nNCWT*%js7`^W3%T6^91(h)m=`H2&MI>#6(\FGXmI+N1tjo8cR@%X78A+oi1O0"4qM9aTNYS4jAsgi
%"Gfd4,diS.#C3qCC2[[F6P&6RJm]:khM/Er)*i"mFZ,=,%jXYs]G/3q/DgU;&AZUSk]IceZ3M^RJf*Us'0qTE6E2[]bmM8qj9pZ.
%YttMncAEYXU3KOe!=Q^hjGS_$&^n72aXObH=F:G1Z'@hF.!*U2^)0\<a=0Kpm*MH-:h>;?SI5cSRX%jbF/Vc5V",@g`]tHA.#%m[
%O31i?Q+r2Up<$7K92_H6FTDm24%0HK(U.po8m"@I<(/@MKLI2;!Yk_Y=TG%&S]Oru-37nXC/^8[9f]455sP\+93%OMXud@a;Xtq`
%=FH@Dro@Jkb'0cg<MV*D%dQq6AWge*5#mlQ*`WDi/:pi1SJphF&jof`=H=rf%]&YAOQ6I6F:KQX!""FV&u==cWFsGK&nhS%P+WUV
%1sck#%(+$PdL]($(?RA,Q\i7Hb[k7j9I'rJOuk:S.k184J_;`RG*qdl=iV\.JLbonFWTlHiaAoRm,FC#re_YcG[Sor(\cd&PT.jg
%Sdg)bIF#"1?gkG4?F4KjqHdu;nJl2<o5i-Pe]d$&cC->p\6S:k3fV%+YMQsZ=b;C=:8]l"VL$[(eiNI>[;[o42d<uj,6$m+`$9SI
%E=llnE%gg%%gHkk-QE#_2#Fl75E/k8A43b)j\3(6"mC,&;iT!m]lAGJ97`(:3%8st+S23>Gl23c;>?O\KqFPrThPc@X]knI@rt-(
%:1q:>i0J%>.4fP0#G4-!0aF`.d1G1q@,nM/e5@EGNL&!90Pr/BfC'^QS+Tgi5+WOif2ucUK22WD<dV%%TMrD]d-4Fi]L=$(+=C>g
%$9@1uGf2Z9DSMUZ#FL706H:+-9<3R9ZJ)AW8Augcn\gqaf&>Z:3imGhj\Gc$+#GX1M\p-"db'MqJ6doGGR%(&+(mF3V-hN'.Ft4_
%CQs&j9L#tSPcWga/`Y2kT@Z/i?FuC&Qal:U&DCpo44X1^3mF:O7B&7'EIB:Ccd(9N3kUnJ?2i2#-kI?4J;;,?;.asBfhEJBo?;*`
%:mbm=;k2P:o??X$;h8&\q4c^/c?$UCDYJ(EP<o@a0Xj\P0q,"`o@.ZLg<ER.H#!(hJqD%tS[?5uDCXOP[@N*5Im+ho\0]lg[rK"b
%qAs'8hn%,*IGEt!&E_pQq?\*g^-b7"hc]hHM?k7+TUAPMRZeDH:Aqh.8[I#JWRVp^%%.eH`D%_6eMpcDj(2hO5o>PN0%k\_O`(TV
%%dV07]XD]:.9*nA9mU?s3-;0cAegqIQ3*hkl(jDM)7Jfk)91XEPC]?+p^[>,id%3e\C/tc?H+gl'V:TP5F%iiA.c-)?DWi@:KB%p
%=4BbcNKn7dJ(DXFs.qFg<o]$.A/^Y/l_d<\W7BrAZ!.+)d2F%a-`$1C?Ki2'+_A'PBF7[P29o)keJ)Wm1//pr<il=7d)/%G<<DRM
%PENJok"$)Q`DU))FKQ7s:U#G5CS%.tY##"*UXJUS)jOHQ1lnNg#$e^A1b\h+gB^eRNU15+Pe"BFAo1!G_:8m\dqJt`gZGKE!L6ET
%GB-aQV(l[?AIDC8G#(UCrG503d59l;CATf<K0R3E/-QMt[,c=\8n.[_'_on2@nFQW0+Dj4l/9hA8cB@]Vp37g;;Gi<Vq^miE?0lr
%aW4WoMYS=aHk1M:L]"dYOAjqG1uCZ\`+?Z<4PrO*6YY$BfgEb"j@Y<hcV3^LPLIHUACjsYks4G/`fic(^2H-k2kKIWrt984qo1Eh
%#Fk0$:N+cok4ajNNME7tRQKPA7U:Jkqg$4,eAU*oTttaa?dtMGZ,$n`$OtN>CCc$]2"=>8ou+`8'[EZ73J*2K/R$9Y;p6hqK8"IV
%@d-o3*P9[.;V7g(+&hX"-?G,Sg>'NW68nKOZ;c9g?7)/.ao78RC\>29YI@QKGh,q>eScG:=+<'\c$F<9;m3=34-eC<mC[`CCgK@'
%K4,Rgf?`UPZTg!N6&N@,b5X?EqPbON't'QrXGIYTe=5r/b%dU"G/@gZ@Y=6IX`TU6>PaNkTmUQIa)Eg`p>,=d's)cFH6$LNGi_!<
%N36rAjnG\?'ADkI_&oe'=/Zd<ln[)mW)m4"cT)-)=$eV/1,$;a$SV+gbIm=bD$r#.bb>Ft\dCgtQ[.P$??hkS?KQs.lX+mN?BW@T
%d[oL3J2Ao%?#_$73oQLk$IX(/:&Wd/WoA>jpo];#XIMPGm0?[f5<h"'<oD[qX<PoKq"'8@9Eu'Vrih8lUUO09N3)ElU0C4,Q>(hD
%`Vd"5;s54)(pD.(j>:(k\V$E45\3t9jSVSEe)_b%#;6$tc>aWogTR8^Zbk&a':bBf^2?_c@f/:#i&)6)1\64MATeMhnX9rEq+G%l
%l%reQkQcMBp$aV^+rD,8dJ)1d_XL-)^8q7P-\HF;fJ#<8aSI!)#$?a!Em>bQ1&7'm>!;N;g==_crim7gX?\@skH7P+Ff3&!NT709
%dW6KNFmD1)UJALgnj("7fJ&$726^QAlP0p`04W1IS#rGt]3S@ucW:UGQ0RUK7Y0:VQ"m)gF2c7uMJms@]>I.HS!;F!4D$f6jrbs6
%^H2Gq;ef9$_4+"JqA#na"5@VCmM+B_%M$&tQ!4'W_XFr?;f19$,Xe$eEs(%_R=>1+Uq.(HG&P]%bH(F`rMJMEoD'X0B#?(B+6aRZ
%`S^UaO3+>kQboE>n!9F"/N&%5c9.hjF@:=YA"W)X]U]c'RH_cZ>iBrps,2rm\MeYncXW\p9JjM:HsXFW[bC]QN*>CgOADDnR,:1n
%"4gk/#PiJs+?.&fHn*spr!r;.F.@u0AaU\=f`KA<jE(MSEsF^jCmfGO3PU.C>2;ICCPPGnK<\LiPC2(DF8Zeif'_ms2MjEY<3!W(
%o0p9RVGO)bNKoE8p^')HI';/c<C^ok,jtBAG5I82WX$3b>#,L9rI3q6hlO<8]L$(N@[Il"EN=T_&g[-?.TY5^-\YON8[8;?=R"D[
%Sbi(EE&>fKM$*,m>LBrmY'mBd9t)E5X2&['*q(cr2On=ur>G;\JrI`nAmXN&!PQ+3S9LDj]7(K-2(M^ZDG/]t9\6/r9O-2)HsG-I
%iNB#TSbZo//740fA1XX7:T+1@))&2bNNh$@KJp^YRJ7M2Rt88jCNm],bO<Lu$p_"Y4h*h=0It.N[LWtSCmphrAhfga2(6EaOu&k"
%=0i=AU.$j[:a93$*S!757cufI5UL0KViAU-b$c2DbX?U%c(s!r+GAXJ/O(Rc:Y;,#qlT/O9U_+0,\1&GEAH-ObVnTm2JFmUfADtW
%-[Ib*;B3=qGe[0kFcXt`JRJmsrlU#Kk>dR7"OW*$f.;lp>';SM8_\'J53U'lY1`_/@Q',^c;iD5<oeARN`c:S'jRf+-iFRh(5>EZ
%3Z)5=o`\\/P9T)$mVdH?TDY7^PJ>Z6<///R-[sN`B^-\/jJ:JWRaGWgeHrn:En\`dVgd4rOi$%/"!894&,>t_j;?UMT/S97:7#!r
%[77>S'(<bk^7qKg_CCOgfsmI'?P""5&PTX*'UI!5X'SBf^r0ua=l!tnaZcf'P<u:tr29+,PeTgOl<^<NdSm34P7+BoBb[XPm@X'@
%Pr.$M7,pk4`D^`TQ=`'][@3VtQ77F[G+-dk4ZP&3X]k\%d7X)e>Hmqr9!=V>2-/J2Ni.mumB\XpQC=WY4T8"lUsa"JV,HkK=,<:;
%)n"f=BUnXAPZ2q`N"g36[`L3VSW9$H.Or%).V\gCWj!nb:S)OUl_Jrh0;J5?"6$6R9]M3&*2L)_jLWq`s+ME=-E1rc5)MAP\Nd0:
%.0ASrY&c$_0\<kGcAgC8<$gcW>n`7P8E2h\]ho:Wq]A_@>2te*a/hbIJ+1RV'>Z&MS9?Bi7R,.XPA*!bgUH#,S=d0XmGeoX0QYG3
%gF]%b>J@Z0RfU^!6;H^0msj3b1#H+N0.?iWC8kO-Ut\U9jO58n;G[&@Tr?qGcrkP@TTeN3,EmN;81Gn5*%@<60bP3C5[;*1FgP!!
%E<0-\K9QV@4CKj5rufSVPA;3j>h@"lV0i$ubad"K5B^cMl).O,VZ*PnBlKI5LJGf!357p45FGTis!_6GiJ1)Qhp]6$no`=8hTp<4
%8lk=+-"Zl*Sa5t._tiW"Vn2@PJ"?94p?SfH\`9J.dBr)]bXmN.P\8:'rhi*Cs&,N[IhRktG1qrO>H?qB,)>0!m1)Qk^VDEY7^J9L
%bk;,bY/$'sfDbTh36,D^Ii7DkcYDSqj.&lQN&lTU@#Hs(*9M1?rpM:#D8,Zm"m]<"kkn/FZcnIp\r-</T_W)lY'cgNIT0g-/1L"=
%S0-:KI*=T8W\KM4I=>.*g5]oQ_tSf.O)/(1o^)Ffm;9;\ZtihRRHJ>:03>blpMP6-leW)j;kPr>B2I#!1$'cZrc]k2^\QiqZP[>O
%\-[1^d?o;b1TtIc@ji=%K8N,:*9IuqGsu4Ld?muljqWmAbER9@@jWZDc?6.#UdA[*.N6ps=VTKG8JM27eI6c.-U)<uWUJW#.i^mS
%B6$R(Ii@9QMnO+k8@RId5eY08,8tqrDkX\\YP(;#?)&Yt7@$)Xn+Le-cG/pVX@^FYoCj_>n,W&a#lf$'2_,d/r65T?HuGVFc1AVo
%^,P;(01B8lh=J>UbFI`5hZUV[MNd$UR.7#gC7aq>'>Ab/2c'3$.a's599CI(l]gmEZcC<tLD.k1=>J4uVC(Kdl?W5nkMa1iY>6h3
%ht&q8YNMBuY1)p[1i_^oA98T]lL_@9A@uq@`I/9Kr67`Q1\PaW>eW[>/5=PNm:L0P]]R6":[hoj3]n/;0L[ZY44`[UB*M:MEbD1C
%2T)_)R;\kFei)5j)ZMcIFtCTjp<7BJV.%a#gL_g-)"ukU"AZ/lS.Wdtj4g!$FCk;m0b74<IPEW:3=R`BDngb1N_]e7'TD7QID=KH
%?`]PdYpEC0WO,k%k$G`(YGS@N?0j<qr,u$*)dXQ"Md7[rD2O>@H*^DNT@I/ZmE55u\t$)6%$tEjE@*F]-Y#?.$X[&rlZe*ICRQC#
%1n9qM:Jm.@*H.DKRHaISBgROlM5UgW#28IfN5Thm[koc<SB2"bV5P-QNn46moD@!P\ph!::Red5FmAZ"92RW2C,DFEc6Y=qa3[SP
%U:]sJ<,/g1YONi3Hk\N1'NQZaSW0)+qun5u*ku7_M$8L+!]R_r=$KHVNk4&B:h_gkoh()hU-V7Qh/9-9qN9<M;FjfVs&=HEi"7rG
%?DWk6KrLB%6E/LQV(i_8CB(Abal/S>10KSaKbdJ#V-9>N=fPL96R,$SgJ3si[O6htMGX#FdlpFb=/jk@1Q+l+EL'3)QN#A@Y/(3C
%Q`n<U9WQe0,YAtcVE^9T537^u8X*qhcX,q$.+RX*&r!0\OO)]ZPVaAKHK4pA4bdd!h<0a,Sf'bNP"JlSs"$e83h8]2K?VgaYhuSC
%e,"U<q,rsX=d8_bPkeIHi<N2^k?4&7FZPGD#+=`M[e$gR;e+^flWKJ;FZPGD#+=`-q?`Z\R>"q8=ZfWH8g%c"Qa?YMXAm6ik+%gP
%7m"p),Q?mV-Fn_Doi+;)PaTSBUT<W6AodlcU6n(9c=h3ieVF2&_3ZWHlcjV)r38&!6hfIU\eM>OT,YAPTprE_9-L0R6h`5N\qSod
%Et1gE>%I+.`Y!=^U>=OS;0jqCo!4#5nQ`eVjmTrjSC=l2?/')eiV,ukGV7^M>5POqa`mU;PK\3H<B18IqQa%P23,;9;-+-jB!ZKY
%"CF+DDmu2HiHN%_1?A#DH^UsA&0R*?c6#;g`;1$t;(KS#/Ak`hhf7l#qY^?cL[&'Ge(a3eCt?4k%aSAHIp2I\lGR/77?pZ]ItY1?
%YAnaBX@Lm5bY.kF2G`i6Y(@4^@IJ[)?dIZb2h:i/-tThC+$ViTg>?jh=#GD-K9:@-YW*?1f\$b9jl7`1j<r&<k*$K#I.?_;pjql8
%0),p(kO8TR9(D^YQAl9p_>l3i5:^7m!ft&TY3WrkcsadMR,tK(-QA$m0`m_TZ!faZG:Lj`Y?+e=ll;m02j2R"MK6G3W9=?6,ZF^]
%$Mk_j8DO#*7JjH_rr-]23fLY.T;5tc"32[-OI=[6M6=j<V&Dj;N[Mla5+rbs!HEn6*HsI5+?J:X*Dp&E)`Bt4&M+@G%#lMlo)jtC
%@N8ana9_OW(rDQT&#0::G*[,\6bn6R30U$`BbASN?5Q0([)_\f*Pep:PH8bU^_;=;-rP^l(kHgmit*@brNZ42+q,K&6i_UR]Ejup
%IkK:L`"DnD7D+unJ\4NW)2&W**P*@u^g`tKoR0mm(P0@pN4YdEEl!9pdS0ImKjJBOOV_X#O*i"Tc%4`'f["rsV^Xa[6\sb^Thh"o
%4N)t7@GkN4jtdk0N9gVf2]fL1N9gjDU*R,>8/t&@Ofp_i;Zc6*(^n'&d:/;,!c6mokTko$m_BWPbT01Z>&:tX/mh<Snq._ng+Xca
%+<D.sal#+:l.BJq6@++=#<6rNRHJNHB&J#X;1M,iGgZ2O#7N:rEa0ro49(+lnX)LQSmI]&K##uj"g5lPLB!Bp&n.QO>U6(7FS'&!
%#6CKpM!'JT#')kiWGJ6,(e@oq`=WtB#2#@]OZU?L7O&O$aF)#9Php@d8ZjmL"M-TUN24O=&E=<<.H2L:ZPdB_btsR^3%.!NP3X<U
%EC_<<Y+hd7OqV1("sZ`)<^G[J4<uB<J6do\lN-.A>,HC%M3JCK"1+iEU;crL%M?#L&0g6++M$MXI=W[.EJ5XIijA.s#nb0RNtUJ5
%83\0]$tt+2eM9CkAY=:a$s+Z1Q&P$k4?p]G0l*l+pMic"kQJ7NT7[0+MLM^-M\@5cUuUIoiWL_fj"`NeTd3nIEL+a`Jb_RtP_251
%Tn*k:\/r^m;N,C4h,rJ70TeaNmL#RV<\Wk:W!%pU#@-2DjY.43'*L&[6dR/k"Lq6cE'-?1;EGBP0quY&:6;EY&BHM7p6tX\(tp?*
%IBu',/\jYK6./Du]/1p'%#L]J-Tj8bd0W\W1b91f>4TjB=pc)\VR8!T;XCsq$BH8J<*5`t2+Ar5<*WfBXtOCh+*(+,!>5AEE%iE(
%UG)o^$kp(lfKlZb'rdZZ7[s4Y\q.!#&ICP`3[>Zg#oHfcOA=a;`$o)dF<Z!=4Fk6Zp!>HI$m\X]dgo_ZM[Q=R6K2_N&<g"o1,:Mc
%Tk3H?Ob?+aO%aP@UF<AX;+;F8P:0?9(ZH$2>g&2>!U;$\\aP^?#FFkZ+@@'8&a3efQ8+sr>*S3#1rH%+Quel6'8H1E?ir_@/0]&S
%p^76Oe)I,J`N8"]5FL\u##!..HA[tQ/W(Erpdt_+mY,3@,A1XOJ<t4u?k:W;+d3"D>feFfK(44XirV"<)@g#_:ZFl%;"M_-em"1S
%i.=P$"h.#PUp>`+(D7qqps_Qc-e]rkoF"nMc03m*6L,/Hi.@1A[^.%8+nnNh=J.4Z#QBcp.L\Y!R&!=4.g(Ga^d,/O&ZFuR4BCC[
%,7E+%g&W?FN?%^'HmeA,cj%LMb;2=dqjiE#,/7\,9+Sm$ih#YUb`d,@5TM,l3[\ZU.6t)5"cWt1%n2gO!%V"LQ?gt#L0%miX`-j/
%JNB<"`"BO^Xg+O4(7@N8Kd(P2@p_i>4=)sCTsRcSdTZag-J:*)XI'm%F-OYp!u$YW1=SeDnqU=Y)NlFdZ)f/1JK2U#<D7?>b'T'O
%+J0aEE/Y]L?ic:HUN?>Ldf`?+UspPDFi3WrMFCc]["3obY*NggD"8X$a64LPr1\X_jN'*,jL[Ir#skgqr8E@n3QNsj"UM2CTn&<5
%%EAE2)XQXJ@b8Yg,:U"m4XZI\qfiBS,tSh1`_0Jf)+J*i)@5@"8'0.$;Xd8B5t?;;^0k:mLr+gJ;OKj7RYtq`"Wn`O$5p"(5L=s`
%h-I2MQOn`g&gX=t,81<n_Gn#F]#TPQ0ocQ_`C2)[![A<Ratc>'O8j_:,:geXD'Usu*u![DKZ2=QgZ^?b,l(LOR1]Z@^b9.?=Ceg%
%c`CmNM]Pr_mD5#V>+PiO%n0ZlTaAXjNg)Al$R#fOG!Ggp">TZjNOin^#8els9L5UDDLZXOfAVfogu&u)[S%*_1.:mX)`&:X&)lit
%5^<J$U0IjF&;a!GO@@$u.mM7k615;O0F=`eH)sgs+`LfM?ICB@n;A/`WfVc5/K($^n?ddJa=pSYoS%Y'`"5=$7T^Y&![@8Cn2no#
%".td73P\XX5KGp^cl&Q\dGU?>1iaur7+$2F`"c`QPuPA#`@g9\%\]G%o%ti/VRXl@<l8i=i_D\?Tgb6PWte"2)Vs7''HJimo@-%?
%=J9;d]"%M+m',<aU&I9g3'RB`21nB#fWOr<NeCl<#K0h+G\@(Z'?*0LRlg\TG(><P*keNSNMC?UIqtG/1s;ibQ\C&b2m*o+(@SWA
%#<s]/mcrFV/80tY`pR8(X6Cu2S9\!Q2X&tRj%j&M>9N0:]pIl4=0s0`q9i4bS*Ej=d&u')T%:r"_:)"Me))Sgs#hMXh4\(58B:$c
%jY4YP#&kGo\3"]mUJ[u`]=mpk+#F@(J`YEUho_#P=CU#88bsMDd?SSQpCbl/JtYahWW._0m#?M)b.kW]l_Vb[UOT/u]ha9LFIS9T
%oeGKg04c3mego!<0M_:AFBV'0?M)pd/DVi)BbAohdO1+1Gg+1a\>X#3&q$"o0Pg"u1KqT?.7"7K9toGt%%kF\%t^^]qGH]mVifsN
%Z*]mVSYd`_+N(-QD:0rqV^$]l^GZhm332d'22J>__d^L_H82mD\ic-Jk,d-*l]Z8<lSXpG2qHn'<)"9*WLYuR\reAa)!@/f/KRum
%bZUch3XDcC)r3g1lCPK0RX@7g[GC2f/'i'EErB<+ZWl\flCGrp7D?V2h*C_UD2+HNVg$drFD@3nhYE^^1P[\KCh1/o-0@*'b8=Do
%:0Wh&[emb^EMqVW^XtHgS6+#%SP6LYO5;`Q<l]puS+Jb,<qj8T_5Ck\5`H[=O0B1cH[IXc$p)l_Tc)Up';aMpRp+;Z9?DG2YtaWI
%NZ`)3gW%8J_[>[.B/)L]?Jn7>S(_5CdeZi*m_o<=M*Z>HokqJ7URp/Bs/224eJc-D@ADN>)%Rp$)DEO["S;?P/RV\9KPC5e4c^n1
%=D:h"d9@E!Yksr[\_9:5ST?>j?4c7M*n=l_*%6FGfmeO.`ulJ$bMpS0HEGRZbO!f2*.8Nlc^#agE`)cK&s`HAVAtRg=SFRO)2[lS
%Togq]p$PDI0I3"94@Xai7$j8=hDkl<QqeG+6\P;oAS16Z$Sra3<b1jgc!iX'ZB`OSHC7*tDX.UeL$9eu>F!cZ^N*T*m'P(`m9=+M
%f#cXl5rm2,QM\q(l27F8l,!RBe];P<+h@d-c@P/<+8$(>_umAnV>p0sZZo'r?&Td;N@uU[8M@bYDa(;q?sR"(C8HdBl;E8n5!<Wi
%oVctaA9M2SqEF&E3;!h?':/8j>.mB09Q"F3R"Bn,#KLJg]h\G]$9=V2Xa?^\",7cV84tCPk#K0JWgMJ>s/7k0=CUD6m"+P*cfo,p
%L2!:(m.J\%mCJ^p-Ol05QU^S$H84E@mDb<UpY4m)7;a_q1tuC<G3e>iAiH%"AD]M'Cj,PQ]O#H!CA$9lBuiDadI&<a)pGcV_fFII
%DAFm7*G/LBfYh;=/[?MdDPL9/D*-M]Gg4Fu78daE`M0Tt:fo9,Cc.q!$Y[ing7I[Ym+I*$0=@26N>/B\Zi+!pCn".9PYHK!7N(N>
%_H<_@USXNpeAP1cLTDss0l/\,A88'-1eZ,`,aqF=ea>2MYee=4#Mmoi8R;8ha^]R6T#c<MKEkk3Fi,8UmfG-:GQT&>2t%'Bh@JYj
%jWT9[pq/DMaECO/F`tZ?YF2NCO"1*?O4IGmQ@&D:fNbnl@baW1T%D9'^,0'Y=)hOc4/sd"a"<i*6\=^Rm4OeC)sMX-AI<_62<JPU
%WEl)%I$PM`W0W9T#C&ri7^['&JX=V>_&9+gh.msjbQF/Rr6&;gXJH'&bjpnkWV.f12ED?-Lsd[$XeS'NT'r_0;'P73r?G0C=[k9A
%`[IhqrcM4.F71RP7n>57Tp;hk(Y;e1AAm\4#prn4=Be":I,&[nm4O2.25?DrP"+?_LELZo`c5crdPBI<PjM;6""kUX>.0J1c$Gh5
%Q0r(UG?-`=<7e?sOrkK;DK`<uE<J"r8[[@U9A%.8o.iG4C#j^RS!E:'AW8dZCqJ/HR*[2@W0Ts3$VoEHs,/+`U!:[3%uE\,:4/SF
%>QT$mZU;^%Oj3++U=!Xa)u^\,Bt&EFXT#lNlD[8'<qfKpL.4<sk9BX])G=I?ZZ;Xh*4k*?#b3!/SS%1>%'qUpmb"V!B4rn4?tuRO
%J>F*LZiu<T20uM7AR.LL=CPKR*#L@<fV7=t4iBU/>bc&3I6OgY3EYK7l_ltL*G2sG;iK062(tg-LQtX/1'Ya3J/P`m<Jo?j)m=7@
%D0Ikm%q>.:9'<QCY`]^&j-?ERCp.B:*Z_Y7fiiHUoi$jq4%J\hV5=dXFo-rV:3sgfeHL%Jk&UW!%N?6j?H2VT[T,Pp7'F'=fa<ob
%bQ,])&2j[Cdi(#GPMpbO#f5JC%N9Ld.^aT#IMoPt<P=0EE=:>6dpqTd"3om\g]*o;CpF[Bb8]$6dhs^\:]Y63e)Lg17l8``d7W_[
%nMY9`WWcn$K#>3J<\.-JOu_$JQL4;/AJU&)F>%,g[A`aO$$Mt1<u2kU_0SJEW0e1-//`nG\4PS'-4Vn].n5ea'q<YG;4/'@4!qo1
%e2lD"/r?#;oiotiUes"tq/@UA_cK<E/$2iOUVEVXfM&2hAqt)Y?+`+?ZW+`0W5Q!2AY\h;1C+faTQ1n8TFkdhEG9+)!_a38HM6sY
%\1V[Pm[_ihQScY]<Q25\1i8b\8L->Gr'@(U:ue#^^>H%/gJo_3=iWLDko@l>3R]co<><Ig#Y%>LAj6:dO5k4?!7hB)]lC/8i+tI1
%HCLM0EI$%$C#^07p=AISjGB(]B(Jo_VM=kZ%h"S@!ugN]PPSGZE"ermS'Z=9PcA/EV&Hu2`8g^h:?+S3k"`U2<0)g?G6$-+)u,4,
%CgLi+oTm:hRfKJ?()ERI<0+_+>NJ2TjBS_-FQLVD[ktEsH&j'tX:<bMpKCG&.IiY:7=F)hk2eTugW`jT9oI`p]?5k<]g;Mk))"(j
%1'[&]eSDAjCCb)#pe=V5F0X#fB8pYC65;47XX(7+D"]<dDKdk92"GQbl];L)q176ZDHs2Y8-j%Df)t_u@TWdSm3huMKe'<.E3!Zi
%PMT4qo](f=Q$roDiOcZ9%Hf-K?k4G-2iP@=X!j8iC2B>G``//9p>l!SW6X$"De2iTF(,>B'dXVMk=Q0)67Xs+&Y/!pVeJX5L[SFL
%l,jfJ(r*e]N37kK.aj2O[\ROj_e5Dt-FD`dMOGBrBl$A=n!IM('^6UDC7O%W;=juN2s-,=0>V&6:fI1b/tO@6^1K(.`F(,.l`-*d
%]te<)_Et@T@hIOXOgCP*_?_5Z1H!^WKU58r*M[U!-5]cP6TN^ITZ(ND=BE\a;B<$%n1eMUrtS!E"rV1!PKd$8nmt^;1F<`53F)G4
%4cL;<A,,Hl/P/:8,A`Dq'?,:,g1d)3[f6sB1h8C]U]K3<<6ihWd.q.@Q*>%L43SW#I/hWhM.sO'IVLZ92]4F<m^UtjdM=4q+X:&c
%Y&o#/l\BBsom\SAZ;3%!d:8&bGO*<((oF0D]&.4lV/8jE`;-nuFI>Z6FKlt?\[3Ck8IuWcbFS>EFSMci3SbTPa;NYc+YS=)>DsC:
%mBioGc1-6Ejk5k1g_b7D@,-\cNu=b\32SMEWL6N:En*q^YgV:+r2bqm*`r$0,]g:l"]kcdfP*8`Qe&B88!;4#<CO(?&'S=_TlsfV
%IE!0se*Fu_m8)2$*U^ar-*<b.o87qs]pcV`EMYjg241jme/5NsCO5HL](+,*kF7VtY'ef7Y^<s&:MJn7$:4/()PC01S?([`NC_i[
%Qh8Kug[/%RH3.[^ZM&cOl;jJaCDg;;]\<1iOWleP:_Mc529Ru;_a_6a[J#%7Yb\rM26u+Grt$Po[sG[-]3ea:jh=6$[L>4"\+MIu
%H.0SLK%iNST,k?iNTM(i7pL;pX]*>Lhqn5K<fFNd*akU"qKTQC"H+"Qf^hSU3-a$q+^GGE:??-DD%jDDF,0-)C!oH:>)6tiqJ=f\
%ea)2#?I/q>IT@CbIT\lZ&ABAMH1EfR'!5k#lSM;i;m-aF**D-qZ)9W:K<i*2+#C[%gB1>oJ_afB31TQ+1OENX.p:lJ8WuL'VddX7
%2>``C)1,^WVq'!8Zr01n+Y'gcH;M=aC-fDD_WGIGMtJRVo7C'B-SOq9I'E><dG<?q];9/sSX7Oqp!1S1ai\Vh`j>5qV8^'#7O?g&
%/RCXnM-DLrY;[M@qbL8$52G%$n+<Zd>]R<+"m5]k*2d$=<]j]/DQg6makgB3><;5UGFuJX@@Hl>XW&;0l<,cir:JOjqO1dK.l8;1
%Xqn@s]>k`Mg8_iA$"^BSYTc;JoSVNikPYq79=_D&<]@Luf/n9I=PW2.MuN+Qq/=NiDdf*oOn7pYk\.G:GU21ZqY2MK?c]r!4fdCV
%jn&?&C&.As8iM+jTX_AU0/%4mNaNd"=8=BAZJs9p[kciGDn]F9b+J;5-h7@4:upr5@[1eY?XJ/#pT5>>(>UQi3W@H]Dg/o32f"mA
%o#nkYgUY#Z>:m7=GEl>RV?t!h5,adIr7,98`'7@0b:Rs_*opZZI=8>+\GNjBW;#aFIe2pWa_J4e3Q5or#Gn2t'/_Xg*`cgLEVo&o
%j3+c4^:EaomW.L,Vg`N!n'6,Fi84=qZP*kH&Z]h6YNK*>]4VWqD6H-fB:g5&UjUfXnoC;d-@9^C_P/3S`Fn!c5WO,!0&LtMD5C*S
%=90bTm73)X9D*[2m[P^GhJY!I(H0l_]e(gi*1uG!h#&R<4dLfqQNq;EC*-O4_craIgrHN#5j>P`Igas#;7mXI>"G[6q9s\"=UXG_
%g6TW?hqB\HXK:5,hg"XaK@:+=n:a?*-8:F#G]V?359;p>YN]t@DbJDVqnc7qWuB62mr!^[^N1GYIU$&sMbf?Tl%.\T>$J+WHgug"
%)6FaqH^X&/)JGCc(+nKd]EG\<BGXn'I=gu.q;MF;)kuUF^A&hb<HJ&VD\%^q&"e>)<@W32kJcEG=)1Ti#ENs'-e2O@kB:u0\*nVk
%!]g)Pr@R54qbVV5ogqBBOqQW)[!k#p7gkd=c;VWfp[-tf?E$C>KlJX;*^%0EqGqSB7tt_M#OK9r]`7D&H+hZeH0qeO^O8FR$@&<j
%J:mT_*ou)7QU,@5;7B,88>V]36btU[%j(B[bJbgO44![/r7Z*.C7rW,Ye@c^hn,<2J(EpmUuhY9/^bU+^['Z?fKS#rn(C0JOAu27
%Y[1YKF+1<3,'H28%\:$)`HnGgjOAApX[Xg<'T'o9[?3Oq`^o7CQG8__AY3UnS)7aF>62^n@.4!GoA%MBq<`4]kZQiJkD-HcTm$.$
%/Em^0Cuh)FdG&nbdG'!>+ocZaet[db^bi9UqTIm<ks?EQHF8LI`cI/@hR5)?GHb?f^+K"9c>ObYiIb/1`;iV52nSIP6DN9HA3-&A
%m^W"/D*EsL>-5!`3<Pi/]n\q_rSZ)0&'rJ$a.L/EH#Rn7li'BBTQZXUqtdDhYjlD3X9LYqqc)YM\(eshDtZ+?j\kU5*DEg5^aX\h
%-urWtC;4`2GJqWc@!k0i<DUBe0f+oc1b6^Bht_M@$Z+q"]=Hb[q0fm2X3+?pKm.sUHZD??HiAJt"k-Qhh)%)nhj8On(:LsGZ\/^s
%J#@OU]DEo5&pDI[K6oOP#SAc+XZEBr59.1J6i\0r-9R@>rB@aANHT#M^\S3Aq<BQ1pq,8k*^:8Y?-VagXg\Xs`iC"%G6=?$(S<pA
%\m/PlnU#ACYW9GT;XO4ff,+#&B206<oeBLseYhE_R_Sjan=eW_qL061]`tHbo[pcsj)tpI4`TbBjX63En*I[\DLX1b<Ve"F`uDWE
%%>"u[#BY"/EDLcQV34oTjjq9X&MUp$J$KW8XTE=L/G?O-*W5R;7eoqi)hkC6FF0Qk98`tDH3HfaSV(WaD;4pn?DSg?De^1oTN]q'
%f&Kis_U@GeFWC-19o,Q-VU9@]4dmP*\jfD%)JnmGc2&)@#A6Dd!,/^"e*J5%Y@njKi8`WK/Gbp++",9@j)pmNAPAqVOR(C!r=*).
%d>0^YqruPPLiSR$>f@Kd&XX_3'?9Y(e>7Bo=ss!!\uie*.@6[E76F;kld=a[I5D'*U:r^/'-dP\pl.ZO3P@j_Pq:n2BZM$5)?=1>
%SgU@Q&#[6.'M=K%dQhF+C<6'])V(BZ8RkRY,D(uJ6j"-4>[\OUmg_47k=ThtU(q/o7+0WV@jugGX-USVjMk(FjG78<,dLM"O]XnY
%12@IM-].bSE/m=eTfKo:94%7Z1i\^B'G69h.pAZ478c+6"JbJD71@cl@9AT7c4_c2C'heR.T3^q#tsEF/KBlLVMD$&/p<"`8/,+;
%fik:hm_O\M,%2-\'2).I&W^Wd?oP[9R"hAh>`#;_Bo:"/Z(*<NN[/;N#+(LYC"i`s6:O*kZc9QiZ&e*;iso`;rFr@K^#r;+aW?"W
%q<!fH`bAPBCZT`#Nh8ZEr;:rXUZM4,4E&%aluZ`GirC?V0+'4[lG$M).j+EWn#roU4#\4FhRn2M>j_+L397oo_hq_('0EfTV(jI>
%Jfs$'PtSConuLr!E>LskHQS#SIkV<`9<N`r.d+IngWq9d8YYj-&t5Klb`Sa`V'EbMr5j0?SgJq`cgA17?K_$.RqJQ&>7VO6=.:m<
%Gs,Cl2d+Mq]f9G"1MhNqs.4R?aR;M_i)tXiO>UOPR)IM^Lu`=Doe'eYT:YEcT69RO*B$BI5Q/6_HiE`h#JIRt$`=s"Qh?@K;7Aq7
%,)]7M.+?9JbB,GDM'D`%R1>6(jm17ckJa2th7\T'SW=niV=+SQ)gLeqNs!KC"]1'R/QM@R"B?VCl2pEp0?_=QD\!27DrTa@dFlAk
%7,mqYd,a^u<):&/CZ>J_j$6A[gj@;l(J"@f4:%fURgT*QGnBKm>q0CU+E9WG@lu@b0Ah,NApEE#rX/2VbI`Il#O`$2)il)CBRTuQ
%0I_rPPt7KA5ln:Q3.F_#DW`IR!+tnA@F8RX$,.0OCF(G6JnZiL6$FA#M2tYFk@sN^S?4&8'oSpIC&N;X:oZZ,Im&#r(,t*nU\sAi
%P)D6Ch=.lYa*i*jhPXdbQ'q=2X5_Om#@t6Y)q7JP'e-aaD\sr3p1<X:.J5t!]Vo;Fr8mPK>NJb`s4(B\cN4`1[ADUg56eF)odp,X
%B-"4%J+c4\-2R'HEj&g9]dXcde]`_Lk1b)"'^4$FiJt8;r9uhom0Cf\mYB7qKp,:k<ZXB[3&iV_of3CBbWa@FDEiY6AEP@AhA%RS
%IEA+mO)E;J,LB9o_c`t02'$cr09G<<7TX?-1:9lP#%t\mC88W.fiJ]U]W$9;1[N<Xe`ZC>6H4@m,Dd4_ceRAHm2PQW;9)slI3X^H
%n7])qektpse:f7th*,g>Hj03YV?)J,>hJM2%aNbdqWdCY=f]R*o&e3IU]/QJh#?W^HZTC+V3RoVrj;+0MOlFj[X,1Q&iRr#UJZ3&
%7I;9V[YM_Q4e3pHYu_p?`idD=.3A?Y]i^99fF6;@CGDd0`uiM!G+,Jn,6-RbGl7R4rJO$L;OkO+Vliftj)/"gSDQ@e0dM1u04oED
%bNgZ3^7@_WCL>jJ[gK^V#pQm,rk7,95('iNDFf'iT7Hk/V#KI+;RNPA\5@XLc0<tQ*1aj65C<3n-Xr2SIf<p9qZ+"[m?SgK(IqO)
%0pY"f-?8q6pAiCm.rW0]<f`gn*j;c[.kb#".@6]b%cJSAn?o+ei[G=S3HO$%=Y*QuY6mDiYZe-#^YGO`6epB>]g8l,I(m@D1L>Z\
%e(iX^kP+%\l+h"]/fsBrO%N(4m=()!k<>3343`*S;3W]9*\X%8FU`93m_]iZEr0),W/Ml_5P`1ef+ut"b@*WEZhs7`9&iQ`"H7hW
%h[XprF*dHiKP'O6`%7NeQOd+m*Y-K\55p!8Cd,Ra7/QtZ>*#j1bPJd-nGG8hT"\@U0]7&WJ,B+`H*JCH)n<Zn[l3&eJB6X-MI.pt
%RqL"Yn`IgT#P!'#jnn`$o8m6G:,f"m13h?`IsI6C>4(hV5SKtQ+-qg[pu-,$:`$%?rF1KBS&)5BEL4BuelQ1lC2+('`o_k(d:URs
%lFW+M4N6^Cmf*(W!<H'Hh!,XnO1)[d/*2JBGTu!]'ODL14Gb7P/J`,]lGqmrFa#5%^NFl>\Gt[A%IbXgX7G8V-X5QY:Z\1.Nh^Xh
%UF_5UF0YT>G4);RI-\*l=3e,ULm&bO08t'RDkl6=>e>3,i;eRZX`X@-_g-:/74g(C^N4b*HuSB]B$u4jK28<shg/9PUg>>E7^$p$
%^V@:arP8;tgY]be,9\^92PY9$FH'#<`g/A$&N4QBT10+/dp(p#mPBNWl^R@c`MIu(<B\lY_p_k)5:=A)j3[gp56Eb6cEJW0W^A:Y
%%2I*`mObo6p7nkZOU#UMPLK34a6.C4c'EE`a;FUJl.t4&]`7unl_fe-q0.VQWj,-gX5gt55`=;kq<$r($cl%7D-I%[H5lhC1T]1\
%J/WdD+FX"r`WN<Hi5Q.HC\Q]SoQ&:8Z^O>D8'bPlMRBd0.C$<M0`!FuO(2t,9QL$r$+Eklg58b9pVDd]2mR/VZY&asIUaPVqV#(&
%kF/NB<7N"N)qpohGu8h]WVHDeg-ZUj\Zb^mb9_>==C0,:hD?d3]*OF)s.O[:c99I2Kl^#$;3g:\"`)WC\H`96]ShM%>C=/1ZS8%A
%CJ4VspZ6OqG6!S?*L:X!?Xf,[^;_4f$QA)S"_E&o`/tMj55,l^W<?2gb:dHpDLGrL_-AQFDP#t,P><iLQ&@`YHf]s&+7.5+qXM.`
%s5:piWC%mVcuJ8<>E_(XGH6gXT;V!jbLq50VSOU'2R)?B$(@*kMjehT2!6OS?^DP?LS)teYf&/s_TV0rI3:_(&hh!A1!SQUhS"-?
%:LdW`'R-2"0X6(uCS/8P:T7>>cq1>[:t\L+4X'dO2Squ<cp3&j`QI&W-VQW<2Eh?g2lD))I;c1a)+7m22MEQ*o2Vl1(UGbjeh#d.
%/=,#OqtHBZKLYqBA/ac.g-T)ILXe>0>>[M0SP0A(jbbF'H$/B6OAu7S+$ZqLPo$'2KJo;k?=/,lKbp0lg`E%/WLVBO2imQC2hQ$L
%!4Dgu>cV?#DePTKhHE@N^3[>RgZuUt01I(s;qsKNFMWgqcS-fLSi0%5lh3Y)3\#BbZF3uiY&2u5c>sY4"C_19[<1&M\ie=ld[Rc2
%rggNj99l]M2tLYmmL8X=;*a^5`B.IO_`F);0N>-%36_VKdD6eC!&'u$rsfY:jpT@qId>d;=2*-JYNPk5*g.++aK<s_R[br6?r"&)
%B)^PoSb:uSm1mA3UA/PEZ&CcWRqaT-f;tK>`)Q$Xft:aj*ZEXJ%1@&rK\O%;6g7gt]t/\i713D"Sh\tZ5O8'6c&WfZ___J4QKnIl
%M_Bkao%,P_)+p>6*>S?W9@KY^54/X(ON&e[/3'OL_-O]X/0<V-^En3PH]Q;Sc0Rf5R`:\jA)KoP^0LL)?k53+*XqVZ]@ZTr8FS,i
%s6e]daPK,$`$6(7FF/6f!b/jfb.I?7]luDnc_#Xb?EC>Y\X?jZ=!)h`d5b<l:CkFeiQF;sql0Y]CBt7!e#2;[hWO"kqVD!sEfVpb
%d7hum"5\?Pq':IsQSp`c"T+f`L\nWk`FF@p&R2QnJdmAQOm,bE9=(H_*2/qR_TBj+n)`?MqYA9W\)0rH&r$,+_VJ\/:cU,aD`k,D
%26Tt4I5oq3Ta7$K-FMP0h;9`X];jqDjm5\mS89Sup/p[/OS`CW4tINI3SJ=u"_#L.j^PccgBN_MIkQ;_]!e\MQGe#IlT>Au\(BN@
%`Q(mij1`*mkP*+09=:&EZ"5uhebr^@baNp_F1^hAYN#*HH`+,b:sB1nS\MeF<Ef6h^B*0HZZp,LkQMIl;Zh@&Io\[Z=5O1hHi/!G
%rPA;21741BN?Gnu1.#;:(De0E7:.\)&tN*"T0Q*B":Y"qms."PJ$morWEKt=GA7XSAR@*U(YBpBf<9@aMU-/[3>WX,U\>I@^)uIX
%8X(%"jN=F;qrKm]Na'Jtp?)Z[BGt(Les8NB?qGWnURs^LP'd2e?B>^!4QLIj<:/T@'"iVWm>'QHZdnW_d[QN?K[E'^V=k'WDNF@r
%E-tQtMd-$7c-S2j`C@$/^&&?OZ+MW:DS3_qnLH?u/'f\`[U]4Kan@4jN46uS2\sP3dGI?;'4apXDeG!S*o,cKeBQk;;Y>".L0;b7
%%6M1I#J#>7;;>?L5lOohYC9XBkOo;S!&E"AADn&cnLR25SZA+;"fd-d`SBbTlK?cEg"P4o`QuSsh:u=XrLk)<m)Dd0'X=nI#U_sg
%;YeVXep2Z6.XU2NLhA`$Gh+hiqoeFm\>:.fq1g?">30pPr3c^nI>Z>Obd0Xr`lG]f#PY:VMpC_O(:egAUMuhk^2S6/P(D5?)d$u`
%@,Cp1r-*5jE:Rnn,!A8;nG_:Xb)cCB^Y*Cm2s\#*)i;Vk1cjuB@\\)"m.Ra8G!EQ*b1r&jffIC9CRKq7MB!,_@s_Nr7F1j5*AY8"
%P5'TP3%a&mTQ#k)XZ&i!%2nH5ZLOF]r!^<r<eg7-PMlf'3lH7;dB,6I<u]u6R.9WV[TZ'5T[L&7n\<p3!g,*W4FiHL!6tW;HlY@s
%&XRutmgRG!YBU$)n!Cpu&T?M[#`X;m?dIZb2h:jj@8:DroC9/NWVm8BGQ7XMT7p#N6pJSDoPI51\YUoJ?d,pQOXLY?(+YB0(#V?\
%dQ2:"n*WL:<oZ\un"au1?WhYXC"8[FcDZ)N&R[c-4Yc0Cb$41g6DIaJ[?&-WDRP!nRZ6%:MQGsPp^AmeJ1$F[<kQ71gBLgtg7;9X
%ZWjCdqVAZ(FDpn]COGHp5E4k5+Qg335dS^9"!9MnWaEST'Vo*I>)ZXp1M5T+`KspU$N%ekj49G?VXmH*VdGqLbIu?HfTfXP^IYL!
%rG50?fSg<=g.nJC3U;^8Cm6S2:%3#+GTadK?#Gh6XS2j\eP*]?Dl=h%d"p]Y+3,9tp8`q4V)G.J^]1n&2tlkNY8A9sC&J'"l[)dl
%&RK(;"^Y5_BQ&<H$bHCpjB9e4(g'k3i=!4%?s].GP%.PtK=JW"dQ;ma(^-P%!D("Y&0YrBo=7+WLbAlXLm1SD+M[OH/9:sCbnu4r
%Ib*UqBafb&&E:<Y)6osXMVu?tAJSXB3WSfYgh.hJ[<WA_9-)-I!(q0gr7ujnIOo]u=<Ij=AYnlQiBhpTr##OK^uGb*I.]H!*%$(;
%nF7gc*+(5>%H=P_ODZ&qJuo4ZSdEH`pgH'[>R!aW8d'+ZF(53543.Um$EI$c"i4esE8e\o1)kt!DW9WUc`=trJM5S#TYm^n03hj-
%_o%!P+\o!!Mh-D,.'OG1_b^BDM\1reGr<O*U$3ple',Z*L2g@"m-%I!!gh2!c4rb*gPHYs54b0DK"NdR-BLCo!NHA1$1TGK"S"H*
%!]u->k&EOJXH4\*I,3&dfC6Z7JM.agKn7`id,`,HO,!bAcOC"08ch3Y(*Z/f^f?Hr0W>]:K`OccpS^sIKaK"@:BJ$/iATL#OR[ji
%nN[Wg3U>&o][0RWTt(.WjuHZIIGm_].>b6(-A^j^"Msi">7a4;BP%>IiW[%;ab>S5DVW\k+@/h/#[L4UTEOnLk)t([/rfoT7_\Yh
%V]^F:R?99>3<FNDEO@fgSg2`uU$%O0"bBf?%m1cT#su<6O+hlp^dt>1%eiQKKu7R=0EPn:0+8Qr@2=6kX[3sBTpp$u8n:(do1;nR
%,*s[F%8kOR7[)NMJ/aMX#E6S]l*gYVVBA3?D.Zq4A3Ch:IYPK07UWo]&BlRNl`2JW:sZD9MhElkF<0Wo:nAA036Hl3ejC)o^rM>2
%NZnm[bmf%:1I*3!)WJ:i9L;!p9h,Wq]k!Xqf<BcX\cM)RYHq%X!oN:&&/'4EI6pT'$PnPRg@R*prBfX]Hg^KUAN3d2gZWEVM9r[/
%!.Y+j<:p?cKN+82Y8b#[<AGAmDtQ`Z@U-:W1.A%4)G`$q+9BL#42t#!."7t?6JE7ekPucd_i2-)6@ni7#0$k%ao],)A#M&F?o!g[
%D*7d<aHMo$cst5Xaj;m98a</4B]ffT`Riq!__k9%/p62Z8eV]M!#>]r]^T4_0a;r1TM-uer!31?1ZWbE;ZTJZ"(PUVa`VD3HAmf>
%-Oju;3[+^'1u=$29$\[t8MC-p0/:]D#S;5a,(].$#l7^-3LU<9M_J$9MW'^U`SaU%V]>m1eFbY:!nR`0MiQ;Oapc<%#DK`M9GjoJ
%T/aS=4qV4\pr"<^L9N8fM23nk=j\(AYKV,Z!FsY")"1'B&A`91JP6`O#meO<1:mVFAZnG-(hfTm;9fB&&d*:Nk--SD7KYAWh=:7p
%a5SPqT7[#8/oDL[k1IIo='I9VN?%Q=E"$63cqe$kJLj1m`dXKr$%usrgpDZI98+O@$YDl$<FDE[eHOZb60BoB$\ig\%ulB!@0G4e
%J3]&BodW9t_34:]!),2[e1iW_!%(!$ptu@1G2b-s&GG]M%!>8q##QC+_!^M2!FdS`;7Qd`:(R]pNkV:8`o'Qf1Z*=4`".Cq#tTlq
%diB/W&e2c-jM;*5H8RoX!\p8U^uGtX$j<jSJIkli'-\p,%58P9bQA?k'iENU9n\H'>`?s%#\o_MHthS>oX+[MJCh_3JPY*('_!:H
%qgm!%V6jG]N3"k$\a,A?30(%R$N?Rl@0U28>6u8bk`LOYD?[W8(kPm\^c^H!!$hF]OQ`b0heu2'7@L#QJh-PCPMg_^J.b0\7jY7p
%0r56:,mH7S"S>&()g%?_'GO.^#XDY:FWBQfF-&d$Hb1Va'dtd:EID\s0S^ADApP3mHV&&>=cER(d<]U=m1BEqL[O:aJRSn?&Cf<o
%"/N(B!$"K!",.0iLMK6sXHtWs;$2s>?qY/YW<EOr%;A/deZoUO20FO_$#L6L"@:(^qbl-["=,trr;g[91^JMI2Zl5)_DO\Hect4-
%74:iUTTUK!L4NtO8qK/M]=cLlg]nRP+XV6/.]u6+ahX>W7#"`M9+[;8LWD?,U1D,mD(1jp)DM4$5VJ62^8n*H_)r>Y!R\%[.t+SB
%%-1ijDAG2[%0<=33fFFkH'$7%?q3g\L#"9m,8_m!8?TbTl`l.9"U2o<;Rc4j)::GuTe%mbka^.R.qKJ?<G$dbPHLdjK5&/i;EiBC
%i0FF"7p@$0P":iDD=.KK$mI!n2OL29;EKHkNl[)EA;nbQ-A#?+;%g8KNs-BAn+s3;87I]20MWA'Ol2OY2T>dK(U`0?Moj<S!!'O2
%;h**?>@,,@C4uPF!Akl75[RruEC"H/=hL)HpXZ>d"907e??i.akZBMh#\>F(dLd^tP`mUTACAB<R6MU)][DN0YN2#Ef\lW6oG\SX
%,L+:?]3`o=OVe89.;s"B6idcRk(5^Zo%DH79e'-59j(Hm-7Wpo[Vqo2N,.X1Aqg`$lWAjDl3OqNkIYmn%OnIK@cX2<J'9d,Y4b\R
%q*Hk*H'X@T&GJ;$q'[0r4"1Q;]p'F0fPX<<:!ub`l?mL7AE]rt"]kuQ"lU9=-L=Q3'8]<,:GekN'XO;EeXcWR`+.M*;9dUlNk?*,
%?Wgc55^-dj/:Wq<P/C1jW/-BR97aaOa$OTfk_Da%Ki$a=J`X7p/1tFuf0Zbs*Y,\3K_igs)o%*":dp\i,:QKpI2$gXXM@CmD'@BB
%Mhi-08`rMS1,kIYnm8=kC`FA(YD]u4,r<`bV0q@=Lj5F!3&$fT1SL''?mLS[W<.,eVA/uudPj3A6I%OXa`oOGr\^N\FCR_SK\I\2
%PpT@c6lZkIO4hc3@2Ddi-kt-t/r%<YN5RtLKmE<&KPr!#jj&UBi+dodRh&lBLlT^n,0(@9XSg+-S[0RMV&;rRZ7YQ37ADUhmZep9
%opBS*nWM(+dMej*'+&H1mRV1ti;OL0FcZm@"sdH]nOQR%*0HU&Mj:05LHJIdmHAYB3N<Fhe6!rHb,OZO-70F_+b?#;)a3)BVPbf0
%<^;CZ.tLY88p*I%%Y227SlJ.[;?Vt3AM=aSL+'\?`D&2EnjZFmBFsRd'"ufW%GE/N,C4?b]*9@-.U5^3c+-drg)a+2!Ah)P2EBK]
%"G/.I!e3qGNFd7G950$#hp=1Nl@pE$Y4%e;49b:C,?Pec<0^][&X@6R.h4k=:@GFJm%J:Z\?D\GjTq`S!!a_bC:ZqEC(THPgi*G?
%.lI\2!k:2<=$mWP&Qr1P2@PA\+k*+H>V0J)RseX0gW---'Jb@j[O0DpV5%!QFKq"3PBh^L(q(,X7]^Z^^'O7WUCi%f@64r9#,Y-+
%\X0Ue!9KfOG^('BKco*t%kR)YBm6$U(^V`f=^`!PciVB=@cAP^4;R&N7L%4j7NP^DW9D[`fao>$&g/afGf'*4ToL(4C++b?lopbN
%\0,`b6D_kA\/6SMq6r$MqLCC@`#PaAg1m@S&i$['$lURIn0ru4)+qO+W9=p('I"8TKhO>A)Q'Jgio5eTl?!"@)*Ogm+]UFqOob>A
%"@:%Ep2WO-/BE7c<9ekN,0!6goo*4HF!W8/):IV[cPf*`g@lbo%KS26+9F8d4U[=t:_eXV+Y4Yg73_tX75af"!H,8#DDaf7EEQ8[
%o6g[#-;FhcMcI)WlG+O<itr%68e`uo`H&*b6:p.+RB?b:YjOjFU^2rGEqGl:hjU'<kXE,o>qM[(,l<>/%MLQ=@d:26i/e6(#Dn31
%6<\!&1foRu0kT2Z"N?KI#,[prTbKAKWa[!AmXg$$YmOP?>(0rom\eaW@Nh=O;E>EYiRgsW.1X2#k[!l?d!-LBaLG<WkPhuuhjPYt
%[&chNB4EN4-o?*5K4A5)ahKQGpJYYjT`>rP,XDQ++=k99GU%deFq2BBPgSoV6t8T>-'Is6Cm/8pTHOc>,/2S=U3\sBmHM+jT"$TB
%dsF+]KLjNKdt1mM831A-[&ntRJ9,S+beB,'i!+fjIKNZ/+Jt/VR@P?"8UnP=+OjtoZ*m!,;rr),[?H-.Xdp:G#n!gFib^R\(2rVC
%:p[d/W5A3Y[(V)7-fF.:M;I/6W&he'G'F^`4`-[&M[)O739FUA`#a_A,QAm6C?@:X-V!tlaR.>5Y/Tc!+I"s.TH/qq1MucWlib=B
%k`$X:JKu'XE2s40T#XPo!cbJ1en0sPNAYfCjKGGS^N$m9:UAmB3k1/Y$MV-7juNO_=sipiFZ#7b4>3TQ(=gqH`'&0>K^*:XEe5]@
%o<]2>XL+?o&*ms9dbB43qu_Mf4N\!MW@&r&_O#F%4<NgV+OOg)EICn9V5C?V3Z-:k-;)4^)M3@-Gj)H%%>r>D(0$XNe7_/V(mWWb
%>0`'LH<T\uXJT^,5]nqNJP5kS)5?DNhE[Td,[jFLMBJnmHZ`U'$1+*a^F?3,;!J^3\unLroM*_el=q*UWiIG><**!@WBjKb;]sDV
%ERKOu7$kO@0"5\3W%&aT_A^gURqRQaCIf6hFA/6k)q*c<FC;Os*"iu.pOeHi`Ng\413c-aoK8FQ(lOfbX<@l)KjKY>X<A/AS;H=2
%Z:;23V5Xc/AaQ5#>Uaje`t`<eZ:<=O>YSp2=ehsMTsUf#&X8!d`9<mt[b3=.ar2FY-PI/Y22&P'1;R'q6NRIp.F4_Z';8EO_%q'!
%M!&ci)0!iabd_D]\AjmriFj]V,R:#]<elqt":8\#fMZ9t#RRY'khhbCqr;_a.h"9fFrn4nj>hJ!c#VQO$()IkH:Z/>"XB_'Qb"m5
%Q+W>?2Ju;d'6!6"YWa\+K4U!VE<4](,(dVqIrrJgBljOH:?YR[_t2gmo$e/*WhDucnL-m@>`s1Q1uOt)K4;LVTt+a_hMt'e#bob6
%2Ep'k<Ie[?$r"@&N":;'ORu4q-UJQ]+>aepI&-qFi].j7R%g'#V)nZt=J2!#6a7c2k6RoX$fn9\9rmhm/*fR$d+eG"rsVn72_ZA1
%Pm*j3?*6K;F[JNrd!,gM.>jq84r#U<*%#ZWLF04E>"_lc1(`Rb-%lji"32=25#U=5F$Pg/8n.n+^ngjRl6H?VmoXHnO;mRBHSPnH
%I4+=D7V=Y&C8Y[8B4=bqq_g8YQf_C5DSG>;4>9:5KYsaZoZ`eO8#Sk0_DS:mAe1=uqFIGD"Kpf>N/igMN'Mu7F0q!"09X6"UbCN`
%S@H@d`,RU:EQ>IGm&2So=<Wk;EA*17%6O('XqD"g]EQX'X'ccuaeU3qDos2r"2W>MNoR\lJ\XnD^maZtdTo-B",hC0$9V7$$67SR
%F<^#mXV`94a4qr5P<X^)C4hht["j39ZtlBUM8u-OMFFLuXq3'32M^@A="*p!;HTbB,+fRk;A50QiU8l9_#fh60qgkfFQ>2X#Z$i#
%7iK#"$F;<!ijPWl6N?3Sdl3"J4=-5n36!Ip(srpD1j&:cU3'aLHKHKE,.t^u77Ve-isLXY1m6XP">kpPDNX--PaDWc@3@p5RCgg#
%H[8AqL;Z83#/Ff11,>PCg(7#4`,CtsAouiD7TB:>d%QE6)oIp4GhN3igtX.=$)BS6m4fn;%'>'o)#FHiMBM&LH]gAFA!-tK9P^p;
%"e3Y?e^s?8?7_GWe5C'?0r0aB6[5KNbtoQS1OQ>=&YF>@(a8N+B@:<%(eT@[d1)r@/+$i`,VbEW#mZV8ZE`\&B@I?d_E]7(p<!$,
%HW95&0&[bEji\c-Bb2bHkF.h_<D80meLO'khJXqmH"kDma=Tq<NC+9fPl`Nc\H%jUL3IKK""hVh!!HPd\_dT%99DVMe^b_cPIU&b
%.4^d-f1s0o'F`QU4Q^,o4CMh>#$n*b-^ALg1h(bW0T`T*9Op;m4K=Jc"SCRk01A5?6h&)Sa^*BE5]PE'&#g`Hbe5)AH<(0ZTui=B
%V@)#_FbGnM5bPR'o"^o5iPGDN&E6<"DHGn&f`BdA2-E'W]b'9#Ng6!PA?mJJiU&r)ko#/aO^rJ`[Nf]92fh$)@ZS)u!QuT/+;V3W
%YO@u#+qdt@iDbRQE7*TWrB\8XTm.B6:tW%7S,6n:`&%bZ3ll?l3GhJ-ZaYt(;ISbmoQ.pch@Qn^C'C%sH+i5Z[>R\s3*Mu.d0\#D
%X7%IR+OlqV`q?m"j#f.W^S$:b+;hPd6=^KM^HgSiZ']\L*cB&u8XW.,>q]BcZq_f;[:$6&VMa=[[4K%!d@s4f/u"k->:gK:ZqdFP
%RMW=pT!9,e8-G_O(H?b!q>$"_35!aR3.Q+LO,5Y4(<fPQ(g7b?$5b.DK-O\S+oI>q[[1TE)n\-OkV?;%.U.M0:qLq.Z6_j9^sjd3
%Cl':3cWfV=,n:2PNlKu+/J78;-X`ljl+'>+qm<rt]%PFi@&'JLhDf4fJV1u%4n<dPdW=sP;U>,O<OP;g-d5FA.U+*QWMnL7/T"<h
%[^;^=CoKm^c;\6*P%G/u/R][nip(Up7[G\="\3-KOb6"p'Bf@n.g7eeAp?O4FS@:$/J/[PF6g!.=qYV`kfsQnEKQ$-\W`;YQ57QA
%=sfqB[8\941K)b$JP9<_Wg8Gm'BTd";mf#llZi7_.9.r3jQY*LY$*#?HKJJ(WEKq>FQB@#Q3[P+1Nu4+P*.4*BECMJcOp[s+k'Fa
%"GO^/2=%7gaes,&<4!q)HfeQW'eM*(b1/&u\>#8ZO@VL!RTW'PS6A=ib*o%N/Vol8'Y'<)>dd4,W+\c40p@TdU*YsG#T_g2rW)MC
%n7$qq3r@]aBGUElPK@E3<#2=)-#o8A7i?ErP-i-umDJ=EYKd/kd;fL!Y!cst2ceJa1fZEp8j!>sO@a99g9C?3+@:M6j?RfBcZ?>u
%j!K^.hLBH]q2Q_jl:aLLRHKrFOcBNi/oIC%O?!f,:_?-]H;^t'S=,=k\Z2j21R\"t+@95<Da4O/&`i^lWs>2*!W/We7P*:!!X\.]
%k`ZJZ'$+YH2COp=YX.D:TEV_]ZO&j=hJ"t!3Y5slomo@0M9nA7"V1_[&KMW-<n7KW#qF1S83.<<+I<s-5mIH'jLaQ!QT5VU(hF17
%j*<nC^gtGqiA!Q-3X[2$WQtYjPWLuEBILbhN,Sk9A]W70#Dp_.,1,oiONmqPLmp)`NWUIn7/*1=j+%E#gtWfD`rQbdW5=BO%VULS
%j+%opAr+J]rV&cJj,dtOF0634\\BkEG#K^5T#;hGH!HCo%d80=qJ*>_WfI6+e-ujWn2MOW5[R7VLqBcK+BOh*lSp"R=^7Z9o73D;
%)6.WG4&UQh/$G8C&cd$J4#0bka:\P1"!%XM*amoD4h-5mJfP+:EsDji#Xf5&,li!/cj%Go!g?GA&;VI\1U`j_D@trNZf>U,B-:/E
%F"\s_J\rcqNWIOY5Qkf5BcRIIBFmS@De%`B#lkGe&P<Y/_SM=l#V)#IC"qGL1WF@S*ll_5$?I=$TqUe@1^d*t+_t4op&XDC+G)_r
%4OD(f#UB^sbaEm#+:t5!1H.qSJO!Ct0?e;j*XK\1#NiiY_EpU,U=+<P"M)qj:6>UO)\2X`!;apRV$4sYL8OmMb$+iY;;p)r#UGi/
%c(Pl+^CLp3\VGo7"Blr67%auh-N\!9cQ)8G,Cq[%2g%$",`n<>9N@48";82?&_\p:$gH@f9dWf%M&PBVJ_?nEZ,92:\QM<B#UEF2
%B%r4R";2+8YonH;E/7f0>1iBbO0#j*NiW5sZYhJl:^7qSA\(&HW#^8eK+3eN":c=DC)25&qJK#8Kj+#BQFjC;3#$*fTn+r%[cH>5
%\%AX1FrqChjPq73=9;Wa49ltt?pg\6JIo0H"22oWT^YJpJfr1C:\o?#AG@4P:C3bUpu$6\OXTu#Pa+^6Mo*ita+G]#+VNp2T]Z\:
%F(PqW"b]))C2@uHp]-EE%R01ZTj/ocp>F>no+FiG5`kX6T\K!N1WOt$"+p/.A`cs"&nI"+>0ofH#Wl`@@iKs;k5m663>\VbPBcEr
%K(PJ-pfJX?\P,-\5nQ0Jj9Ggu?LlJS`$..oQM"ri+01q*_]KH.UEedp<$25c_ioq#=MRZorrGCs=XG3jJ\YsrNK+1:m"LHR#HI8q
%TEVW]"kq<o:Bq('C3o^q%pcLuLTWd8HUQR:R/.`A;`Vir7.iEt]3gC"5p1tDk"/7H^4oE3j+EDE5cF"9qa+81N?6DVB9XB/1]pO+
%5bR/jO+Zrk;,a%uCfOi[LK(Op#=<\-'Y2-q+V82P>5\DGH^e&/Q=N'rrh08.)+oO.naDO4FQl(M7l9j/d'"$Z4s;1,hk6YSqY0Qg
%bfmt6ml7^NgtM3o<)r'QO4YNAk2uASAmf\A1U%mu);+_m*Ekl6)h'\.jP+^$A_3cRJIULu:6ct&NV6HmJkPZB@RKt$Hn#U,BU$R&
%&D2lq:?<W![<S\^i?3&J4/$+m,BPCI+ja_Y#^gQXQ@ZG<Cb3_R.MKXP8Z+T]J6K8Z]kq4G4j82O'S5?qku9-!W9(9b6tXQL;m?Tu
%B4bR>e[]C41CG-/pXN3U#d/T^#XpJQ4WTkn,#irX8jH%/<+c%f>M/Ggq6=HuAg'Hu'G(WkB,uB:/\eDMQAsfXUf6(T0&Q;T,=nd3
%TlL:F,P]\!,k5:?="J1?ggSdFD.*M]B[%g/YSBp^f8k/_JU>T<7[6'L;Rp_YlBM?t)&66jY\I0K#BEmqSPZ,pLNRH^!bL'2npj3J
%>$8->;*\E._^ak"0*q5dPKMEuBL0lK?X[!G)MTFY?1Q>YZL1@JR`sEmT\5%"!6nu[7dbD+/-O<tr0'CiE<W`KW<gGH2LTbILt!$[
%d5b%j@Z]/MIR%N1qb]^hj;RT&2fD8k91L8,Fa6S-Z$u&lF`C;Gc"*nJ$5V9G_P)[',NaCsKP)1SOZ`Jc7Wn<O?>f!j.:Km#g7qKi
%rc-)<<<ri0YF2m$.YTG9iC<CM],f%QjEEl"mkS7FD?=P._WF<m0B"\SW/Leofg@H3lC+8?C9s_=4SAP]%1PSQ<2@kdZ@\8X7S*^T
%+TY#gl0J\IQpTs$RPk&I:&WbL1Q,'9"(c0k/<_8lUYZ+:SD,#HFP^UsIpT8Lc2E$"\\p>=;_M!M9.]Bgo^m-8/I-T2,)@%\i[c$:
%FIj2h"P@M@fYUe%2/Ua&KdsNkqPOpKX:ZJkX[*Y3HQ5#oY-c_ERtsQ#WhdmK`.W`Z<ec;#6NE+QA,KLW17QfRC<0]CUPOX]?dhDd
%!21"L1l1L##7V+hZY.<2MkF]#^D#pVKNt2HL,4_a&'e*=TpVZ+68:%`gKW=K<'*:qCQ>MhU0_n/oe"o33"iLm_sZZeOUhHX&RAi*
%d]f_h/b8s"#seJa9SO0C/N[d'7&KPXW]P#B[OG$%Q<V?Te7TT0<O;uOR!&W%qT(IuP_ijFVZ+Y/T1Sh?d<fS*^N9$RR`O(-/#b)i
%1RVr08W6M<'cAAKP_L[]H(]RfV;8So'1fAhn.E\LLfK!liV=t("lF+QEJB:g.I\m(-p3I?9<82ZUgT*HI$X:qVf?_.*R6>@#Sabc
%/l'fk91!Sl3rElR[jFY(]/N"\I6/j]@\u>h+<uqdD=DD>S&6F#^UgJa,UI%r0:KD$TMg0S&IC%J"Q-6@OW;D5W6f7pgH)P]oZ_26
%Fc":DitN#!Qh>!"&d`l)6`mXWlTElkkk6FAqY+G[GX,oIJ^m((:^(!pW;:6;2;6ZJB'*g%T7YX%0$4Zj)k\Oce`#>8irnZ\G1IDF
%8p.miCHI+K-2J:-eT>jOb4oKBVQhsEHk`07=<7YbRF/Ac/"2ESLW3kf6Bbt^1fO_<b%JnYaHb9HFB\*8XiDqjZcGa@4\75[kh#/t
%Q5u<mkbfJ01PBm1W&a<WV6(RHc**%;*+Q(`IWHLkW`VT^OC`@,3Jurs(\<t57*_qUo/%$OA1SG._0Ep.Xuf#]p('5-;?7.=N$OBd
%9b1J.PWg^ci9!YHZ%V@>%)4C5UlMNQZQ#;HF.fbj_E,W;@m"r7)HEb%d3Xu+)Bdk#KV89ai[Snhcf-5dX>`Hog;C-YGCCosM3a+<
%CW2*DZ/LlP*ujpKV/]bp.<eYG7N]/9b(d@]=Qh<%VqPPV/K("FC&Z=Y#8G).ZGk1_Ko*TMTfEW(fSn)pN-c%$oeh];B3TcuG49e1
%=ND3qOQY%6:f&BWM?%K0A<D^96(KJcYd&tdo\>ER!hrJ%XXt!31"f/i6_eVgWeuak8!oV#dLq$FPr[*&N4T=A5.1L,WbEMf.A8s7
%%*bdhFMt&,KR,B=aW/J"i<M'/CMID0a>bsR96BG$Jdg..6Zo=@Jt>cR9d/_s9BXUBI;-TR&<sLH`VmdX9Xquh$!O_:fXc%L"QiY0
%%;&^KM`BV+683'RMG6DC']KT=(prkO5jQ^GjQn'eO$^W^aq3dC6OOE+6j?'iS/TpU@@+t?6SLl*@;0D!)5+i-#-0RMN_:9V`-t76
%:mQDq$];K*HSfNXAs'=*68,k%$RYd!K^+kXLG9=\KGI[og"Vs<C0%\25jN=$&B0U0W'sq-c3%&PcK]3H5:IEEp":n-MW(r?p%J9+
%"u*Lm84k5.FS&!&PfHO8Y]_lAd9i2@G>&V3BKf/'_>:+&5'q!u`nFFUD'd-L/E-M2lb[Sfk\"ECWoT"teu3maQ;1RiD9>gTBjZ'\
%M/Ib*'O.L`$)C_AL4RDGD.8&Y5TFaiU"49a8=s2BeP63DD/JLk"pBeGPB-+qmdCQCm,*XY>e1u@6&Uu9)u2b4$)*%0AI0tTcfLbU
%H8?,uSWR%Q4/#cQ/>=u)=%n>$bb\-_[VC`1SH7,P8Z9I>"=Rs.;QrCQk#FZM((rV8pfT'#j^Hj]3kY\'Q?-4M]]U2][g03\L3_AX
%/0kD1J6h:P,uXPT'#0kbHdMfNkY)a)e'["6%&I:;_q]f4a]KiGG:k[,C\\@kjS[FO$P6uf2D@RhT[iC8QU)oq[=fX7'f"C:?)qM0
%?@@uZ$-CVV>?lLT-qe&!>dN+\S:;@P#&Lhp#nS\/%1(@!=SNSS2mT,i)Z*R@V+\Z\<9P[<+JXb^aMNabC,V.&FGH<cj=t'!,ZM7`
%"HJ`PW(QX>)9mli;8rI1U/@2ToO^kgd8c#RbeZ45(QnnD#.:G9!Vlq[pUN^69c#9q+P?R*+A77KO#3YXEC$GV/n?1<Mc&Ol&(IDo
%[c!gG8tE1'gpLh(qUUXp6'8dH7$2q.KrGJ-gVtN"P-tMK)]Kco?)IkK]W,$:rO0pWPqp9oq"L7\f)iSfUmJO56d8Hp6[H.fmk.*K
%e7$=m.'tc_j\\l?*5o:'laVg:=Gd;F%G]&c9iV0,e1K!\)d6+1%T%#N8+aRulHtLZjetKo_F#knYD+<`c>J1J4d0&1cD3Kr!g8*0
%.*V2*1g?D$!:<%:$?A*ndi(t%-uOM;g4#VjfI==X9[>W+/]+=j8N&bW:pHeLd;Vgq4LnRqRq%RY!gHuiM&1rLhU-Mo/fDV#BU_?l
%.L]IqfZ_92:jVW!YM[!U^Qjb&AeMHjl1NH8EB>lgiNPdUeJPidkT=;oX\uOl".)J5Fui1>X]T@7<q-An\s3mZl/7A3>2@GGAss^i
%Acp#!_cRh(h-s+3:=ecD!1`7o6cbegdT"R<qaVZ-j"q6`jsul+H)hr+`58,6qQK9_e<=[]gQ2J@KVQLqG9%jgBQ^f.g]PTo]Vmc4
%$5Sdh9:9slCTsPE1tE?IS$J)_-h)^i?RJV7PB0oh.(e"(m>o[%o*ecXf`dr%'TCn9gR);kBAJ:]FIT=,L789.8VCLMo?mS[TVjUD
%o\Q)'n]kgiQi..<-rt#:VUK?QYqE=<:^"akP\ulpPS4iGe#kB4EahI[ZE5?K:.0Vo1sFb7+5/Wull?.T(4Q.#1B/Ru,W9^a;,1@m
%WRgTXbDDKBXmY:=#3o;U1rVkDCanlS9h5CBGKL/E7(b_N&7uRgdCN?#?u-tuZcf4WMNioV+LA4h+V>gIXZ*<eM$TD=Q=ir1&IUA=
%D7=(E"Q[dM&e_I@+Z(ht@b$+aq6uHA9p<MJ/L4BX:7l(872%Bdo+mdR=D<\,?:H2N/q&ioc]H8)-WFWp$?=Vo'd=lSl?3NQQ4YXC
%5Ek"n7RW0M?qK9#qB8=E4!.0bXC.gn1^kOD`NfUp+X1eX>)_[2&@(lF:lu;$8f1:&'aYIV(3U?tP7VMocFtY4&JR&r9GRpH5u5H`
%6R5(lPH82N7k,[V'5=j02^0DG>[PS\Lm>iR[@oAW&KeZ6iZ]Ls13Rk&Oo-[kFig,>FlfsLqsAq_XDUlJ+sLJ@Vu=IJ&M#D&X`tG_
%ZJUq8P:7\.B^F't,%?9&YW%b$@RXjb@^VFK,?E;XZ:Nq+,?@iuZ7mrSLk*(%F:oJ]"Do%H5eW-?:m2Il9l"`$1?*o<9_Bq]<][[I
%(D7O[r'=l3MG/Q]rQ)EpBmStA:I2=&Cc5f-e+WNoN;1WFD[M?Yb/ZYdM(L!95aoZ,;Fok_25_U/6j3-?o,)?_&Y49T=TCH5=]L5/
%,D,YIX2Mba7.SI`77<ZrC?%]M`*$sN[Oi]o*18NZ7)[7%B-n3f7Qa!)<tA-'6t,&?Hs#H2F0_1]/L<0Ldca#n6la]m4"eAlfN0uC
%e!:W_l#M%h361PM]s#o1n(qM_7CKQ0[N[&!(1%kb9O,s2edH[0ME'd'<t[gHOamaq-YNmFca7^g0RDQ7p.d7#[o8V05IJX=?;Na\
%D]Q"ISj'nYSVOBm9"AkQ)a&K_rg.S5[V-9K'K4<WXBI`GUD_mf+jaSHY*<YPYVm;)6Nqu"^uFBA9?WVQRo!FXcq%Q25?8k5@u22;
%3P#*J"g'tYMm"F"_tG^s`X!4=al;:^1ul;0iSlpAn)ADeF6;HQ>5](U%_`BiruRM=7gI/C,LT)+S>Nl+)C.I5`PKT[[L@Y*n23ak
%B%YfI53u2&Na4^@Ya[^\;&je>iQTt@5D2".ZQdpTYTalqRYc\=^5?/4F39u-Y9GH2#Fs5[=4t[L<e)7*"7dKsL\`Oaklfd(\So_Z
%rg)r`'s#9/FJgQ+blKjWY/(W-k1?QGi9/WpDm$u.bKKDXT%+gql?J2Ui$I[_n*-r5Vu9@"rH5/DDI:llD5VM1nFX[?ESGsFFW@kV
%E/pF\J`AYcX.2L?dH33M7le(((LUlPEZc9s`ncW7/=4Uq9s!2&(JS^iUoLZScGCXRd7%B^fSc:hVC]3_fV%%@A@W`Ib`[O1kOrR`
%EBVY8FJA2\QU:ufX040=pOGBPFf8fRpqCL7Qn-[+h#lJL(Jl(eW@Ti<_1hTuFupm$/PJRb/m$fok/);hpbuBFk%;6XWG!3BZ<ahI
%2=%QR>uZTd0TF>#dC]&7(E`ebSAV4HOR4sEo3.Z=Z!B8P2=&#]h1knm40XBSpOGB\Ff7O5O,)ZUZ$iMnl".J0*a@\p"B1n8E%.,o
%f@7%_;FK[Q.pU$N;B1_-bH!>.PY&DTD`bNE=W,,_r$8if$s=Q9gMDOZOAM[(phYYUGVV[0</Iq457'"1g"K[,nC!=lj/)uPG\Mq[
%aDB-7?L"1.]^u2JGU_N^>,oN-Fr8WLG%[f:O81)34cD&U7td*"c;'l-j+1o%ABgY*6mafo?PEf"AJ*d06uV%\?p\G*edO2H%V1:\
%\3Cr&iMC1OqDY*U[BQSBilAE"Pm]84#WipSTq?qVfM:D%SR(R+P0NLENn=_t@^bdS"^2V@KpSsM.`'7r9%YPKANn,#G,k!+2"2VE
%M_@L/8De8A/\i&g>-.1C"INZcX-r?$_"@H@gsa_ZFt4=k*UB':rjW&(RE@@d6U(`+h4cbQ_A![8OALihAS+ndN%i4K"LHrVKP?4D
%_o,R^*!NGc[[g.T#Xbig593kM0<l`q43MK.aD2Bb+GS-g8XKe)1@pu'Qp.^i]qp22bkV`5IG)pAcF[D>f9`IbQ+l[o020rh[+lW<
%_Him@j;#Z4^;R6UP?1\"fT33ipFNAeV6<.Tc-M:chR`aXCJ"+miSa/m"BUg;b3'Mq:lpEfpf:AaO`.o9@@>8q5scf\&Ldh4NZnEf
%!]&;>7"Ca.n![./^-^HSk5e$Q&?6u!f0gOq*a0IoG0#!6TlP9-%YSj`p/DWeZ&jOH3LN3sp&GpfUL4aL)5"iF&STuQS1-</q7_!9
%0nh_0+B,J.kkqA!F]eop_!m8gY0(SWajbT-.L<ni>cPUKD'2IWX?_)3TI,f6@$tHC(JB4M[S91VLe.a&.9J'\oH_-i#9NO6Yl-N&
%oo3Caq/mAJ7BWk3KZQYe&hDa^^Bg\c1k98s,^YA3O?u0&qTg5m.5/(X:tJ_%U/W#d!6>49G%L8]'Ja%%]a+fhR$;iVnFnb8$UuGr
%R/f^02:Hq0LEHW:8/BXCO=$D>8=B;Y")8eW%]BaE(=uRiWT]r#19(Qe&>=a7\]&:d@AG7Lb$rsjOP9l5-fn,[aL-Z,d.>.@L4)cF
%_h#n.#lJSq<*:rtA!]5$3*Rd[+erGm?]n`JUK(W$-%J6-.ij7%%'jDRgh)gQNMXO@1^$:EW':RJ2BJsh5K&>VTl<\N^`[Mhqc`'K
%b'\uHG=1n>2`]q]/kWtc0^sYJgOlVFDF$4F&[b`b)O4DO!g'WZlqbIYH^,r5Su\E_Z!D>bA;O3[JtP5(OWW?[lJ?CqgokEAK$aL0
%ikHcKjEF2uq5#p`j4[@J^$CX)3:5<(FPDS7oX(M$#ihh]P7&qQ/njshfQ"eM.DH=RRi>P!f\J9G)"S\E;7^'U*GiB^.n$!.mNBFA
%\&iq-MEQ=:CiCP>ABS60jjm:L?AKI_<:209&Tet4T!24=WfhO(^lI:1mO?0GPLS[WE/<'g?q5R^NnT_^?!,Hfh303sI<*gB%:lSF
%N%.9K4/C<I.BK-ZEXp9WUfbhk#jYl]*P\Lp3H\'5U1jJPMh2E(A77s]pW4&#4$<5i\.[jO/1At72Bk6!hB8_)WQ?N_Nu3$AP&e!t
%8#`'-f]>LKJN-$D_Ak%C't>%uR=,_o2.`$XW+>\pMDjp/IP4,lW\GXT,fG>P>?#&O<j9mI>4L;S(H%WsJZ/!7o.]jUWk14AqI&:Q
%e9.O7TqNWKo8%3^%QQQ]-7iHZ.`GE",n'5J6T#cgF&^:QBVu'h?4c@2boK6$*KkX"OqSZD35JZ*-1uj_%DS9_#s_e?BJd3Ol#+R-
%l;hU!86tBuT?&E>"(Yt8Xf!nI%6](ZEKOAM*;.o!]?Wk_ZT@pIZs=8e^S_ORa`H@,/tM<Pd\Wol/IaV:#Z2o0itoNk6k4+_eRVN>
%'O0-LiR(#[$L3pf48]`sQ,\S6*V+gn"r:B'L+smmOI1l(<3IR!/m<M&BG`0o0g&+UEp5)am5L7l!l?FVj?Hd`=YR1tLFlI6p6MOa
%d;N3'm0p)PPBe3WPZBZ6"B1arK?#"n*kqb4'Gh(@_1L$%")Y>r-_E[(pouoITUXC"pa(`:rH15R"j@QLMMe&>%05E0]nf<'fG'/P
%R6HN6/OZUj&:ni-U\%ek>11,nY^Ai!(:Z0O\H%cQXF%V`:_HYHeKaWmS#1nlYYg&$><qTABBm0Ukhb!>U41/[6`[%SH!(J8s#P^e
%W`XjEa%6T7F[en3W(18GAaX$d@6KW+9n$4Q!^4m<+RfNXFI#i:0:,UZ+@Gtc[YMf,3#r&p8i0!TV(=Q@A;^H,!n-Uk[A?SV"f$#:
%![WP%3tQQ#QZs%IB'e%rF1mdV<3t"EMpaEh#16o3<`g;(.+p(G-qc2mJB>2F^"JlEB>OV@.NC:6-%[kuY7E!Q\>;22%[c6h`B8mK
%W_V+=is<JS=HWt#;*q<ERtrO]BrFVhp69-GkK!2Fh^$cSAfAf(m(t$Gb7WA-(9'M"]=?!oG%'G1MYZ4;+51Ac\GkG%Wa9R^$[G8U
%/9tqg!C6p--8.q50U*:^j;4Y/4>#UeM[;]Yib\IM-:sH]&X4o4Y)"GZ^h1kn%5iZ8A;s2g`MRj+g/BS;MZAj%3;KRFL$dE=UE[!'
%[M1Xd=>##e>?1TqUc,g'8$g?5.Q_f*N(;sT:s1pp0(h:Q(WmBs=jD%2+,ZQjO)&PGD'ncVGURT'4.Sen4=Y@ZR3a@M9l;Wk3#X.Y
%9l<4=)9UO/aUMk;HIF!75Lo,a3$aC$NY@37#Y!K,nTnRd.Vl%*2c-[.A4u3-K68r/)V1D_e<$^&B563=;D@^OXi?@*N?G7@SIe`[
%*%5PAhDCZBF/j6T_.I_uWH";k$<sOM@Hu7i,H>a9AMT7IWZJXb`W)5#;NY/k`=mOdbCTFf\aL';MIhk3@>IG,+s7T16/fXRN2jr.
%(B$-/&Aee&^5`.[O$h3:X""gN*p:=+O*`4uH[8rm<c'fmYUU>kO)p]RE?JuHD:s4T8NPT(Vg9?6V"S=]F6R[8UX"#`$=?5>pip>a
%-uZjh?l_.JH&_cG%IWs!It8r(l+Jb^s'Z]]'fh$hMVJN6,0*cQdR6M6^Y#=P4]CDqZ"g2+MB!u#SW3o;asQt`*f"m*bn!,EK;ehc
%3NQmQ/o-=a(-X\=a400F)b*QiBaaBLhX\[TF6gJdQh*u'o6"+2?QO9;Wu2LPhnK5tT$XnLX@:h9K\pBF/X+Eq-X+VLD]2i<2)Dg'
%H:-=OU_Y7:0o@YY</36`fG#"\_XdC6Z#%NK=u=NcVTK;1eb6\5U,\9&2GG_k8FFFILJ<)Q(`ede%!h&h#&^Wa6ro@_-dS/DHj3Gp
%F3,BMOpjm#:o"lT_GmXRAdRJ5lAWF`IPL>GKYA6Ef@`R7lkV1-5)9@4/X,M)d&[#$)C1BOAL#h?N[TJdp+^J-(;btVN@[+hU]O8t
%MTjPOQol2F1]q6R@7DRl:q_n8$)q3XAe*T;UaQ#OaaN&\+"?*PO2O9gU%2$%!W"*M$r'T`URkD+A@\GmJlkPb-MrfSHLLugOVP(,
%#us>0QJRI^]q@N?kFhPQDZcQ?L$]3aD.uGF8aggHbco$<\B0ZcVl5Y3Gn]BN_nskM,\\Ds#==66(mS(H7klWD@+1u.'Kh=8S+'@.
%lt&!-f&1Q#"/dj5fJYK6,r6-M+m/l_UmYSW<>S%U!!p9U0VMukeX8057kmF1:N`TJ.7f\qE+OpH$BLF]:p<0*lEH6>)sh;Fe'*)N
%CWYBCZ.OcMD\TE*X-oYo*G=Bd5krkIlIohGN:J(nat]is1S?''kpnYR^f,!a:6_'P)mH$4r'F"3HOk7[M);Bd*J+NO(:<\N@d(rB
%)PW\)N*V3t+P%U8[lM;Q@SJ0NB:?,X"9fU2e=,s\^*t\&Q*a-!nqi\+`[9s*#$Gb@<Cb*58V,4[/La^1.S$[a@d@-8$<bW";>Ss!
%KPfo6%Z*5hfL2ar;4'+Q^q4>.$`cKs=m-`n]V1!8Octf8K/N(`H<egA;FD+iXm>]a<)E_6(A;d2Xa=u'1@34s^<%#+$8eUXh.^n7
%:+#o28rCF72tU8[=[FlpQ=PoE+>+>Mdr(s<jo[G1:&A'^Mo9@YSl*X.noQ[UF<\g4:^nbJ7r:U]Zmbr'Oc'J(1(+N]V1A2=*<3LE
%S&rVar"QAQ'15,G#srXTrA(oRmX.r*qc<C,1DaF@-G9OK)S1G".7u^`[\T-g-[\bQ!`*P?S`gEW=@SVR7*p$Vdo_>i1YG5uq/=Xk
%,QGpoeg)6?7[l_s3=eV:frKE8''#Yti[JOmcNho)Wd4dZed4oB&e.WE7?fR<E`$RR110#\VAYDl3iI$Hk;47niW7,@P&;>!J)a'(
%1\VQF[2H;`5E'<Tqc*_`X^-?N;fj;S``?)0l8-PuSRts'BYY'*R;nA*#>0AH78ObG*@I`1H9gQm8ng7sI\MaiiljId\B;9R3\HP3
%Z&j3jj7;,:M?,bRX^@hIJ.k>_g0jUk#`:?=[3!@bfs8n=%pV[OQB#r'Laqh)D!B:d!AW\;-8VLoah#QZoP/U,,-h+JW$IRsfjk[k
%m>@,FL-=7s=kF[6ScFc*oR^4LNC'siOac_jS[g6=bt)(d["G_fZ.q\PYjM=3%GbJI^5c4e^B1`P)Esfcg,3nfoEIhS^+(YSLc2da
%Rb\jC'+Lf:?C&06-Z/q,,FK.MbB44MFu*_fA78k1V[!,c+42ZXX\B&j=W$=63t5^,5Vp!GI5mn2I0h(\%>eOY(<"4?IR'S:'=bn-
%-O=i)9=AIBFdL;3!P!Dmhe?+CYKX"j3hO0m:-Ag(VTc&=>E9W^"V-6/!4)#?cml'?=""H[`$4E@-g3'WJ*Z:Z$uToOH"ZPNq,Zoh
%6N+Q-iE$=cTmmAP_UP6^`Cjl-!SXg_"=D'1!M[?g2[MBIpG\a*gN:dQ4:B98`m[3J^A<:a&BN(CkYE`.:S>A3LdiX4!U;a)0gJnB
%1krQPXLBG$=fV>?3hdu7:1L\^_2=297&rUNV)2dmWC[4i;cR8G-WGuknBupp$k!7V>qG03Np/lM`?^^^>2Lt&NAA1473Rsr:pe5N
%8h-(@`3Nl"Y:qmF:uBYOMmIPq2hbJ$%KZjOcBCqf)Ou)M(+haTUaf#HbI%%(6Ss8V:\.&]Her0BdAB'^)Ts)f*^@UeooJnle`'1o
%h2>Qbd7nMg/\/;>$*bA1m[^p3T_+$OlD[)@dRZs0s.Gi\(BTGgHK^+qoi18-*Z1]EWOr_%>TAr3dWp,+9mZ,9J#=Z+1.hkOY/*Jb
%nCVKMZaT?Mg/B^XM;R2&IAdclMj$]"(14okY<V*q?F*s$,d5/E;N#OO/J>%XU]]S>bYf@.fRtEb67*VmA:iVcE=WMm!BODiE%TQg
%!OTcrSStL84?sLM*IZL8emanW8%2%*5#RR$eR3U^.*Z;KenjIkqYV#];4/T,'J:**(sATa-!R=qUHTWl/907f%i/?LKL25Uk79/_
%OPlpQ-4)Ao-IF/PEYOKMJFYO<;Tc8tZ`0=CAqEYVME2Do;p#VIM.8bsTWsUA_R!oFRt9cjrpFrHZmI8+U+8l*T`W[C&;jSCestf6
%8$dl*0Pe%\$A[@L[WA.^Bf:k*$_\J5P4*-a,!!rI9XdC&_KLT@G'd$sOJ8246@9JMWYTEQ"6Y]H%u=Yn65[,sRHW7sTiio^Ko;<o
%5cIseCk;s#:am0(<O>.!d$DOflNaBO@AYOHNs%:+<hV[gK@&06#H,1RAYalgM[5\:i@S3^i5A>7LM`r1fVM#WY50:n'Nr1n3\3rI
%E]_q)H8nG30SGTb!tffrG.9T65_ZUX`#*TdNmrq\co;Re>D_R&jS^mQ]Qnr!5YG-aQ%Jh-/!P9F_]1/.Nr?S8qpTj1EX$<`YiJZl
%I&o9/ULm8j:A_7;@:YSKR^od-4M\i2//om1M$(XV9@$r/1-1(oNF^UJ**MX=V.6a)pb7$9F-pYZ0a'g0k-%lL+:8FS%KpXdSt$^E
%6n?Jb'i_lp^eiN"`V2GbD(0k`UBT'X?^Gs>@a.NSq_"iECt*:biY5\D7PQ]JL#5p5HIpoEf=p^01/5$A.EMT!X]h_pW9L\-$5p_j
%WLX6F/@HY%O=Us3WRdHJKh\@.%PnBN/rYj*%e?kJnPOM@hD<[+G<138G8ri(`KeN,1KuH:KYBsI%YP`iUWfo=IDaCSpYJh4k:8j<
%rIWYc*9m[T@uaoh:/cLgn'.98e(cgqA*ur?nbBa2#O4Ml9psJ*ro)3Pod#@1Rq<_m&BG_-R%HCTGo`W\9X*<kI;d[[C"7YT/m&M$
%<3Ch7rZ*Vf^%G8l9Y\P<5T0fhMPZ0JSd!9c*&i/AprF.@F%9W45[(Q`6V?^1PsLQ>0P1:J]$JT5Q)fl0dI%4C+V18'>i%\[kWq!%
%[]L*ITl@d.pk[qH.:&:[TRu<_J=?$F.\"[`\nW]BS0j>j\C-\Ng%E`,JiR%m=NRdiF%:U*r[J%po@VZlqch'82JBP6I0VXrJT-,*
%O?eV"J9!NYRXOJI,*mM(#K[<^I'F%qQ;\=1%m'An&(I6)VZUo0beDQU289ej\?o=ZUfYB^/s>@bD%.MN<&k9=";7Z/e5NWG/@_@G
%_'ndZbsecE_,PT+Y5;);\fp:ir!rlE_j3]Eq!-<CLnqg(U4`5WhXU2a@"MHM8\H>O,U&"d*18W]ZN=gGE:jF-$BUpdC4Y_R:(SdL
%m*W%k>#ndk[oG6I_AgUhS_GE*d\[^@;msSO.mS0RV?nWek@TeE;3mb48c$N8$msP$ptu,][D&k1Tl:"u:l]]'.9U+1[kDfqDNKY+
%LV2BJ%Rjk\JLm(','d(ZA6q3J2!F+WAelSbT7Y(e9fcs9OI39lbjY^e5G4kX'1CR-i[8S\.1qc>(W`>:Sj8R2jC0ULC$nlj.f3WZ
%Tg<`q!nmNLV6-a0BkjNU_q!&/cP@&$']SY&EFeKo=5W=gbLKP_=-f5l?S]S=bf)m?;bqD@\EaXTRhJj6!4uVQ68;[A5ZHo0QD0E\
%`eOn#J9'C)>L\qBeA^jmK?Q+cP]7TID51<c<3NUlX]CA%R]7enVC:("!uDo)bBJ8D+pgH8_Tg&KB5$5HG-lJMoh*<>/@1HNOiCFh
%k\o=?M1^QJZgLbK*RVn"#ZBs\$l27CbjJiRTeKj%]Pp3jhq56'K2b3BdLIIkT2=a*c+i6#j`KtILbHB%8sahA-k8&lAdEUqAGRmH
%O+=129%b(UUD[0'csrZ?klOJWneMgg!3qWMW3,?5#J*;7AU]&d%rB:Rp(J<47f`3i7a*$`;_P"rF*6?-9_H!YiR,Z9IHntC#T_'H
%*,QT8O\/Kc"JK63<@jOX26OE"(?M@oY#45n"*Z%6<dFMcf.[3Yj1a[gCBTI,Y'uRRMRX3s?*HlcW\oMtQKX@XYgIZ$'YC]h-^pg@
%h5m>+#?lr-8D:^lTe.9VPc3L]ZF71eKRMuf;Xoit`]T64B7&uQr7U`>V[66e/*UN:9!C-K[Q=uk%;BWg7*0R:(AF`#AGU+5=`"op
%VHI`^Ce[\8CC-VpC)*i\e/eAno!h9BD_*c4?hXXjWO]FQ9d23`G@scY9Aoe.6*jQ8"?O)"W:Q$YqLF;Gae<N7C0^h.PLh:A:ob2*
%+S:99<.Ue3I,J$UOO7MU%G6</g).aU)1==`"qCs[[$M6(M1>M!BOTt*-j\X")[Oe0$8i+"J6K9T=@,iiB9tfb.fd\\8Em_INO?5%
%Oj[p\dn4>*WAn/f_I?Ua!)gG($\%E0J8CKk/uO91iJ(YaKiRdI.R92o_Yfph,*D<@"A?i8"]@ro?eIKbjTLPpGb7k0!<H2C8tt*6
%P\7Ttkg;%@m+L'ESk9\A_sC8SQ6cY'L4n%#8i]Ps+04Z$ph.m^Tka:X-1RlS(`*Unh%)i7PbtWSS]V+p@a=rc`njT\*Cj^1a[\8&
%60tYLms#P$N.G?-W2NsT8o!@70n%AC7+.6R!Td4j;*0s.!(h_L'Hr8":Z>pNG!MhV$4k6^?"dZc*@sIV1uG&3`S<sr-3rcBB;lP`
%%)gsf_%gn38TlIQDAO4O";0sX7*Q.20t_EM0l],34AA$:`'/'2WSabgLI2WY\sk5@m!bL&fV5mSolp(<^n6GNQ!d+Qf-W'@=^-74
%TM7L7*=`l@,]OIT<"2!d)WYasdU-Jl4u[FO.%7lQ#]Idne]7-EfPE@/fl2O1SfLj0LE3N;K!JR*'<dZK))E2g.XE/4.k6!h8&A#\
%4lk\2<Xc:)VD+e]K@M`E69qe4LZg4q@6)^jXMK$?ls7c,k-0rj=c@a4&ULi/WnqYpLP_sX>jU`=id#08bl"T?Qm)]'<Zoe#K*iCd
%l\mm,,=2osrG,BinFQ4apV_iR]eS=rGkongm_K"]'X'bTp,p+_k.KU9G'Vc,NFG[OV6B'9fVni4@]:GN(iCm]lmi[fWZrnn4=/RL
%.%tibCq)kSDR>3,C+9$gYkaa(&Vh/nTA.h[[2DA#]X*kp=s=Ft71e'-G9<Q7!0n-rm7@+Ua^(,a'Nh=7ojVJc+Ls%2CpRYOGlaR@
%,ngX*!jFpB?Jl;rbU:F/K*"(h_06?f9R)Q&:7_*?FsqSh7'Lo((*NN[J/D;9O&>J>J[TAF0Z-d[A;Q;VFTJ;S%!<&iJb@-h.nZoo
%G&Ru4p63@&$)I!*AbAXqN7mR'1(4Xqj3JI;H9`eB,Y%$=_aKmPJpdahfnc:<3K:QH_,)/*?K;b!lHmudI3SET-hNu+p:$L6Q%U%c
%Q4(?nX@"!i:$aJE^IB6-I=CY0V0Ji3\R4j=`Vo5@8)+f^5ei$!DnS1"GIgm_[Pa4"A=pp7\.BVPhjgO!p/dnsZ`3;A.V#dk^7*t3
%*XPl2d*?Gc+m@(<6%II)'I!RM9oO%p%t$:?6)d9kPKtRDs!K<66U$tNrEmPHT1qisgKC%P`f4eH+L"uKEu-D^5+<,\T8I-c5cQOt
%iNs)8XS+nB=&"M%TZDA;H=#o6j0`-\dLTZRRatV+n_/Y71)HYR>->18UilcZ2e1.q[0_t4D0sWmD!_l%m?5Vt[B3T=M"02PYl@c%
%0Y/OsN[Cr(M#*0E[PDHa&;ZO*A$u][r&&e4lQF5a&+jsAT?.#g8UY6(VYmP#9l*V/+[T,u,h_K(Yt)ct'i`c\'XX;m<KVV9,aie-
%ebSaL+jM"ujYM8-6?A-0$c.a(Efsl\U/Q\c"4G=f#4Yha#a]cS(egr\5m@o4-)'-j;C39]g'AKu,X2Q5B!6g)pe\*,8/mSEL?)b-
%Z\H>Q1\6C7cBKkJ2"P@l)'SU5$<E\S1j62>kVYSP`O8a-"6"#Q+8'#@)%OjVjh\?HAXJ/R<a[%k>=_mejbI_K2#WAEU:?+u#C`F_
%N/(4@7eO\5g/1s@TVaKaJ;m*mUnZ\p1aRNbdMN6Y58@2e$j)/lJ&%f";B^u/YoeLN,fq5CF)'/=/6,R?RHZdul6_I?/tXDS3Y+Up
%YLHOs_i2ZETFJ2u>?qJl2=_/-)eBhZA'G12<=N!MMkb;gBmlC?+r65unsCc[/Zt?!7'\U]F6KNr>&s^j4aJPbiaF<LVF_@rRT>,`
%FpTM8g<;Iar@SILem_N,WL4-b/<fECn9>Z4eo=5HDW]h!+3l]?>&6sap)t;F[[ZN)Xu4EZ8u?E<ENo^,Qhm8!ji]K347@JA:1&2`
%@*\dUZ\%&'>tjo$7/KL=o77s;go`:q`m,APNLr7j\mL!UnYs?k?[t26oAc0FQ*NC4.:%Q%ps6!Z^NHH_f2]f(^O>K\FXF3t*uLe[
%3i[$U/IHFKZ%dAmVu.hh:]J(Pj1Qa`=Y%S,s.D"MAnfJ7T%t];m+_+nDbg.gBm8re?'i;uM0W(pr!fc2fUqmS$b7X>B<dX5/>o*C
%(U#"gaW!\>$c6q^+;t"0N>H7?Um>:NSt2M\Y042#YbHNp<t3rGNP/VP6[l8ZI&<>-(riQZMKB!`29=RJkq<Nd,.+MTW];d:U7fpk
%JpN5@`4S(*UQFTe#7n'/rNK;Dh[@RU1^ZO+j=2T=X\"ri_1[[\.$'G5*$Ptm+MMe)*Fjs7,'B7da;-al9A5I[s-kiRC+RK!=kjT[
%eZqOO<F;JP)9nog\!(85,bc\6lg2e=_^lV+Wd[ZN.LSR_..e1GQH9%p\91P;9QG28&B;Khi`.D+-bM8AdV,gn@i`fd6/)F;Wj%Zs
%,!jV"JE:TdS0gRN)I&+-0XRYiBi(*";Lj_+FEI*k,#_6'RZ\j\Z>W!GXG-b[TIqM2%@u%*^o2e174MUJa<!f=H5qR98*Mi<ZqKb6
%)LDP^>aNa]"?Y4r%6\f6'A_<g=-,]JZ3K;fDp/YBDRIh!0'95c$8Wb8Tdt<5e]1!0![ZkqaAj/Ti.TR\Z&52l772SYNXhh;J/%Aa
%82;2ak7D3,U`Th48tCmjfiNPGZH0$"K/*j8p6*]E_hF'*@1kYO;*E1V`&qmGkcmr01Q+MjZZuZWQ,QO>![DA##X`mI&e-u/TW2QL
%DUT17B%ci(0$&`]XPokR8lZaMY;W8C'K7&cqj/Es.S;b#_ti();Q.\)m_N-@3JZ#t"PlAT*be*P24"-DdlW0O/G:CK0upnp'hBGt
%J2.CFBL/9F]h=*glkW>p=ckoRfm=F_*VGA5<B2%TE.Yk1;_[X!@-^9`=uX_YWAL!/lmd$`3iQ=-(4]55"k."+&0S=\ahm[NFVsFN
%K"pUo-31XM<(+3HEJDLf<&3iaa]>)YC%2ZYBp3CQUT0rq(6WN(neh3\"m2<;bO:b8h-LmZ]5q8--^U.43V=k=RSMV47&S1RTLQjI
%_3RboD2A-Zom`u*7&i).==:(-jG-_7DrWY_3ikJH;%=-X1jdW:QQc>)cp4oT'qbsS)G_bm,(:)FLs?8lpF/Mt9/@mC8i@"gj\7[;
%2@>a8LOf5Y2&n<3l0;6bdBiuBLV<h\!-^PS$,TR`MER7N2jIk\U1hj1nbB@P=4f5Np[BI7Qa-2#Eo93r.lLo$<>5Z4gsO(aBP=uY
%QZYt>WN![3;1K+sW&gq&q3X<E]"Y.XXWY!(-r\G$rY8D\N)-N2,-=o*-k;C&$>Xt`@>fM41i%%f4]1[mj7^JlVtR785!A;6@V[h2
%3trMD>hYP&enUf5GZ-nQjjnD>5I;=63k@FcG6o<oc1=#8:AUO8kf[]lgc)$&$PC!N35C*FGk/ZQh/T0p177!=WbV%t&p/\$cdrd^
%gD$P-70-&DM?kE]pH9BeN7E5t8;\jA+;1q&KiC-.GQXb.*;/6cYe*<A0NBLd0UK)ijjl0_'&FVF`#^q+#Dc8ekZidq'>m4eA9$ND
%6V&Ohg-dH$?RWW3T)_f&lS5hPc)eOL6<CnT[='UW+bn5Y_6LS97,"@m3\Jp-QG9,Il#!,H:eQ-bI28-hYM%u_K]rBmmLB&=e.lTA
%=d-L,gr5lJ@,bu:L"([o@7>Cd.N<[?]&W9J>ka7GIV"q'eilR2#i3[2-P/R?Ms#:b+>l#7$;sMt/t8^N!D:3sUTqXA$ct"'Wn*iC
%&>qm+I:E_a@Ft`&et@]T?])OS61D1uOX4*i/bJPm&[:"AcSL0I$kaoO5a_P;BYdb-Q*M'<MW,Fn=#q>+fMngj$b=.2JB=]%Fml"k
%iuls>*MOpL[8`2q.%30_<QH_alCClZlI-YMR'^+p?DH6qkY+VLIbr"i2dUs24Xbg#*[Iili,_N\FR;*4SIYim5+\1%m7Zp4I5_\\
%.l#els'YR24RT[gE`^n5`h2.5F38E[+DLX5&L8p0rj2k7ke<B(PLGlVP":@=A@&1$1^;-`+UtiA%OO=MmTAb2PG<OnT?c4IL/]B0
%:6#Z6".UR(m+k*^7$!&OX8Nr@1CQGBR;G:2'RP@85Z89r(DrXHGgnAek[`<<PZLfn)Q9PjN+(p)"PAAF+J,=KYYc.WI5-p!12=6>
%2"7.IHr1pG9+]Z=8\RB>"kPYo33$s29Gk1_L>(4U3d(aqZ*>Upk&XrGVutA>I;.9q8j2kmg?"n^ILu0AU8f:L;$N!oh'##85G4]K
%XrGAcW@\dVmgH1MRa"J%et[paZ+%QYKm"V,7?E,BjT@b`M.nOZb'6%(:K2c6*54/HUuh'@QqYS8?*EIX,b5STASme8VM`*CI'R-<
%Bc6t!CpLnF@,.B\8soEmU-hF$Y2;`,H+Z]8rhQu)Pt$n5(J6dtXf-Xi],+WuC^3GQ"Z@=LYK+bJ3D>S"Aro@17>0^kZ%*V%hXBcW
%W^i09,%?')Ok5/iiHURB[N/+t$(\XEl)B(Co1I"i>$H"jk8p/;35J8!P:C-T;Y:n'&?'FQk+HjC-6a#G5`h]SR\$aFRrt37+34ct
%a_$REK+;TnXR?Dgd"/,`73pMH%&reMV,V0iNtN?qOYeR9>es3f4Z9]<Z(sA%&/>rM-PDUi.PYJa(:"9A$Y7]f&^&ZB7,*?Xj+QJI
%+8dYQW\E.@fKi$sY9X*`jcgs)0=K"92CjH=HM$,n;,o.#.%cR::!)R&R1`W+>g3?)oWYUjTEd[f#1^\S6]G:2lu]&@f]rRqQ%O,'
%Tops-+CqgJUD,mjjLm\rPZZ1`]d]>&cFb;@]/5-XIFtM$)-D%tK%PXZjkF*9)qh%;7.&M.f>@,lhcnn.`fR6e?E#`)hXsLt]o3Y-
%H8m+?Yd3J8LGkC3:+-js+9bUT]:buj'YV?,l:D.LdDRrj"b"RUQ3sRp9F@FJQVL>44W=`tTP78kPU4%3#,3p`+R+Buf0R:S1ikSH
%6dc<kMup(V1IhR[a^:e9m6n&rhA7U.AX!eWYFMRV]`IA&o+=A19/m'R#LJ5)]\J]T2g9ag%f\^up",KsQL.-4dAC+`;!1Kpp*S1X
%(E-/umScqri5/2Yl;_:-TKq_AJFYT,!OS]*<g"3r/U65_A`*t!,aiFZY[Tt&&8Po?KTFP"4AY"a9>U=Oi1`gMq2_ms@3Sa?-)$lN
%dg;fC?:$a1VKT(un6li9[$ELiBLd5KrfEJ72`j>Ek-(N3[p4;0m260%QU;QYrB,HqROV9\Uo33^[u*sLf4eMCnMC_%VTkIIG!UXn
%'ib<ULBornT$Y]f'+r"d.'&,nJ]@'[Z)m8qB,q=nPu+!^<:FE(@YW;6-Q,tmPn8:bkbk'ugXq(g='QO2o:okFmVY9mG9"4GmFJdL
%+s`nH.&q#lZ!t#6R?7Fr`%m("F9)J*9"9EWTu!hfL%ae*3gJB1Z"Jje0r:54&9D7B<-#>q'`W,[DV[\YV%$`\UgX-2O%5C/&cD1S
%4o-U@S5BTV)4d:A9,>HsY#P<[[4QP=0)!,_.B,UJT`#1`E/rq6R^Ce\L\NF''oV/"J_7Q5PhFGBPC'rP5c,BO8IKB.I5/kN*lA0l
%<4]eGKUZcU`e90Ig7l@Njp[MskWOIYEPDXH%(%;gCf1fHB^8VRcjgj;%S5SaJ=rt^O=3/Q6!V=)AWkh6FA84H"Xbg"Ag@XprRoS&
%[:eNk@7Ou=b-+SQHO"#^ZTr$S/]V/VZS74p]k8!\"<^`Ej.R;<F*r`%e?WTi$MoR))eV]inSb)a(K1dM(L2Pgd>L1!$EP#>U=E(&
%l<^\Rll,N&3hF)SBg.k;a"pm,D`rbJj_5\F<u2toY"$i3i4upDRE93JR4T3aJggdX%'f&_Kqu\CJ?fSCd2mskP&P;(/-DJ@-)5Yh
%l*Egc.R10!AB^E7nWCKQS]]R@X;e).V.2fe*;E3j(Cbkb:bQ(J[m53OQ5p<>O&k]ZYd*SR^(.-WT=6tR(Uu<T.M"I$b>b>05ZAAV
%8t(AY\kq!p8&>E]5EXS!`5I[(VTjj+VLk/S3l>+[Z\;<EjJ/BM)H)[ja>O)*=6kIB2ig=&,,HQ3;EulU9.RdL-#,)X5eC!%Ahj.\
%\pc,7(*QKFR07B^b10C\*8^g[J>FU[WbIP=f[HK?&+Nds1N;AN#h)*Hf.A/-1dpLi39Mni0<HT^R4A.M@P2u3VU!/4*"\!3^E5cr
%C_\SS=i<Qq6UOaHc;:S=;$FXRnP$jpP`'b^<Vj3&.Z"n7WnIQB_u&bY\c]qb`Mn?Hl5P1Y^A$bf]Q10b?gnKArU+Z"\1(a8ILDe*
%H?7s3e.9=U@:;muSCKYYOV7WYN2"'(cW#Zm<,]r?H);-MB0<NMW5fJW7SkoEXXq/=<R2gkCV,p'or+UX]@g5-+<$:LHQ>`L<><l"
%HBah0_FG9`SU,6"N*7c-X9M#0*O[cB9QkjX5S;!@Sr"XZC+Gsl]^^3$"I>&jV60B6>;F/S()H4*f+M#:).Cdn&1)8!eU+XKbprHV
%Z)k5&GK;9+M)K`4PujGP&;]S6a$:trg$=C"#+uo)7CcQ+.=[O<H4<cih)68KG<LF\:rZ3ai-U?CPSenG^C<s1Cm=eb]o"MfPThPX
%/gb7Ja)H1GZY`3?Q"(RpO(LGGb35/@l'ACS;pGKs%Y^&4F\/6,No/C1ZUSYr..i*FAWT3Z(+\$Go(EW(FGt_[N*\_o=j`.L?!BmM
%2;:hDqYo$HL>4,mV0k\`Wn^.CZ_ihePV1-#GV%]P(6;JXn!8CAFZ8M6;+fU?(u$;+BB\NLb2#_>qk;eFW#5>-Q97uf$WImDD-qlE
%Q7:NX;NWS0>c8+?pG5n;>,1i9'j:@l@GG[2>T+n]Xm=K#h-F<>_9,qq.L=!YMFKUfTmN=+OAa]:"bk+K`Y!>[J2L=K0iBPG*f"dm
%$)\I\%A\]22lAg.2/i`Xg0/qfB-X44R<f-Y;-$M?UL)r]M!U^o[bCo')fSM6TNs%AbN^Ldb.JOUl3Pscdaa6&jB'#]YgB6Jbhcpu
%Ha=quF1!U"/_['LrZi-C9seh5[k/:%UaO)nWGqLY^a96Cj@98)##L\h?PqMa@\IpJ"C4JZ0VD<;>TN#Zm@b\k'Def)?A<_Ps*HNF
%48gl3V&r1lJ?sanp:mUEl;/jI2RoLPUN#Kp-\ah"pZ>AdP/uH4G[BEZpL#LhMH?J._WSDbSG*tdDL;4\%h0jl4YO`CrAPs:B'4\-
%K9#2j;RURSiOL@&*A(&VGUYC+lH+./_pR15DqY:*o'':p@j+a>M6^C.H-)Z>2C.<c*h0B=A>.N.*`t%Y<N=`oaE!EjU1OO<\U]!T
%i4'6\+#/)%$Rf6!UMsHC3KAHZT!tk*Q]N:Hrr_p6f:g3(\MuTrT$+LHCuLPsF^(2!b`;"0V+lFUY1o=hDK]i+]1;q&eT5#,J&Sij
%"M2Esm@!8a"YA/J)@6#<>>PF4/i%RDXl8ERaM40UI2B'0*3a7j#.^mh*7m@#duf'Qs-lOPSXO'bQKF"158/:NA!%(FlL3DT7E2'%
%Q'fOo#_ndB;\m+l6425QI/"Eg,U_OYgTT7,037EbVYG7t3uHh.aCeqJ9Dp\$R&%&/MoZ#NO+'Npq*ah-_Uu;Yegr[^*/b;IN^\_l
%@o8DD:6%dBl84qdLC:!2M\<Q[(@`!ET$3#VCWhZt66_#6_?ipF(cO7FGSWC4b`(i3ZcI+^?q6<M7;QKh/gHrV#<C,i)5Uu.O9K%>
%ZUc?f+/44%:R3TA4c<"bZ4&AU/9\JR;?@KW,(alkl%@`sa:'eE"c?q)3D\bt7O5Oo-ge+4k&sFrJHr0BB9D/L6`74QMf:pPp>bit
%@e%]#9ul8BH+Bg_V=1D4=M5:frJLC;[NhltY6]5Cl/Gd_XN+-Q/Ug-c5u`QH?W!P(Q-Y>ffMOK)A4P*Rl&\'(.iiYHVh#H!Ab;E)
%^EPJ>ntT\,UbJ!,OH)aTJOT0gMdu:&'lGYt4*AmA^:qiThX0&KSJT;1gtLWm)h8(R=?;\8O1<a25fHu3^qW-s-.E*hE4h=9^-LKn
%-<sY8S(FU`m-!JXDdA.Y[GLEO2'4KjGcW^u+\7uR?fD/N/Pq_.d'(eB^rJ:=O$ti<&,L=?C)3JaNaI;L/fqHZOAp7QIRn+1^e1G@
%i:pTPR%\,Q69ok3oDMC2N-S1*Jf]Me"GQt](T'r<N^RFJ_C-'mn?1uM9k)]jg(6IKW)G`F/J1BiT+I<ff-_:q2BDDTP5k.XW\8T`
%fDHjXYG,,T-IY8r5VajX"0+BJV2AgAr00+LUa,?q5Wh9(,#MnUrK(&#@OF1UThSLm\&$2qW4&D#_T]>.[^d)j0GfD:Z;1]uBlV.F
%MhQ3LjM83Q5EoDTp^h+63m]:2h8A4YJr<@OP<J2+h(oAp4EYSl)ooG[7Po*e?Tuc5cCoAQ#4JJ^MFa5b0@7,`\V=g3.9Y!=KOL/E
%/4;*V4$4AO!N?A?B.&Ag=sM)h^_pX1D0/>XrcCcuNY'MAQ<cL=UHA`)U:]0hi&J!I^YHnt8[=fI#g&n\M6o+9#%Tu0Y>H.KMZR)V
%8@'se17Q.lE?!?Z//:--$s[PHr^]U,l69bE^fml.G_-l<T3Yo(P3sF"lOas^qo<7h11p`?`Vllm/hF@PK1DB0aCi:1<9jk-TB:T%
%_1SsFW8o:6^JVT]hpS[[D*[(hTGjOl1TO`T6Z#\bQ#Jnj9bMNl!]/9S@*5dL/k?VN1ct4^(8Vn5/;U_g&H(4$,Eq]O%'NIoI6h$o
%k_E-'+4O;NEDX$;r^O'E2'UFo!E2ZGg-?X+f',)0C,+@p"5d**4!YdW]#G^1%2=J./PAt;B_9R;Z2DuhPX]/S_knAU\687IcKPff
%6Z=#'(iSuoWC6.@Hp3f/2/hj4m-M'rdLuHRf%(?DG=&[kO=`43:<p))W$_S!%n!cQ&%"eA!=.,=j;V8X#t2+L6eelO=*TJJ*;ZW_
%4+J)\8(V:p10oY$7u,fc!V%Jb[\p!4\#!mON#sUW)c2hsBacReZq&8XOKP2O&WVDIN>8FIa?D0GpG1IjrA''E@Nn2(3qf`K5C8].
%*=iD:QDd$^VcRm*RW5>.O2in:V56#(IL=45g2]!EhBaQ+N9AL&e$;/5!e_M^4%K23Q8Wf=+,S6UUjdmB1[0"GqFKVmcdFob6k!KS
%-J*@mnm_/YMg77%M<l2#q5(&RJ7LH5s#"OqT^s)W>j=7_<TBoVF`-maU<5_)?h!B?Y!6p6,.[he]sR&;SNkIR+c.TP6(hr\ObNM?
%Kk>!JW6_&\C,V-/W/HqRo_h.X]<gb6)d'MgTSVOi."]>-UY)/.EAFll^n)X+N<#DF!Xm3T"X#q'dH:;,TijDkZ3\1o&48ai-BBd)
%64[PRl4-)N9QjZL;?IV8TbXXm">,8`6<38)<F)P<q45t30l^?"&(=l*a%H.8-DK4.M5PnrWj::e,>aI70XtSd2C",rW&s@+6%r[T
%hahWN\"76L\4=n![;k.GBXq!"D'/CoTGmJ4W#C.,aIWPjRbY2>A(,34.he(Pp_B)V5V7u[\ZB"8a,[G&23-/$W\o%s3o18.Bb6?_
%e^cZqIZWp)?je6ea%/m9`E091Z@`e^V;2^!:o4OGmA1AZ:U6mrr2qJ]?)q;R"JZ9tH-"#tFY'$n`;TJW<CiJ!en#@S<mOmL>A!eL
%go"Dd6Nc<GSj`sl]\)#/2"XOA7Jr1F6CB#a'Vj9\J"9E>,K5N.041HNr[V/ffZFMHGpNTLTB2uX'Nk_po"6\#*bt>&JPs9gPUVp^
%LIF/#+ehX^rLD5'Y]]hKoSm&$dZ_n2+g6MXAD1>qb0Cf<Wd-qK<WJ?.K;n";[P>)PUeCb?$!)<m3Hhh8'7"8AU1D`Hj76a*Ih24L
%][<F.<l2'+]mYl0<&<gcBHB=[iad[nbWK?HVKZ`d-.(%V-0-];=uST1Aa6TZS%cp\W4#K9l9JPQ\Y7L5n43^7_(OJsK76?)N8./,
%fE7sH%t4Um#nTrQFrjjajY!jMJUL':T4/Nn^&8M&l]AJ[DqDf0SQ>N5!q'cVnX\g&papPW;K8*_e;Tmdf,6`qM<LkaKp@+<l5P1Y
%^A$bf]MajI06h[#Ib-:i2oeS@DrUA8DpJ9?p"'s6I;9M.<G4KH`C<WFNA)[=L_m#Q]F/T2Au2#AU*!;+$oLC4odoflof5S5@GFE.
%;G>)gI'B-cJ7aaaTk1QWY[&OB8QbIo]*fP:(\VZ(8($98j(1<&BkC6l.\EN"kF(iAmDcMenH+lJUmpnGTZq^%l<#SV4,!Del58sr
%'unG9M4X1u.'6UsHoEjl-[WSNV)Fl?q!Na&A0H95S#Pc/^6A"p4%D;N;qQPXSK;TkU6"P`(`6l0T'mjR<jL7<hbApu%b^I0"?$id
%m3(G3OQ3t`or%NJ#i%PMn'iWC[lPZU]oTjb:Bn?l&.G5q2TTI\i\Tg:L5V"BQ%k)`/gCM?/u<EIb6[k`AsoPc%f'E[GjVFPkqALW
%Cb&0sV%geg,_oDB.ds<-%]S>oR(d)X3Hh51&i?'tqN[GV7#Th)%XZucbSl92LjO<7j"_(r7ZV/^^r2+M*1GnAHa.*%4:&o[kG+8t
%ok5]e:sWaC(NWhNJCE'\bT)sni:8eHA_98=2=C7O1WF]:CiMjb3Q)U:7&hqc;r%5r,'DkX.1T'Y<.Zl(**+>BJ8(l?A4Ta"bdJrQ
%UXFNeK:81e10_oN&#[o30/OCKn_&Z@Kp.thaNKN^g"PY\lu=.BeVD?iLNSphPAQA-4t$*sU$t49)@KZ%])&iu%R2RSJDM?6fkXd1
%Dm@>kimmh)f]2IH`Jc>%*llLIP;s+ET@8u[a]*0\:Z3%b^[l.^8lMVSAaH^D@DkZW*'<d0&#VDth`I!(X([N??@nXsrD(Tn][Aq2
%]^(hj]n7:gs8<#uh>^XXe,Ssas7H,Zs4;c!s*so?JUd],s4`&'B0r7.q+k,m_>gFP#>pY+Y.n%gTE""+s6st+0rOf-\`WSBp5d:H
%8H8DDo:NcPlc081;u57T%j1f]s77?4-\F7'S4<;K^XrK.-"h5;^l!4!._m,-]I6;[Jh]4R5QC7<j+1lnqd9-Qs0_ju58NrW5K_#r
%q"T@=^[UbhIp)gFs8:t#&orUiHL%GZ(*t]`#KUjc3mh@rKA5?'dt[rVKpt8\CQM/ZKM3JK?\5OU!:K#a6<Bh,*$R*-d(]S:Pb,Yf
%QE1\])`<:.?YKdihXsJHMW*S[r.W)Z:Oi1qp(S?cPL^L<r<;jC,%QuF_a)BZJkf]G+sKAcfUFc1"q;+[%%(.%$9;r*\Oo[<J:sdH
%"9oH=%OMuUJI0Wa>h#VO65_0bLuK_f4)O$`B*$E!NQQ;-o1]7^j4Ta#AUX<!q8XS)Nn4Q/6QCr1Ojk'GfG;SWY^]kX&h]"0`+@8*
%qMiS_l!A>HW`IO*/=)*57[gd)E8\ZKkZf,t@0)d06@dBoB5jqn7t8]Hgh5(c,MC`kM]-BQ8e89+%?Pr7q67mDhDmuB/=.Bt.hUac
%]3Z7*IfCQXL&qM;c+7kM2X%\#RZYV[!$VoR/(MI8/Qeo#7tO0FM*dmp$:0s&!#?/'8NQsXRt&6DLR8\VZT0^*YZ6_e!m$`VT;p:&
%S&'#2XpKBA@E3K5,/MXH=.nU1"W\H."&$u0]r*3lbT827#*ua;O&shGKfmC"To8rGlsC"'peMVMU"9#]>gO,+#,a(o.Ji,lMspa$
%h[XRCFcCDIo.dSb90b_tVnKcf:<"6:pu?TF8)8IB/,SE)cO#P(m"@c=LFeBkCfa,"OXr1A@OiBPW,rV[]r5W7&u.f01I\``ZjTH[
%+]k?PH2l=*U.:<X-S90ULt4V&]#Uk)U^)?'1<a\^5M.VbW_a\Qcq=S"iBYcNKm'gE"_\25qEm=7,rtYnC$X1`MVM+r*Q+Lc2="\?
%o$rj\Es(Ku#FP0=W;b)j0g$fXOTXh,$^EAG$qn2Z:`5JQAYgkME;\Wr*$QJ0WL+aENbQE1Zu12%GE/YH)G6XC(I.9Ybu=5RpoHG]
%aa86goeO&<o$lGY0""7=Amnj39E$u'>tQ*SoS39t>/(45nXinOr-<3Z?AYT&)fX;hM(h:]CF9VIRL#BN[Ib2Wgb::;+8]-4j3G^*
%Q_78Fgk;gqs*-F^n.P@lHM[3%V#O3+WkVE8l@2R5\kW#arLRU^;uV=g1_(H2'>;*[%iTqDj#t!BYHDh7pBT^d;8TG1='S!Tc6]b:
%<uds"O]?[3EJC!d\34Zc>mQ"8#-j;IehEgE*EYgko5S#SZUlD(ID6ZXYI?[9DRYJPZK,o4M/:aJ:7'`3XYcjrq7\-d8IsSI^=su.
%]r<#rRfWM+gOo.PRRjp,j^Wd1VF-iNRk;F@e:tTg!qHV_3-X.oL7E.i4`'"l!=D\kmUci_`#A#jZe5Q?45Tpq53CM4j'tRJ<oblB
%4%7'E(s*%Q;KSh[6<FQeK]`RKj/a`@OWQ\m;)Hog%##jMiW<S<`W8&N4>>7s>=Z(ia^*Q+#,=9)VN)c:Z8T<6Zp06J2"J]9\(rg,
%/eRV8VJ5hH9%4qKg;Ye$Jahr0-]&lX>DIrT9mfj1`?@IAe*,$)%kD<s)Was.+aP)qXIQP"9+!Rr[b3'J^tHfX;O[M'MqApjgK!U)
%EQnCr*/ZpET"aUS!l!-Jf"^6]Vcf:![E([V,e^I8UnL/Bl"Lll!Vume2f3\[N.N=G\t`p@4@O24.%8[-*N]gng-62A7$I@e@)n$N
%5sKeNc2Dm$5pSb&pH^tVZsa2*U\PN;ohDFL;`l,b):;m7'05nAL>3b3DoC&pJJgVs20a@L>mhKq4O\B':'Q'lrY-U@a)AT#JFA`:
%g3:-D#smV<AmpH0`f"1F)j$2X&KKN:c>,tC'NmBC-ut#=##RmZ4aVl+(D&T(T7/+'f]cNsl?I]MJUTM<hg=f)D/XN<`V)Jc=)>'X
%pNNTlD"^@J"?K'f0b\7)ab)f@Llb^f:2rCEKt3!-Crn2)A/gPjn"!=A4ard-Mk@?[.or^Qo.2o>&WDSJLZD-uiL9Zf3?*"%SG06>
%3Q"(AmOeu8!um)8E?J3DS8B\7ISe]tCdWrICdWR%[LHe99rI676S.5fgY"Q>Wo.QQHa4-T%faVq3/"<i:j*?7O<H"CclQd#E^o*X
%hAh&8FZl=lBU#9HA:7"r0T(&$:K330j<R1_@E6=65<:hK)NOPSqH8W_]tSdkhe=-Hhau^82PY+[DURaqJV_H?A7LkIKFfb%IJd$T
%N2&>j=5]ftFJq>eIL.22W(Upa@nN)\HQ8H/@seTo.6W+Vc/!\UH`Pe*8N:qNp$/j_Jl.$>_D\Sd<IGS&q;iKpJL>>naD70V:9=:)
%FH><]r;'"i;8/!H1$f\m$ToJ=W55Vm<>cqN%q4:'e\e5+/VS2dCG:@bSfRAhmX4_Z4bg)lZT0=<'f&tF*XH*+<@Th!H)>p%I*lX#
%N#l-oE#J5!1M*<?0ab1)#iPg$2L2B\6NmKjVu*.eLqPg(r*JUHHUFF:,*P9KU;<0bQE($A:cncB5g>r(q*Cu,HO/H)#PS^.ZU_#:
%5lm=JCLpUR5J1S1HW>!qlii)*nT4'+Zk<,r^`l"`Y[cg4Z!E1B"W)P#,cWg!H*?ZWkk\'EX*uG67EWd:QK0I1@1G[:JF"<I2sD'l
%`:W"a2U)]KG3]2tD79$1pa(_;.qtr@D%jJ`h;d_Jn0N6OkkVi/maO>#:%ad-GNW88DXbF.Gl3F$O/NMk_06*84/BnH,A)KMILk6i
%BW*@2&^ikqa@!CAOWSDLg+t<CDV2$V3F,"^4qM>0"3E.IK/4Iqlj/.[8\8=1WMMIG@A)'-Jc*?0<`W>Ti9(3PKXe,Anb<<&jj"?(
%cWFU+'1q?,?V?NmG6\c.IrJMR*RO8r1@r;9WuLlN?gg^6T+-F@W@QrRN\7/1F(8qsYr.$pmYid9g77jg\HI>(EA,&.=5%M1N:?Ee
%pVq$(NT`FLh#+B-,*,D+%9jeREC`b6-a:Jq3KUa>U!##nA'5R,;A>;iK>6V8j?\7cD9&sd')$kIN@)BVhBCPsBPOOf=q>RCSZRHt
%Ll=2>'Wh,hJH=[JOnGn@F[$;c<.1pBH+GgP;2WY6\pcg_2jqcLNICJZEHCf<9R'Krl\HoBY1lbQiti/1,+#(2"mXG4UsZ9.aFt-G
%m$Y^WT(;O"X&n-lj'ISBarW@O6=ZN=8dFcWOjRZ<+"snZ[\4HMlBgFKJ[rfS_;e:4'=n>&j/D/Uo9Z,>daOQ?U[I]m1<5:ehFHD`
%Q%8MiY"H-1Wooia*Mp^0U/rWBiC=dR&k'G7Rpu3*'"WOY$dOJ]XK&kD'$(V2Fki5bUUr"D$I\ml#a7Y?h26\9.P%>mc<'*6Zs3(m
%\-&XcH,LOTQBSp3:Pdhn-]hCVN>g(!KpdX1bPB:c?jXB9LBRttYU_M2m;hQs9^GXn;Eq<XN+=kuI:XT]AD.42]+Fq><$OH,9Ql0U
%fai`*b\gcoR1;6[bS/&JPPH!W'hi2Yo7_GootkfHo"*&Pgq2>3!057n_"=eJVj'3s,m_Z[q0Z1o,fCh=7j5.77X%odUd_%u].9LK
%a%^1:::\!L;=8ndYk66r'D/cV[Y\TZ5V"DZ'Aq@C[#/<;fkhM_D:lNbi<SC46_2bYaM2ND>7V^ZXTo>7l[aDHg'%hI5,Uc8e;3*<
%`=IU&^TX$MFLK0AZJ#<&I"5WZec4e!#>k+oN)ofV^0CS/])_jq3^CEi`o'?QHH9\+U%Q2EgNqd3[2pFl3;$f0N-..0n'da>jHELK
%*d#k3irQlSBia)8n@[:1O2a8XaHsS#n%@u2;Ij4$Eg7IDK$/*[=DD0aY<j0-ahYQb^&uA&-O"8nC'\GC\=Zjk]I-1_Cl*FI]j>jc
%oTa3OMqj7.Nl[47n[''%kg:D-\/n+iI/agAU@EaD9g?0V?&YD&__p^'#Q;:fdF0$9P3Uegk\4X)X)RCKc$0"Wk"C3GSTk%CE8&&S
%#X(*>*qebO,UndXc;R-/J\?2loFr6u5#'a>ee=\tRKc_Imtjm%=`oQsB9\f[J83Tl7clPdB;[e(O45PM.a%U=8`J;Yq$BTr[qkCF
%^2:6O1#\Gs`,@.u_9@Af&'/<uGtjZ1@*'4WrrdGJ*jcm-YL+$tAjDn197cZ4k!7%W862'(5t+9)"O/=!/1@t//e@6+>1+(5-T;D.
%?_Wk[F?pNucds,:(X/4PW>k;Pl2CFE3+#>]nB%@d?Q8ZsXg<2m,9qrh-X5#t-:C9^=/s5S1F!6'A!?5L&d;rP3h<*8&Ssa3'J(U=
%k`G9f98XqC/I@PB;'+G*;',AYcCg`+O4gJpo6:@qZ(+Z*dF+Yre0qCq.ojKRR2Z;X2+rX4EYR)K%f)P<4,R^BQ?gpP$X'$7k=6,@
%?.6!E+Q]:A6cu+#9C$<4miA$EqNL&7J'sm3rOHm=^[([=,]/008Q'OtoPCc03_5?_;R&=fk!-hAHHhaCD0]$!$t6/Ri'@=8TNQlj
%Pk*1`.cjOPQ#a(7/1CG!-0lT);OCjKm6!(;a%aaDioc2njV"FMY3W9+_A'4$2@.KniY$pIdbWCfk]o.@++^XjQSX=kW5XbsZ_fj,
%j@so!1T0`JS;T-9k!\`0GL!&H:181JN-ZCeI"Gs+nOmNG]?ep'/r8HJM0^$VIchEXOrj))l]pu7V?".d@&N?T"7"JU4`X"9Rd"q;
%1quA<[#p:@hU94%9>?6T-:n6_Y"(Zk59AX<:-ps[p=oQJFQF04?!O__02Z)+iHW6tlDltUH!R/B2`0$_).0+eB$[Mso.[gU3d^+I
%\achh/r)A+L;YS-D4V8j7ig:/[DqfRn0%Rc\)'1R0:aBV-od7N'!'fqBUMlg>-seKG:gD].X-s@J]DV?fi8:<@fIIIq,PJY/@,;c
%'4(P9E?u[Dlpe?%X5cZk8QP^TF@fNRD.6XKa*hV=<6'FNnuVP5\4>q%c8)LAEo^E7gX*7.ghg_M<:2Ydq,ZoA49k6.cn_cZD<Om#
%0)#8c"*j&r]>FVTS+cl>.AMpSR&:@X"5G=T&b5<GBPJZr:Z>mg'b><_o"'$c4Uk*+R*^d.jJa,T-e8CL9GP4@ZNoARKa<43rIJ'Z
%hp'U\gL$fA.aR!t/)=[KFDW^="V]1fc;VU&!Ubm]Yc1H87@9%NeJ)A_93T00C&$76Yf"F[5*!"8"*/Z;%b/E3]WB'2&llH36'HpP
%FTqB-F!NtdJ!MFb4FcS>ja<tsn$Sj<GM$Nr)[Jlmg(/.$HU9M)nHTsEVh!@,[!nREIK!PN3Y=HB4LOF1h2i;TDf?B%`L7_\o-YE`
%mYDl^X#UnZCk%Z^qt"IWgmr@@VSIjp/bO\I%<TNPV5<EB_u-g/d[AbXBi->e*<X^W?ohKKLa2Qp;bH5BOP6p1R(q9_I\?=i>(#.)
%qYm?dl&T1sF"Q8ue%PC23(aE;l0X_6jhN)mCYcnCcNLl+20e1F-$0E$98-$cVc"P]?_]5<b>%7/4?nlJU*4u>Su22UrV(3hQTh0+
%gQp_5A2Eg-&`I#Al&q'9PI3S0[jX&_ma7XSoZ5L%0=V/b<;+nS+TKaR/LR=(oIVG_>Q0qPcRgrralb:/bK8poi$"^s%[Vs2,VG-M
%(70N?k%?]TQ-83.<i]`g[TZf\QSVjV<3F,Tj\iXZR&dc&c>7&p>0_$IZFLI_eK/pji0M^NTd->UURKZnA9H)HEjE:"l>j3,1%=rD
%am3uA\kDD$+G6-ligkh)r)+O2X%Ls\p;^(C4F3fC;:Gt?*7sD:+9b&N8VQPIoLQUbDn&8tA1g*QCXg*"@4_4Id*M#l'lIpE)oF^K
%IU?3t,11n&LaP`^Tp"MLR!4b:Bc]tS<;RB:%#3=U6n(Y@.n$&!dZF\^17^6hk+N^B+K?n"E0H1RB/I"q3Nu<<.VL(G"H#!/#H<YE
%dKp(Vfl7n5$]Rhp8^aRf[(\p;du`I=jqj&Z?<)@pRu.3JM"]njjK-J2-"Zn8biJ^3;93:/e`]gp<R_/q-C+E-[3,Y[O2Bm91'\$R
%Tn2:P+FpLh/7l?;[Gl\+<rln(e$(Jcd"ll1TCP(Gco1_H>."V0"^TnG88kRp0[opa5L#NHQuBu73Ut+c90,qi,s46<j[Qg?>bccu
%ATGM$&,fSA3VI#clgHu"RNsE#0&l@E:Lt'Nk!^>Dc6CRUGXsS)q2=Kj+='ec>s4&L('s)BD[Y!@cA=XfSOK,[i"gTQ&?3L&4;Eig
%CHm_>'n*i0Gn>8PcnT>.1/A?WQGps.#+]:r4mikm.[nN+PK\Y:M"=L+WMn3o&p`&[B&l'8OiO-$aE%bP5,+c!b=Uiq0[b[F+S.!!
%gcP#oCpH1<eR[?=p(\lWgO'QX.Ol7f/[^:o02R)7=h+8/7>SR127PSMUNsQ35r?-jr6m"G>_@K#:FgC*e)"eQHeC[ZcF[D>:4Jj.
%(RQIOH/R,*T"-[m)G?6WB?+)HHiD=eJ$To%7$WG@J4e<(aXKk>dRIGo!WFg8ll*8j&4OJUiTZ[WJk;GHJF:,&BL9XG(%dmH2<s(L
%??Jr"]LG[QHWl2o"TM6%jCOh*47Ba4Q@)KB8#2d\C*J$<p75QB(5]\=kfA^-Qj--Klj^4d83oU.<2)lj6]?C\j*<!8mX^1D.hjqi
%i!3QR$"a(ge>2bn`6$E3JM&VRJJNO7Te7=2^B+`e3TL^=XpQD.IQjL"UhWb3qZS$?c,EM.L:F<M;jic>*m-A7rOj-Z#t>#]A/k)^
%Bo-FfTZ)DmK/?2BZIP6[\/5AQqZ^P$&Yq7`*V]X<0Do5t2t^E5D1)YrApkbql1bX_l;Z35nmtrrP8e%J5>(PM47nPAT@%./60j\K
%boT$`2B^<hFDj@GB:m=%'&!Y+i8+KHFnkfGBqu!^fl<0sJ]\iOWc6m/S&p4V2!X.GZ"Y+:&KK'N$djD3d_4irkL2\Ld8H66:e!/b
%5d;W3q1OFu5;#aZ4gssns61P)n\4SYo4<9h5KS*FiWCtd:N*I`rXs=P``5$IAFSp]_\fuX'X9_<J`R!l^*cQkgS<t7cU*g/%8]3p
%7+jScGRkK<!9nsIX[8oqntWaP<hReMR;ZIP.5qh*U75FR1R&FGegX/08,j`nemsgsV"I[5`7@IE7to1h$_Ss`r(TK.,YRG6K/f:<
%**Va-JS8`;3*,YTQZY;2UiNGLjNtR77Zg-,as@Be(C^,qR^7YAloL<9V:36Y)*$5Z1g(Vd`'R3jd#e3=1:VUIhC5)2CoM^C?14(T
%qmmQ=rXe9^C^>H&gYjPT2OfEgNQ@TD\Q*JRg<jA#Q%l^8,0<$_oq$:%ZC@QY!dO-J[R4l/*N6=egS^SsE4NQ$bZHl>O)l:bqWqBX
%IMcstg>$]BcuIi(WlNr/bt^!B26gN#5OLdLN:A_9#.`_g42821E^&n2fAl\6!t:CTlg;'#!>n_>%l*71F$H:?9R=^+)Mcb\,&$:N
%pX!p44fX:.0lC]#GD9Z89ZFQZ%^Zu2coQ,qKcP>cm25A@fIs2]k$`b;D#U_GT+EWl`p87\j\Vj?V2,aj0n"m>Kd9+>(g?eLFc)3/
%mkoD>:k!$.W-^lsjk^Ta7/b?$fAYT;]sD;-Ht1@6q6FShT9F1k7(!UFGaqq@FQ=.,>.+"#-(^9*R'm-rG*?$&X\)+rO;\kS5fak?
%3jf;kOiiDRY7`[[>*YHs0WJ'<!0u!F#)*_Ka[p2bVcTEd;k_KTnE>skDMDUUMe+65=IgU6XNi4/.mQr8$e:U5$`sQ8C]0@Pbpj:9
%JK_u"1b7uaC?;O"EUT],T$sc#G1LZ3<r@qbU(fI35eV9CD<Zg,rTHA*Q92!I3FjX@-]E?dOOcaH=O/D;s%]nH5ZP3Q5>L#a7=)hF
%e#b`SkZ2>\\eRH2"g9\DGXnoLh23JAg,ogt@pd/DeZAi%<6&.N\i<;@H-\R#mGX$r,2ng"GuI1C+C"+\HISs/'StifWWTIt`(tC1
%9ehh@#==0=HaL(iY(XPS^@\"U(uFK:%^4s<2l,Fd>nCA"Yjm\!8ht8h17(g@X<WA/Z]t>5W/hTsdT7u,Jns%J,X+GA#r[GkC+$SU
%V+]/uN^V;po2hTSdaP\_3beD$UtUflQ=#BHh0IVeIY&fQG=k`c&=.L7NLir0P-^TnE(7XI#-%lE241&u:EbFB6?kbM#-'9j6\/8a
%/9OQadg<&eh4#5/>*34OL_*-#Tk_e)OWQ?82MN<-%c:,-\JZUm,VgNl+Y;dPLHHA(bsEDFJ.f_<5at+_lp4#/)_,`8$F,A.+Ikbe
%+RS[9.X\\q2$oW?#oTijHVhP0_pDq.HBc3L=JP]:0l&;':hI,Wo:l?K)PTt+!*dl7>'F7gol$NkbHY@>rQTue`[`RS$kKuAY!89)
%q"Gf)L.:h&?sc#d)tY,8mGB"1>!gl"[<q1Q)Ham6@aCt[1k0.0>\&0=XQ?Z#f.<WNGmRYP'+"SoT\V^A\*thSW-Tk,acXmRCK<0)
%miKlW6JnZ5RkA/1kWQH\rN-&m6@7Y`kTnF:W6%qO_q&B%AceX*fohVO'YVd9KM;Ge(Em.r8QSl!O\%269P)qi+sfe%V3,u@c<+dO
%X(cfhI6SDVHX#t+@ChMHHh3c?Z/g4[)*rK0?*?p:rrVAZ9PYQQPkA'k@p>u2\ep;M4=%kq!6N*I@5D/IZ(NY)ars2,&JSVF[C\^t
%A^!HWr!VLk*.ku\f]9RPd\9f-gmaP"nU!WLs![G*k#qS,fYk0A-bL\dM'!"?BE85.nj$1l`PULG7QcNG^rq%XFGkNA<,CJ_,GQ"[
%bnlnhA@e-PqUr:Nk_E.e7gS)apa:iu_6rNOD\*_)/,\fj[B7\=L(8^<Q$skPh3m]PA([CNORtDZ,L]q;muNUt_p>rCn)V-?R(IE[
%?A?\[H.Tf/L-d?=rM-U!,3<#KLo?#iUrd:>_9McjW/ptkHKQkc.DH:REgacJG4)$D@I#?IkYr2eMFu)k\cghPdnm>,I0hsSI6;rb
%3gJcndO"*!?d`N3m46OZl1*MH')t&4X-Xu-GM`"r<&UJd*=usG'E8(o3j3OC\R*#P*UuA-o-X"bW#0Mn587KqJX+\iLKa#=<d3/h
%Q?_KXB:#/4Vq^VVB(sqC]h7K%)hH26WQK=5W+<?$MrRfcM-?h]G$K6GS?BJ6QsFq"O&/>.Y.Fj2R)_tR?,u%O2V-p.kfD,Afj/eB
%7;>\fF'j-GS?BJ6R,)8C\b?"(`-3$0[1#GN$.K2BXuhkY&(B?X$Ci`\4ih5!JeXS6m^`Gi/bOMCfl#\0mVbdnbc_,e5beToL4%fc
%:f5d#Yk;R#f3a\/?%NO'qE]92)L"nk+/!TmJlP0SEQWa_=qCH7eseEMf/IZC9uE8*hT+=o]Oso6F839P,Io2H265u`p%XjG,*WUb
%qRB`YXncO)*7KNpgWK4Kpnet;WosZG0<LT]j/nU7(B*cm(o*aSIZhW[lp9b-aKTTqVo,NR+=NnQ`#NcIa:En/MDt2ZMh-N,T5-/u
%i.l9l=F54Dp9`Fu@NHW;?[$Q#he?bN*ID=2_$+C37r)bKhV^]Pd&s)-*JCP;)pa13`M*0;FkndVVJOE3LaVQlgp@O"oJf]"13gTr
%::*.rDGo;pj,8l-T>'jXf"<gs$@/t(G^LY&%;t`S8FDn+En=rt/AR+T-UJ`G)h_[(\=O6%hM<QJ%;t`KD(\VpppiE1jGbRDlHd8;
%p*T7KYIh?"n!).)LBnp]%GoKdM?\)FI[radoSZ/7<<SH0Y<[M@_*K<g-&@R:=m\cWnOp)2V^m[Nd80!E4?XaPI&mCr1O,A:j1!pX
%@pd5Nh:f1/q2Fmf(o=_+P8uCm\62-W3RPmo?\/I[%K,HVACM`6kbiq.&p02lfp$Du;u+#5pQiHg-7a10j$*Z`(=*=%O%n&7;7'"!
%Obqd23m$)nTLmNZYa#h"je;6l)%Y.R8cnWQ_<6%^mLYS(V*VOU-\:"]1l30u\m!)sEWbQSf!ES[T3\p(3Xab/'3]l,;E(8)PcmI@
%hU"j^FotI5"uP:(pCM.Fq(-ftUgp+7a@'qqM5OO;#i?R^M;N4/nJ)M<8(1&fJ-t)JIp<W'4oXq3h!2nIIN;/T=-]9H[/F9.U5=td
%Ar2-8<!fg$n_%\Whs`'m+U_q3M5$\gm>l1q7SsRnl7i+'?).B.@GT*UIZ=2l4fuWHXa=PoH@?`MFm!'119p(t]of?2oH&ets7M26
%+lRi7S$[iYC%<B*/B#r`pL/Uq\+Jq=oUs`4'l$<5):,B"oFkEU.:.\CU_R;_Xih9[Wph9f<%ab0R+r`bKs_N8W?afn9TH'U+j$8T
%F0nHT<:;.:m4"<uiHdt/'5$T7:P!X?MND#1Q&-i`+-K9rVh)>iZ5%:!E($7idF>ng:`'X%CTP]9MF[CfOYZ%>%2;3gp*I-Q"4b`/
%I>L<qeD3JX!p7.CM/rV\0<*sn0m[?.H@?_mFQZqJ%TPaSRi#<#e0H1LAIL]C2_<;Z(%<IjI=WFm\?l+:j?WGA3D/00STg9pK6[c8
%/Nuqb`h$$1dQh2fR.qumhJhY)?HIB0MYOC\9:Y8Y`31nrUYo>>q/:c.oqrl[c&Fq@J*bbLV"mVH.(LHZk^tHqC66]^#V.IW-RQcH
%1L0iK>Ebt&=Dpq"g^I;DIU9\Yk+#e8+`:;G,2Gnak:Jq76"oOZ]%WLo<P<YCc$@(8d+ob<Ba8O8o2.boM\=`hihrujRc;;%Dbg4q
%nDLacnHRd]7gT6:dQR'D=5p2-g6KqtZ*<nfqER1:esl8[-)a*+*n"KG'+3/Do#M>WHbBlTCO>U.RkoP:Bt7U?>iqEa-g0ga\X_^!
%HZ.4-eI>);hpegjWTuFlipRL2CZ%u!U7XSjbFee(9@,hNB@<udiX>2O2_V/n/*<n7\Q\E:?@V-bhA9(Rk,SmY*PoL(3!AV0,q&M,
%0Ls6:=b9uiR[JU6VF*a>SJk&aQPe@LQ"HTTNL/SW_BhcP'_N-N!0>/.KP">EY<b+Bk:aRrh3OD`Z>N4Bj^l'*47E#ep:n?i'!&1A
%?Q6J`+iKj>1C)nLP'd\&RUMd-5RVk9>4I]DQI)rTI]/*5Qr"6s6m@K8M*PO5$Fp,*\2W*kUdq]mpB'V#@bJH9!9[cnMUk,2?"kUX
%X!($C"@5@BU!Z-"TXSh\1F$W+iV1Mds&2I!B#G!:5L+FcZpB7>(Ui4\E-^u>&b"KA.T5?hXH66S7>"8^WYd4a;H8Cq+<kd/9oQGK
%OVJKl[e1/N6qX)!@E9S"!G_A*aDutINo&f(cTVnX]e@#IHEhu'l-bB<i&(l3E*I;Pi<2de.m,l#071mUNjd(i#M*Ug?GeuTp;'g<
%jFkpC0#.2tPZdufApJtigZV'Ba7,H2CT"<_Y59S_,NPpTqNSoV)PB8h'*l?[5o;);aQk9@FhhAkA#7)'&PRj5Q33iM_XOB3]UC#g
%TOXrXLr/oe%$e5mGUtAQb'*CDn,rf9.;RgBNJNt[g&tC"-0LdrmQ`?;g?6a':3nndpu(q&,+IOYAO8$Dc6I^Z4*'%?A]g)>`+-l]
%]:f4%NNL+qM]7K)i%YKcM2;5`bb$fA+7X%j2$rrXh4>=2:gl(L>ocnH4\b>#2L.uF[C&`c;b;_aKLG9I'>3N50B0k/E,+.'JO>*t
%obtR+$nk.[(Wf)N`5EK-d`t_ni1RI?ZP]jlf(7<cd(:_0Y9Y)0?@gJK["U99U'2Q"IaR-S-\;jp;H(u^$Kk&-Uggm_9>%UD*Y"WD
%IS^i/`bPst'R>2g3L62d!Oc3/VN./4)$pSSM.VkHl9Ml>D-K)-%)+,:E0"7=gKPg:WHsGLfKk\=eFDON$nQK5R3'Jm"M!2+<-&`l
%/T:;]Ce]fTi+:tjiDb$ag"tLE05;ZJA!X0d\pc;$lLpOc*enOK7P(],^CFX5Rd$EmY!`kWjumD>p2mHYl^AM/1H-c3a6FUp+WdM`
%-kfRh&X[!i>5fF>@YQ].\3!NXdAkJbE8F*N-=)/eF*AcN-E*DUlMK`'J!4/$B!p?llhB&^p>W:ChANt3(]OR1F^?JhWVZe%YOch+
%H].nYCQVfuoCTrTFPoQ,6e:4-%Hd%Vf&</=5(?M^F_$VWUY$,e2E&KUNHdQ]q,Q!KfP37BTrPu&j7"+qXs8k+)o[Q5ZPJMI.TpCm
%7d/#FlX6*qYt:k/^p>YbMl3M+NJ$mrdL!,`\mB%U0M<`X73eB]7#RS1>a<tk3S293I-%5ulc::77^:We>`u0iU5iO\93jtlTBs8I
%rg^f>B8:p^i,$5X]ilJe**I-]5hKt]%M]K^+"%F,IXMC1_OO(ZBt)b01mfcu!WEH3?>)92KrFZ)5t(ZcB6^JWYo(1D$?gQnlhW/g
%3u`:@g%JG[Cc0OEgbS7)O/\Vi4;)gqQ1n5C<o>NR$H-+ap\R9s#Q"kHAIelGl1W[?F:5\)S9;)[[?Go7]++JKJnARA,8%K<#u5%8
%rk+roV?o--&%+dU.thQ:2(L(O[FoP;n8m2>#OkGVgLI7\@2i?Xkg-0n>hTPO9,mWkP4d7X9rKLrV&bu`Wa]r!mT%Z_<leP"$LCD)
%&,UKPZl*IKnZ]B/`9!-`<T@Y-TDQ,Y234b,N+?^CMBkU?g/_TggG#d9endh*R<huha>ff^/dC44P4\%2Lg&^Mlta9'e!O>!GW'%l
%Wn)EHL.d0!mBXaX?/-F@2gO+u/uGnnEHm_^P\LnQe1p.u3Udc2:#.D@h_HjnZ//qD\6H^1,OHrdrU@k$+W')3[f'1njQ?ZjFr^Cj
%-X5JeoFYDgoFZO.d`;>E13#;B2LZckXIKFnM-bg!29=__k[eU[IL3%#G:)F.UHFtA:<!H#Fp`DdfAnNJMk\i%9jlE8N\'gK'H=\F
%Oq"Pq6:JNt\$Bdq^J%\5lMtX-Z=;E+=kNBq2V</&UPL8K%B.tBQ!Cd?N8dGm3@]sm]X<W&_ck'LWp"Rq(4JE(%H\W;mbq:nPu#PV
%?mEXDO,@:'TK6-5$,>oL_QQJ7dImk#N+s*B7VW54NVIKNgRDikS#W:I]LmZb7U/WZ:[?(o6@htpZ["&,Rn<SpPg;RMkp<Y1\-C^7
%KYY-rk3&(=TKJKmkn]gDol8!X!i]9S6/A24cSt%P`BY="`BY="0i5mYg$gnk(_K6AN@]e^$$$^F+@=5U.s_;5iB?:X-$;L;VWdm-
%!/Vn(prY[s*Ii`1nj*LiiV(R`W.U=d-8:M@M+>53[QP"<je*/s`#]s/9/0q_<#&hg;(+u9@jGWGdFc5KqhGYAC8=dmk89l.ZOQ3o
%8WK=("-KrW.7aZ[m8(]4>qCmq!3-Ad7ZBZG_*3,P=A3KV%0bQ7Z++XCeF>ebar"l(b5JSeguCNVnR')Q1^4PN,B(^t:aZ&!CA.CF
%bF?=&_Mc5b_IIPD9iKli9gWA(K3t(%FE$1c8;N#2=fBRkW'9)Vr%A8jR,SJcrXmL\PEglbYKJ1A%7(W+a]/IGW(J^"3!^-a+D.lF
%18cm7W!XO@>`+E=+N1OoMQ$lc&=$R8n.^Q6/?BBrU4V%189;'JQ1f8bcEA\`)sFhb_G_#Y1G!:VN\!;('H7/X!G2]QYDrlE>'NY8
%/MW)S64b`<'iF5:6<$FZg%L:>oVdR<6XjUWPOhIdDW_hl8]-JF5/Lg>O5Jg>Lmhf*MKJ:A%PHKRejbM`>j(::T_a%Kn=Q)gr.0`1
%USaYL23PI<ga/>b09*,j5Yqsr;f:)#N\sJ)0>[WTRm$T,.ii8'0C-I(5[0%AoTQ7@8V/3crQmj.=Pl29VWup%-VKD)#`0JL\MX:L
%:Se*6R5F5kj+`0"X[c8X=ZR:E)5Q"<?6)W$<\eq`P#/6uYT?@F1o?L_,b_:2CtF`:8n"7WH6Q>rSlBedpRO<G5EI3Gc_H?=EJ/RF
%r#jP9)>p#Tk7dSL,,qXn24H1q&RsrA)qNL%4M@5^d@8:\a']gm+H]a:LqLiiFVP7"'!\[Y2i"FBi?"6k#dq`G>&R7hoN;$bL2/W^
%i@FF;Z#823<8SoO.HP*N#$%_L,Hs+>DoUN;O7>,OlIl_Ts2P`Tq&p3r'qE&cM[m+H#Ren67d""F2(5*s]W-&AgjP+cTmcuZ"m++n
%MF<heem2e\p?+kmS*bW5#S937XB&!,8n!(q.e-J0ph'pKc^["4_(Oj2Q,#K]ph&ud3"&'Y_*kj45\aR;2>RIGW$(r^,"YgQ5l(?@
%<LoV=raK[uS6gaf2qe]tVnuT9-A\17?Htqe#3_)XTE0%M0]Z%=(!2An">bbu[n3iX`3W"E66<9>0<1,pef`HIM()^%/_c-q8hRW,
%Z6G2lDZqt^XpGYH1tlkm4OIob_$\PM$3erhVmlf+mS$U"6b4L1AO-p,O)=uo'4ZAO$ra#?5<pZJ1E\Y/28kZS2ur9S2b:*@3N&L#
%D$;LjTK`0XTCqj;M\fIu_'UQ7)=rCV#9(HeR+,p<W,D?Lau;c,Mo!BLF+tW;V!T@+aTelneZT^QfgbG3JKpbu8(DF>_+?hn!JRON
%;`.gTSc]@MX=_%Rok_FqSa6`%:q\ncj01IbDoSRYO"i),l?ZUXK/K5Oq*3ehm9Ms-/7jkCQorPZ3aYGeAN7ACa;Jrsm,b7qWolKS
%Vb6^/jMse&m/9Wp!iRCW$?p?16Ru9p:L`q@OTd)m?f2\`M:=!S/q.QA1J\to#pQ&mrJS-=>2b!=$(ccg\f9QLgi>(0qhYTKIqQ)4
%:ZSAPW-8gh6r@jfKlW0"LB'N.L[MHhQd%Tl\_6$k7adT8aO#`gU`nr=L<hLq,XWf3@&+g>oOMW>Wk8Ot:c,s_$D=TJ$:d*U\Cojh
%3\hJM*bAO.E&c:@Ho^h#"+%+jZd$gFFE!4jM2bj$+:C*fkghP=fp0_r?IZR>mcR.-rBM6!r(EZ"H8RN#>-7><Z6An`@4ba6\^bHp
%(_5MP1Ut+c>TJgUdrIV(Q^<f)^:Y:'r%W<0$VnL_+[Stq2Y*Y5<@F9a-fVW)(3-E\]1.,V5iESj9ta!Kr4O0;]gcF0cPZqRL0]?+
%H`6b1^I<:WcD.V_Y0u>lc3CmQO"1'u\fORB?h_ql#<ZXSZY8D^Op[38;bIK"cJe,75u,7a;-;_ci>(-s'2V8$>_Y$#'c8FL0:3F;
%.276ED#ob4D^rX\fJ@%NR3d(@P?X6Noh.T(fCn5!(nL=&FUr'S%d*D7*nND&"^S*AoPZ]8RqNI`SkXF%.62BDC^pfG`k^o,SYS_8
%O2(nXQe\BW=<R/I0)aO](.;<&ELE:)YlLap2@WI@BR<8G+HWXCmN#/</2DVpYP%]4Pm-Z^/qAfHm'.@dJ^`XPbt_PoJ$43f_igcU
%gh;`XF?+FlYG"+Rd!9h*VNbi`BI&JS45_'.igmUT<[@3QneE$slaQ:>baAi%U?>!3RpZ\1?XX?"mPeDHF74k44>QIW8-Fk#.-T+I
%dWTbQ\#;LW>N75<GV!NCqq"E0M$WE])5Ug;7">AZ`g2JJ*@W&JF;uDM%LWWR&:8+?hHWB;S^"i;bLXSl7GML*T\P%.$,X2;j@ENG
%NIpG]T4WLm$bc<TP9-?+G3\r$He^PgK:L6m?XefcKALeW4a7VBnss'JS$7g5h8^=U@bBRWN$VI8H\OJI3#$.AH5(-o>`)O(h,tT0
%>I)ZU_k5`F83pW`_2OR`2@6o/F*C4-XSdsTT_IG#S0G#,:h+)p(jQlec\%=tFe1Jp25\fV=0BMUFj/5b"[2FZCZf.9:%)PNMEj[S
%TfSSO\.7!6VS4k)_3eD=@b/Lf(V5MZobGTd(E_[qA[&YASg2DHm">&fo@)_udS&0MCj>8mbTNN<iVe@?M([qBD&9S?rWo>=IU:U;
%FVd]3Dc=g3&fSQch1Ae&:/p+q1:DBehMrq_"]K<ja:s[/NJZr\?.F:]c7@5hYR=9WDqP^!%UIe2)MQG\n0UYP0f"(OHUUDZd^ZQ<
%I+Si83gMqj(_2%ONm2OGGB5Qf0g,:u1b.*e,oXDenJ$u=X&t3JjaF4@fdo*.?M?\8d.Dq=W-BHNlGUM5M+6S4VaTPr3(.9N6<9gX
%\KNKNaF;4p+<&oHfdY;s:<#m]:01sP(e:hSm^b3[L8Ho87`?BNai3[]X9>;=861mn(7\YAQXhB\Pu$ti1>"YthL'B:?]'KmKLf;u
%Bt3MUH:H;\phmOT@8=43VFrUDX&VGBJB1aCSJ/OV+u\V_rAQU0QgR8\K9N;c=o0Dln(*-c4PEk");!2TZPVW>H-tG"kJQrepdSS[
%BQRc:NH4(/W;(AlluFFf-Y;RKlooaOPnVthpIr=9FT(U74*,.MH?3h#gc;>pM,GIVRe43`!M=bH>)r84MQ'@,6g$mV2[B"MA`2TY
%g[OE[9jh1`q7-,G3n?JIq8k:*^RYM,4'.HMT5\Dm[@g%V/a\k-+gq"Yg=JO4/ON^%mIn.Mg3?m#\[AuFV;U^[=T#)rDU-^th"/qY
%[Lj&Lq&8XY5EVq$?.LjXh!P2)(Oq0"9j%gdRCl`>s+L%(TBKDTaB2d7ZM5*=)99Yc7g&.aqGf3Fl9BK:F&_%mJ<,bHF7k`"A5J<$
%^K-H/Q\FOI2YXjQLR0^1@Um(T]A'Uiq?i^0b\N]Nd.)OaL^5*j0\)h+h`'ZhMe5-:nI>'TFiDCf_:PioPS&KOOM$\X$TQ<!XjNaK
%b3mKaUJeueWbV>*bf%Qb`$[3N`Sm&NZ_I$Hd<SXcm_Q!']^g/Fgj9eV$se7O'r%4h2(IJ.Wj_?9XI-ZkG?.Cd(*$"S4J!:M="_gV
%aHOq+kB9oXR%9hT,4aQZ=YY3`orP+i/3#&(pNtK<FF7,fGWmW-hgLq.Puk]GMTX7sUD)J\=]'J+rd:sZ[Z61=p_LP_7)[-mp-e#Y
%P^Sj?clJc:9$Y_`q#LFf52;p^OVm`<eP^9^jdrPg\43CBo@gE)W5#5uK>ufC\m=JrfUTGfrP@K'K`%CP[f+%Vj9uLSl,4='r*am(
%.+GRbnHYhGUG\6"F;M2QiDY-].n$Z#_p`f]q,e7DK/`m9-WbGE_C%Au.uZmiaOutqYU;6-NX/pn3U9QaYB&l3GDWI*L#V12PS;$+
%"mQO[$B\8o]YT2KZPNn[U73F(cYF\jAG15Me<D(A,6X0)/H4,RgMGm=N(s`^4\?%Zdtni-ZoB64].A,'?=3aA$Pr;mcFk;T!q;0Z
%^3=(=mCL+VT'Bdp7qL[E/sjK<rcp5c5^Y:T5^Z6;Y\?%sGRaO*%h9inVP>ZF+_U"H&'X5U<AeU:5^=Q)J*d;Ia>e3@M[-,s^5/6B
%Ya](N9W(6.e!U@EK41Cj\j14-Zq%,`Sr(X3*d\nSc#c"R17_Qe0HG=5XIAFYLZ4H]Y_usN:`]7,9T&,>qr'ka3j_eU=`?&3p/F]n
%"GW3.Ja/?+@a\52r",FN<2W)6eX6SR-Rt/7L$GncifWNI1>(@Nj[JpQ=MBr9>02$_fII3(6gfdNQs=Wl)cUQS3R'G(SqKU/F,c?4
%@QmVO92L+&3R'F]gN=Qkc&$dEm2!ll2L%qQrn0sMcZX/H*LKShgB.!PVLsZ=PfnXBcrM<$hI&Ck1di-:dn,h2>HCL'H8t[u/#ktY
%RXEUiVaCjFRH4Y-Bi+:WBXZB_#bCe6FrG+rQn;%@"8u=GmGMA6=J[;Ic#u.TZCP-;YSc$^_r>9^C9$qlG7kemGXZh\ilQp`dN+90
%/qOJeBjca\OA7JEIipYY.*_b3jdOiW6n`<D@X7DC2jPiVo_W`c@QfqXgC\BN3uf^o*GE\T3\/i#r\)"6.NqmOmTo.0lnm4SZ/-Tb
%KtL7uZI>M4m*('6_itQ[h1b3[Lc5H`+?P9nF#DW"Y*&Mo2;.6@8p4g_6$=0rc@hq6%W[3RS.9'7NfW2fVg&7er'mg>JOa$?7<>"0
%X^#KS*#&UkVefHl+f(>c;Oml]1=?F;Y#>mt-TfRq3j`pu=`F'X6Zo3(:.(bHFRQF@p3(e3nUWU\00RZW.:4'QUm:6gRTF((8]<l2
%:oRl72)cq8-$9DKCUchYGkY)8EeCA1-EjsG<Qi\JYW6iE.cg/IAnPrcrRl"bi(B)kCo<u#:?@88*J?c),p1bLmhW+[%^oC.?F(Z^
%>U#]nb'"?]c)4"8;t,S\(:M\cL$d*)KC'dj?BBA2@650OYET.D_7*IPMNdEMY$H2YgS'FMfk\%FTp>#hJqLuahJk.;!#=S>?J,gK
%-1@@54';#D]WTls`]g4$gM*<Nd'/QULj/!HfA*)Wq]D/?@WN3r(tGsLYno@HbA!sk00t*h>Om@5FEHV+#UkruTTlJ8)HAZ]beP%T
%9MJC9A7b(:4hP9Me+SQ@as7FP_b-DOB0Zj`;$B%B_/HjEm/k,#-6>k/4?P!deVqNf_gHngScLF%7htBL#7pqr9YplWRrkl*_p9CV
%%Nq6=R</[i8P-1XN\"^R(@)qE8-O4f&/^]nR%nrU0'_+l7<UA*jO$-4c@?\9UC,:!^nQMG@qRlR!kbO^>V:TPh>X/C6VLhn7Q%#)
%jtVSmfkKX1pM/^HZ0Dh\$5QZ`"![Z35CS%f6IRP:,h8o1FB1(4bmcWOFmB"`N28IUETt/5<&&6FU=pkQ:$Qf<QX<6>i*9AT%VDC@
%J%Lj`fd'^_*84-?B16jFL"h$pXs=6c#cT58j!i\X.#R'o8<Y#nY*0hjmE!M/jNnD[E:-&5kZ_\$Ne?G\McUSt82<1UMDLoZii%I"
%\PQMo'juT5f@qeicAsSPMF3:b.Y:%JSl8l"%]7>/C_q[j@!;nt<9>6uRK'd%&"=O%c.CkFip6&C$K^.m340llaRSr'UFX/pZn[lA
%k2m:UhsZO((LqI46YJeu<XQ8he56=U'FpI40-2lYG"6Yq>6f'bnZRt/=_TXdKf#2g+NrNa3TNP=%7st25/a10"^"J61mINr<*ZC"
%[0$j\aNu+!?kVoDUsTu3?BPt-g5QM!rm[Egp@28<c@Wq$;L[J[gmn#6[3.NVO&*44q-bfA1i._M.H<B18n%aP8%fV2OG&LB*m/LZ
%/$/GH'3&DQ6,15=E[#?GN2sY+Np9Z;ApeZ8^M'tjT2RJn,/k;O=>a*n(:6k\V^%L`hDM;\)cl=Q*gaZ1ortEAYL1@K@?pbq[d4p_
%do!jB7&Tl=\h).U3:'AqA$5*fWI%<>]i3O+/?UYTRR.=J&FCek%cFXec?H%c-D5.Hp&`"%O"SoW*:rNX_%O)H:[Mi`:eH*p,s73:
%G1##@LUSp%S4\["`Q1LtN@kA<M90j$<;iLuqaJ]Y),bZ;aHEYer;q;n.01a%VJjB=*lt`/&OEMXXW/71?]<o=DDWX;W5s7W$RY*&
%V/,J2.0h8(0e-!JJcrC1Vbgo7+;NIk`:`1Vau'R1R0.utN+K<=JPNlmU':.nItuJ5Ip=U_brt^]C[Ya[l^bVq?[KQ1CqOTd'S[,+
%ZPhuDD!7`mV\QMeE/gk9G%TZ$IFhsqj;1-'"V2[uX>oDn)`>Vp:9_1Q/R+bLW'Q8J?%W#rJ>A=<"VKk.nqBQ`GmQCS(AKAPRWJk9
%c]ROUNh&g>2sJidXkhRHiJVNIeb5Sq!2B,ch.&sjHl^46D;ZWd.f;`a5!]M\Jq4.mTG_JlB'!+n:m!%Zn?cbO_$)$Y16E>5DaGj9
%>br_$FNIiS$el)qY,D5)&PU%CBG<O&i02lV%>@%4KhAt)e'[''$EK\O3!rDU2-YB6%1'^(5*JO7k`7OjK)mM@[Ca.X]aYQjYS8R#
%+KZ6[6;>!?&;I!Pm^?d463&M=nQU'r%m(&,d<7]_(cZIRQ@4r"e8%i'p+X_03GF!3G2P&.+%NOjFb>7IVu+dt.!,<+R,\\Em%``6
%d]KAGSk?%`p3YHqs-A'9G7c$ArVUEbBOL,$Js2(s7kc&SLFfcTV??oE-*s=7Ri4e38;UA*NDGOI7;Pbk`-0,8&oXfSTMHT'Wo/\'
%oF6-KRgM^QqhFb!$5#kG<=,U.M_L4ffS'@+"!!pPGE<NK/R#_;<k++pfT(98Z\;aVQt^Rg+O+f'XnS-C`WnUN2KDo9JB2a`TQD!@
%Un\'2Bh4p(K]48NqA@r&Tb-Si@!c_lWqIKHG'BRkW46TM]r/EXP5Dl['BEK*7%kbY.S&"3\6b96*K`BgisD-FW#VF>m<V^FA_.E)
%;IssGSZ&bZ$W^]8,+46,W"_To+VkFrT1o_im79Z/.\\6VnS=tc1kAG;AZYBP*/-A>./c:cSj_8/>S8=!-0b_HRkg*jWsF^1=l;Hu
%l+(1ra;Wb"18WHgK'3#ijOHFEKKC0SMn0`cB4T[D-<5cX1uTC?_F+[)-<"G!gA.ANcWtW+_O^DGlVbFX#b[W&UesZcL>5q_KV,/f
%GLsLkXO(^/cWd)Cp)KOp'j&\6Utf!GjHt4n-kKg**5,WJfU`:o$d.WsYNjoS.CG*'(L7l^f<Mb5XLu9E9MjP9OOcD\Ek)7:S:T`O
%rYAIG[&W^1S2V)2Ue>ZU?=9]Nnf=ZtFRK%g#'faUYgrFo]m>&]Ht`[*3MeNWh#IePCH]QJ_3J5DY4Zk,],T[dfpYuNLKo1["8GZ#
%QP$PN7j[LWhW9\3FreuIY%(ChAU50;)M')p9tM-Rg#-YsAA1Fa2l3&FMmVf(]!R(t&M?LNg,1-"*5`ufn096T7G;>Jf-/]7OES]=
%!7gk/Fra_]h'b2B=SoR4gW`\@Xio_uVa0<G%9hOu]S<j1:3"kt/ac*-dI_TT$8j5OLWF+&ZE3&g:\='mJ'iYEeb590bSeTU-e.1B
%9CHs0`%@^7\St;0=a$)$B7#t%nk&'l$RL%c`LqPE<>dn).qGeX"X9=uV7`%0iT]HlTk/3/nq8)#)$fe#ZfRMEm[cMM(&js;itDZk
%W%(muU_c=p$E#[#&4JTr>tSt7\A%eNlQ(UKJXct^SYBZ-ZP6Z[l$CfnMMOs0OS3aU9bnH,3.O/,.TOKmarn-l8IG9h,LXHm;AC-F
%7gR]\^)ahp4,0qRgV3<i7mU+9L;qS=KNd1=PgtbX_p5;_>7g!Dg3%BOS3pG3V4Dk9f0kO$+`hWR:_l!Q-`):;@DH<EcZeuk\6H"i
%aj3;[iNfu>rS*j0a-Skkgo\-Dd7a(9h$TA-h2kgA<suKM$sJrU;J$XWFYP/SV@.TTh[5e;>Cj)o$S6M-?F]c!+5ONB$\]YNTPD+j
%n5C-I#P(lhp@rMc=#`*[hn'Sdq:>ZlK,;-s1o=btn[G0=c<t('au,Pgp8sroJrS2<aj`MDF:$7=Oi&Pg*cqG.-Ct%J.<"*kF)/1s
%pZU0Xqn5)sg[$t"?3&\Yn;4GE:8'F")Z6SNJq,_A@!I'J$*)=\k2hH14@KPp9Iq=9,rD`mEW[k!WL!V7<8D*?"&Y#(@"V&V7&PW,
%^dLkM/iG8>4.+7NX@>opGm>8@.JH(akFTYGF9D#gV*.@.OFS1/RWRTaN+!*Zc<O5NUt2q>\q+CFaWI=*+I[Du@\$5gqII"^$,&5s
%FAi904un;<)l+DTk[U0R]*!q2O#"E)mI(PR/;%pEZ&TJKT'(Cn"F*q_'H_&7?^W-/)-D[iqPCI6;<pE5"sWEZ*@P9E&Fo?Mh1Abr
%Kk!0icS**mN=NMQ5BMf90`<`S;<M.[2sAo_h5P_Jg:abHpO`@Qb+=:dn!P%NhUo=Kbneg3Q8N:n["uNk6!tp8[-?LXasiK>12F1D
%F#5p^)K/5&b8rtS.3R=6ArVZ-mq^/,-3F12XXoPB'54Tr8g6;-VR[FcEE0(tWsDP\JdWoAGip#`r"&YL]CDFbUIQZQD[(Ib_]OZ*
%a+/DFpM*7?+NOZDepE(q<5igTbBF[=/d?h>9%lHOkl*hZl%uJL$cH-nL58oK)WS[u*4*s,.:ZYJ[O\S&Ln7XUESfN'1;b28e%W@k
%_MbR]Xg[tO.7)\F2's6;,T+IcM,rgJo8`o)U]`^.n8,[TRO_3a^,>msN71"f(NNNkUMF9e8A0W9[ZdRJ0rpZuV'DG+FDULY`4h"t
%KL2=3Xa[)qYZa`*9UZ%+d;1X6l,Z1i7^5]e*9]tX.$LMffGL'_dM0a\>;]')V&m9*-VJG5J1sR"P`@:GAJ?*U"(ld13/rG(K`atf
%#`&MHa'^@;dtW)aPGWFio9<*e1`bkJ<l$%2a@kMk>_u(FlJ4W%@N:;,gO"K&>%K?WZC(O8+bTp;-_>[rK6g>RUiaV1Fo,KslLV.J
%s'd)YfUN/a/e/TEP'&&XK^scUc;TU#369m*o(`MRf/4ukDa=^3HMI=D6Uk7F-;/tD_"fj2YR>ZBC<ig9Rg\#dBLCWkqb$40$u`0&
%@@oQu1,aBM*KD0c^)kQ#6\MB]$"bEMEh6?dn<"@*Fa&B'AG'IB'B#U:='1/AiLTfGgd)HL(qOJTW[qdWaA1Ms#4flo]"i3"(5$Kn
%!&CZG(NCI4Lu\,@5H'JSrJeU9C0!?H/MTda_1bbr67.%F!^\/A]90;_5e,RVKW'edC1i_%LJ6S?!XDqTesRZ"9XcEN%K)+d3<giL
%HC(1&#^8B)L!QSbdh1L\P4T$b-:UV:^c9U4mL"B-<r"[gQ2f<H'r#mj%\5RTgC>i+0_.XJ^T*0o61t')pciB":3cX,LK7&gcF)1)
%e.!Ci?\6&Il7_G.LA_,B50GBi'GqC-IFog0)HO'\(t\gU"9IX$D!Fufq*^UW<BU4\Aj+5&=flq3!6?i>qE^_gkCjl:aF5275(rk9
%JX!YL8Dq'BRQLM?&4eQI:&3F:#OUtC.")mVNC*MBJYh@^aS[h_!o1Z-dIc=>^/6eU!E-38@Y(AH=YQ**"'K]@'*4JAJebgfP<kJ<
%iRC=2!,G)dm2@uF'Ts&Ze+^EV<38=.l0a]*Wd;g;76OWQ!YjiEpM0e@Ftl9#jp(f#<:cUL*.AEu8Y;V^Jf0t88B[p"F:"tn&`+\@
%>>R3AeG%epH<!JshUGE5D&q/ZEiPZdQ%V$g"_(X53e.sU=ahh.S6M(=s*7W-k$dSI7.f`JKjS_0Ig6,aSQZM-"cgJYimq92HJ$)I
%$#6;VfYTAB*Ll?$7EcITT!a)";mCW!_O`fs?g7kF9W9h?j&meDXeVb@D!!]XY<hFLEn2^ZT!ddZ4WLkK!_+mCH.5;mc=%d%&K,WB
%G@;K!^k/iW;&`*QQ.<uKd:\=@@([Q4P?,0c1ngC#pW\BSXgU0\!Zt@4s7XaW-mQe*Y61.(do/0(p%K;Or:?r.h0o/hP%50ZVpJ]U
%Z*u<aqlDOATX>3>eqS*nOG8Q&%p+ODJBDs[kX`<We,mt[Wf&#J!UYmY)A3hhq9h'e+t1gR0WMCM;3e=U,?=5k3DpeWo#Y_XM:?km
%"]Qq#3hU;irC5VEaY?b&l1'D@XcC,4^D\Y9U^#Q@QA&2&X5i'S^lBP,/%)5K3!&Gp8C"8&N?n'h/g0gK.,I?qha.*&8K)daE<R92
%XG$n?"telO)8F5GJ<!1XD5B&'UUouOo9'ukj<"ORo%i[qn%7?O<?h+'+J%+6['W-]2+8!hWmH94ophW*,*5MUi>1f<&;h;nkoRej
%JD]slhJ:Vh:Mc?32XCLphqPTsM3)#<9=mroYWI!2EiKq>I(.7)k#?252'P]J^9gh)mskjh%Sfk$$^B4,8W$I!I(HB47ViBajUuPJ
%Dr<EEGL^c*RqM>&53RkH-;KTYBP^dT*UrK$P;H+iJp\XeN`JY^;`MNO&a['Rh,Zb^F$06%N[TGNF(D9hHNS7SPu)%n>n45G.M>.3
%YrI$hA]C7&nNU$agZUS1_dg.=(L5<-JhM*<4*#9G*!g&KjN,.<&fRT*Ck['>p?r0%KBmI'.KOAreR#$CTZ\M7<4f;1>sjg#\X_q*
%kgHcc-u>JpDl/q?[CuCIo:(T6rtb&gA=RE=ni-)2/tD]X6*4W)''/_oPXcYKJ(Y[!BS4@8d/A-n7:]JGGdHB9AF\Nn&=HnC+"g2i
%Z3@Y@Eku.i/=_ZYchYM==3r>(-A:e^4pjn5'tArBXu^l,"%@"A0;'[W\:6N"DnQ[pIjR5Pktp+p6pD<t31;(D1Q^>hGeIWKJ[2'%
%X@b@L?rM9"DbSS2&/_#%!&Fu$iJ\&W(_dGb=t(gK2^>4G?KODiZ5N]keKc!%6=D:e0j!)4\4!L4G9BWYa)UB+]!]@\,nZ2`TXQCt
%+q]=A#4jhR]KSrm_'Z/m2t+JMl"\g9Uf-mF:CI&K7K\St`2T6W#,#)(\=@k97mJ@i=oHlD/6JRuM-G=Lb^^"20+d\W8":Y3akS+-
%:rEPIZ"T7,ZZ=pi%7e@XE!P['*oF:WbCVd"S;<5oED1"r`[JSD$j'=Q1q.X`>e$S>GY="t+\LK"*qPPS3$BO+f*?rYZJ/bUp@:Tn
%<t8%p^?\<uVB?;#/\T#]l=QY8HufBQ-J%&.5]8i84_BrX'/gE/?ST]Jk1V'#q0!6kB@H,liinDJ4;eJ:m+T.BBac4#7^s'(>bW];
%O\i]\_1j^!-j[sb8[LEREb!-"S$hohNaGMF=FEFIq:N<bP_1uS*U`8[_?-T`!jl`QmQgh/jaCcsp,mp,7OTV%V*/c7Ao"IFEkA%9
%&>[r]+$nBn.qtVU5t$r\d^O%MeI_PapO!\hKkEIO*\0D\")-\W_dOqIIFJRd0efRsYE=F3(ZaH@\/4M=!f71/9FlfdY(GJ8or>pe
%A#AOnar]Bq?:n3;$7N;%Se3H]?Rna_]H"Z8B=JetHW4bTH!0UuD<s!8[.<a`S5FD&>:r5U<Hk%iep3,?%b-)e%8DiqH(t.k=4LWP
%lH5mUFcEC>OFYJ8H].0TSO[+46bLLhl=79iS[s92V<r2V"O0Fsm"PhHAWP40f%>=KD2(uk>C3&-AkU]Z@@iA!hd+@DmdRAiA+sP9
%_GRkV.sX#[:8ujYhDI-<0/Y5.n%(Q'XAmVf\mJ4k3(aY5fU^obCfK9[8iA0nG9p8#"2'eVh6gP17ca]TAE,4#6sb(hf?j/Af;Q3q
%/)f,Dgm)hXNpoY#c@WAAiXA&*UN2+(=9_uB6%)M.]sE,/__4SDi)D,@KlS!\W;$`FN,B?E>B'hD'Fu/f@<r>,,UE[ES]1)qd46H.
%@1B2YX&*dS7W""+qrWd[]_9s">7a/?=h(dCi])>5eLcR.qNs:4*/>tl-R+smcX@9?lS-<G9L_+W;r:9uI_sMn(Md+[2Q"TRSaJ\C
%U$4eC;/m]_jPAf+:VT!N@am-2#VKlY;K-eHS;>MIh&Oo\eU[<Qd<#%*VVJbs*eHXj['+hDr[+E#4!7FDEUFAC!\$.B%r4HUY7l!=
%.nHdiL%^ehWXHhHo9k2EF22:nnrZ*ZFN7rF2Z(j&rjfA)POtdbjY91>R_19NM=l#KODIEP&mEQtckHsE+j`)Vf5c*i2**4?L=EM1
%BOCJ3Xi+d.j(G\kLLm(hW1`4Ji93R9ouF4QNoumrmkM;[>4gJ1I7JM-H&YQPGu!'5o0#/5c]KP3Am=]Nl.)qP\43C"]PcC[WbZ8n
%Ydee9Wg93r@8BY5R:!Nhk*Or(lgGO\$Im1.VJP>^/rA:&[Z3h,/grg*Q]=ZIf;P]XB4ejpV!8IWFa">9/u0er<1\I^@G*Q<4?:OH
%UmQO"(*Yu#%=1d`oZ5lJ&bsedGgLJn1Hd$PSs@.c+[J%LGl3(KO]UX*P:)E;S$\K>>jC9DYV:@rWL&T/-noqsB??CS9V21DF,Gjs
%%qoDBWaI4<jB:r1?(a(]`jh;UPNSt.n`2U#@So7:5RWWS"\0ruo9r%<4J(>\]aH?O+)>9UI!AN/<M.`#s&Eb,#[Yj`SaWqlUQ$FX
%`%$`IdVI_\.Q)VC9q_$BHPG5.\pC=6)MMP3Ger^3?(st$aDZ2/0't]Z_WJeMBJWX1j/qe"ou%\r1TO$8a@ac[jER5#mFT+0>1^+0
%21euQU<YYd!2]Gqdj9<OTrgZ%8jb'Sf:kD3Ip%Luj]rjIbaiHBe0`KFBtpo_HsuGSM$J5mpi?'dlXK7'TU\L4nrBVN,1U"oE_n-4
%n<YJ]0>5$/TkhKfc\>&+3SI8^mdKTbV3Rl)LnZ#,9+tG@]4;UtE5q1&EC<"rKFomuoPZhFlAh+XMup!%q,Smi&]eQp\K[^WIOo!%
%]^%H?ETIbSKGO\"6?%_.jF:DeM7l(EAjYeZ(i+PtY3jFm:Re6q)tB@-SHL[$)<a\/aR.ip"#[YXFU^DgnAGB.`\NZtA,qc&<!VP"
%YaJHiLE,^[_K@oHP+>HhZ5?)4lu@S3H[i2?LRdq9dr^BCm=!B(VaCjJRH4Y/+jYP`AI@6:fDOP:FGG88F#_MeEmL(b6D6L%Gd$#s
%3jOp>;/B&Go$>WrJ\\N9l(LH&ThbgsgO\rZEm?/Ce"N&ob_!/3NDRG-@BppEe$&G[G%;>(me7O8][u=_c7@R^A)(rKog![?HqcS'
%KVBPIW78'"RN&UX>u`l8E/eJ>"WUXd25n:YXQCGNXZDHXk-Vh$G^Bj&^/NX,CkZ/pj"1M`qfP;dQZn?ZFZeM2@p5iA=b]AGW=Cg#
%dMXQ5!t2=WWL=XQA4jHtW")M7i(KfS:5;lU1CF]$e"CkPB#Sr_"$RdZ%R(=b/)O_r%_67%j834G%<;`#W7Xk#<jjdl%MFE6Gg^V-
%#Vd:(40T_F87^a:fa`[0N^9ulN.'$i2TEO")o4gq%]Hlt.U$nGb4L0g/rInZoVNu(0uWub>qass.oJ^m7$9]pSW5=58)fZl"0K+'
%<=Km'n/1)3O<"I2?rnQ55>C^sKq1Ve.oLi,b_h5!jYAsb,"Z4K$_#Ei\(l]NQ\)=IL#N-l2iPudaE]_Ym:bSY;1MnkiaL8aNccA%
%%u;`nKmB38KOeon.4U2M"K*ap+"gLP!eCU#LXD-jEVIo;SB0kJ+G*)Dh^pQ`"\G0cLZk*/h07;HUGa;d`0-)/hmTiS;t+g9V-JRk
%m0BDSUTQJ]D1*H-+4rXa"-g>F?6d=lg9F\#0m'-^D[f$(X\cef+TjDqb+"+=XL7&ujX_*dpf5I89b(<8?&[',=G2EoP*fc<p+!E4
%K.+]"KFlVgc>0.kQ%a+H<lc#_6+KH3HgUG6$L4/8P,I7iB[BNM2SjGCm((iaNe8-JhJ(+#SSjMa%^o-ApH1V(UWq$OT5O-SN;[]4
%k?(7+dg_=.M!2=>A(RZZiTi;X*lIZBYB'9fQg<T_QgcOZ<rfeSELq8hSiNJ:/iO-_.p@PbJQj;Og?ERCK/Bd_lFU:hm^JSU?*6Q<
%?#GrIG<,.1jK2L-\HZ2-NV+nobb4gM>qT!-7B>lt$/-5rEEqWe[,0qW_/W,cMf5PP2Og:mCH>_`n:kc#C1LT4&i-^]Vlt.^>-E"R
%i9UXhPN>9Wf=?PRJlkC4=2NOcGE4JL2`A?rN9P`"c[h.BPRmN!"L6<JMT-+k)XTD`2n*Q:.>48`a*Or:-GsjehVE'G>slB>?%P_]
%:8>$REA-24ggcT,S\"fr)]_\+8di>gm(lbP1$A[qmY7U+=>ua$+*hg7pPtoh_%SjT\$Sh#2,us;(@^"@?l/5'SY\Wl"a@K8@G=5s
%f/[35lrXKrK\nB'3sEan-H;hhI]Oqd:)aPs?@t]Z17BD*FHehMXW0R1h_-@1KWq6'K&Z]MXG2e#qZK_<C-/V1*Eqp/ZQL7\aYgdu
%BG40uQVVZ06\!p0b`5O2m=2m?=so;Lj;*:'i:%`ngog2^=@snpTKWN.\tu'P0Tg9&X/(IO;BcQEr'UWirSad"Z;V3H,`d>+rl^_[
%B+%gYlF0L:jfYRn8(<3.Q_mL27ZG3);nV?OR/2.pk,L2.[!5:`b*kL:R>T"Xf7K*D/;@U'5^H:\54*]j(7XJlkaf)+o"92TFt\TL
%G5G.:^W[?7)).%#:[I;f'19TMj,]/g&lgf*beR`dj./J_oHXCj]r5B3i>g[N9L51=H95!&D&)h4#9ionK`6.<JbBufV/4<5(:F.R
%lqq'U,mY.b5*^6%Y#/1b7"FZF#;3,>NPXJ[H]0Mh[I)hoYNd/RpV-*f7TTMiR'^_7M^K"FU,HuC%eaCC$_5#<Ki!P(WY0uT@NpnH
%'jjG'ZEgo+7:*f?AS8Fd[87Nuo;<\]&5_#`PI'ohqW-6&[%PpaSp#WHMU@R'W=>MCi`$KM9N-q<+Aq3j%n:?D6Ai3W46RKdn*)53
%Pnd+%XsuuRO_p(N60*ab:dm\h%3[o3O`)TS9DnK2)AUgQ>PQV,8ACW$"gH%o>>@DaLS2a^bG>,f3W\3]:/Nq;5aqV3j5bE+B7IU.
%%H8Er7dnk"H\kl)[f(n]-9$uCg0G`JV]))`3AJF',*GAj2def+K07!j(*gg/\Mdaq-lQD788]=R5rf0QDhoP6K0RVgk9d-ibo[3;
%T7*@BmfWc]\KB7OLcjo:9!SWVmO!sp48!3YlB#p!UmTs=N,@JGA0E900]\?M#5SL\#LG%l16RB"*/gYr^`G*uBdH`m<Dkn\EA=/m
%hFcH&`u'EL_jaA<S6I+nr8&sjTPF..ZM4(;RrPRd@p&&f\t3$Pqth^BQqPTk(<;08!#)ogciD+pa8q^QLE.qrlSfeeT'fGWI,[LQ
%h6J&90BM[A+EM*tH&XYdK&o^6%MU6b=FI2)XDNVf_f*\Sh4[V^Xp\`4F$X&,Whend80^Vf/b3UD+J^+WBc]i?XCH#iTRe=9)@ABj
%\c9Cbp*8Z\2'u<4;.Dq.9M%mnG(Il7Vc1DNKnAZ5*7lTl\,V3:Cl7'&$-<V>BA7i661elEVT1:m7k[[l69\4i`TYNe>Ws$YFU`0T
%V\dnQmP/VQ:0i@IN,=s";#=[eE;0==U+eFJ'TjkACr%`&Y#)+Vk@M>Rf<2;H\u(\,6W$\PKa"$7W4LaeO(UQjH'bHB7_q%2&T4gu
%Id8I:_0N<5D7W2:"U6W1a.F:.d\]tC2n-VmFR1_9oM/],8&t>4!UNQ@"In6P$<7JjeonUj.Hmp2[11FSmVRTsW6KW-oYV6)V]qB#
%+qR$S%6QhP5QkV=/5m`&A.aZu>aKRI2@D7+22(_#\B73E2'QA-F`"#35*?P8*EaZI/CjtK>ruln;]p,-!tOES"X:o/0H;ZZMA!Ms
%jV3qEj9lu.fEL8b(4iCkFu`(e4Bq+Q9ufV\_I]kc,nVkVjEEO/id_f$W!^gf&B0W$+p.<J)u7,Pp5XaFaPK!K_.*Ub>.Uq5WO7LK
%Z2?qidC.Km^)NS27!0mC&HNWOlRJk0KP:8j2!/s1R(nDQHI+?aiW?*54$iE+7r9t`Y?%HOnJCYn\Std=&fpbRf^+4/8e9f3qRYeG
%kT1sAPJ8N7lo:Uu]%2T3"9Ul5!\1aA9"WJDhct+-P0V`cnkp%m,?AP(RQ;$7Zs*<m![>u^jU^*7;Kd:R83H`Gn%F<`)N-+7(K>f*
%*H:q"md'"k^8^CEN35<+7`c3%(40<Z'-4,;pY]Cg0t[3D#?q\=*p2,&V55;@H?.N9?9rY_/$Q4'=E</rO6cM?KhN_X<=]>GAT,d6
%N(&6]lK/dD.Qr&F&O\h:FjV_D07$`]qgLrU>)mj!/&t)>lmLI<"VIr,A^OWQ'@P'QU1<"X,$hsbqt@YPf#,(C']q#!"_Tdj\j(=]
%F&:cTHs_b>c0O6HI-JL,`,(jB:XhZj_j=L:lST$*Ee?snKR1T*oClo3qN\0ZFUcqN@Wr^A)0^#P26(D)CsO&AXB2+,AZ'P#'\%'8
%%)*S"g-*H\IdQEX=(.%012nP%EKR=<-hpVkj<P\(AWX[@_Xtkf1\)C;qT2*NC,7uD1I=9=Zk2(K<NXV736a?D8u'q!<M_Rr%:']"
%\8,@mfT&I^>H?-[%8>;EX`cDP9)N*G[5tZE[:[7Ke3Yo+4HiR;()$W)_.6P\OTQ8P!`eM.*6AJJXd!#1h.3J$U"&ASWmmI@LTZMO
%p\b.ZR?k]UWT@Q`QCQN@_5t=#p/n:?aK!]-`C:r"i$PC%=tjb\+PIo=MdZ!YG`5Y:FY8%fdLd(%CLnt9;FC@cdF(LPF0cMTo-rRl
%;M1W"4*QT\ACG9(2-cp;]9VGL3*UQ_l5JB)+;]O/GG;Z[kAf.E\egplh.%/gS[tE&_PXTY4H[J!P%!e5:ZRQ#;n@D8i3p*7kEhk<
%H=uHV(nQkA?1S0(O7:S+lO&>DE]i7:HBN+?CK,&1LFZ0jYA_bf,N$E5=.%$F.$%HdhPs4JI8AJ,CM7G.WV;l4r(YW1(c[up-Y&Wf
%iLH&K<^@Eb:nnc!LtVlh4?'7#925&[LC5MW!snP@YE@\.YS:pN]m@e$;IH,o+UT^fq:g`M<f#pOfjH4>[YH#[&+mKaP4_+r5$?8S
%-sH7.FZ3KHa>S7ihn=BQEs-L0GdQ18:/P![3%"N1U(q[WjGB;2dKeP=F6-h),q2BrB6jb*!eEnN@1N^9<iEg5aRr=j$@X*$fk/_Y
%$V-*PX#Xera^h:8m8@nHU5<?<pdK*[#PH&dfC$V&fBtBKou5&PIm"kA`da%H7_4>iI)$m$J!%&^^d1TLM&HIh6Er</6Q$(_loU(P
%_4OfZm[`m/nWCF9]s2-EFqSX<VSZ2/!@"G!S<9WB`Nr30r?-o@*6%eKYmU<f$_W\_<P9AW8OlOYMYi0`k(05RKOY5oTi'W*#KXfK
%W38B=5Tk^(90pTA7/6gQqF'Uch\N=(Z<[Io9`MJcgn0uaH^/iOiFt_p#X!Ce@J`Hm%k_D/.nIZ&;iL`Z&5`fH4G^Qa)lHm_3:l8e
%"s'gn<MjsTMB,6c"`=i5#1b:q`ZX@#%L&[JJPqsP)M<3Obm[a"q>Ig,#CF>U0nT,MVZ06g7Q`^M_lI@S'9,a.JjI_S>lAQe.H+-u
%?0L&q3bX0BrX)Rd7(;Fo<St^ZXj>9!>?Z.6s5oP/lEPN0m"t(F6r8Al55fhg*h:5#Ll6"&m-+O-AY):$^4_+J@4clQ1^>rGg5Ion
%"_#:P$4.Dh6/$V?]f"KOdKni*F.dbdj'1u3&;+f_J3h>p/=SN4Bq;4ln-]$.D6BGH')6GHa`j"8rOk[!M$g&Ma>qun&_`dbKh/,t
%]0&mlSN<>,Kh5R$s*rtcb#KUWr2VaPY`qMp;^95c^^ph$Ob0eeA(f%XVTr=QpW7SWJc[_Kq)Z=5Kmk7Wanb'KCib[jZ@o6N55^QO
%YSR_DOcs]>9]\*agG=2%XD!3&.%nY9+_+%t/@EXI[lr&0T+qfElEG[(n_?Fidj-pZ1;\KUW%Fg^^)ee.iMf>jig]##bd)P#pX^bU
%;\k<s!_,I<s7K?G*kj@ZHjWcBoBba^Z'Vm/+8ZliIOBW_A!$AS\t02jme%Z_,8,eV_@qh6,/R[),(.2A^Zd+1i"S[&o/PM1MNkh3
%"5^@;f?_Wd[htif%.(Y`BRberGojF7MYgh!BR>F)-lRcB*ToBS#*As@2KpQN5bQ/?Wn`.8nPD3lRJQn$`H-@fG8oA@92sHg%NcZU
%i>0rQ4-%/6Y'[O-h:Zq3B!=@>rEdFq^W@01;:-qjTZ+6#\/d.LNCGE^!!_]*NM%VVWs>An7bm/\E<b9KJ5Y=UJ.R6*^(Z0Q*Y!_.
%A%1k@`Pi!O+B&:`#'kpmZc2DP&Eo;sdnYd>.#;us$opjQFJR@N![+*CgUeDLWd%[K'tgGgO8P2m[XV(P,McQ1MNH59.ag:P830Ws
%FLWfVQp+"9B&S6L6<Pp&)F[D6=*_/l?bqh-"M2RuAoc=tYtlp$e0$`\V52rY"\K7fr/17=%mZT]O5o;FFD$*:BO>0ic!kn^qVU4'
%AI=$WW)J\a<sSDl7ZIf@U#t=sOEa3,A/_Be%?ugAQ[W["M]sT+ORW2,/Hq9q2<B3s+")SLhS?'L?s'Z,^./6F_\#:shn0\]>9K%T
%;I`3sX'Jr11#7CaDHKO-m#EK3'KPd2]9%(UTo=Cp/Vpf?00D`2,q*e+8jEU.=U8aoQ]4o%k*lLUf(Bs'I`p0o@c.UJJ6RbKYUbss
%d5<FbF:j/Gg"tLEDl+D%d43cIVH*'AZub_g4jLiNaD/X\_,X1l%],kLS?i8#$O8nB]C!gr+Ioc7.YYAH"FYq^3c0[rd'!uh""g.m
%$ADnb6,?D=Xn&nQn@OOdQQVpUjFAY`\ssLX31srhJZ6+V=_^/fM[\]>bd(tH4$*G%O9pT/lDQmNP13P@]IhNq>+C2C)\jMU]Io#5
%ElQ1=^t:msD$4[^IIoSS3Y).Kg=d^5H1[3LR!obOC`kJ5eg7MXboYdQNk.>As-($'PLM\pa#1*1T,qjKGP9L\Sa9*W^ZR_e]obE[
%>/Yl]AP_#$NAe$C#M5S-F^s/-2;b0,_p?MPp[2=J<isNeh'37Co!g5p*X/Ru%AJ-qNUdRM!XXG(h!lRF6%,i\n#oT:]2@t,7!/q>
%o[hSs<&O#!#+I^59htCqo=@lPmr>Z3SU`tU_V<U9:oIRha?"/5n@V6@:,pk;\J(QF^>91V4N*_mk@Z\!'+MU+)QI>B5pZ9!7A:p*
%7-qmiSAP_MddjV/ccFMr("d\4oh$'%,T-]JlE[VrM^Y*l\g2rI0<EKS+=(TS=B@Lb&U'Oor_=V7'.Yf8(rVnjYt7O'N\!M9'H==e
%51Bo-nIoWM2XE#p6sprRas3iQTFkNE,m-69$Gfka83o5b+e+p`Jdj3hi,P@]c+X/:'8Luo6A<YmhX]lQZ41/]N_KZ]88B^i$ipe/
%@/<>#&7HhHhBYh>$DQMNf^!N+L`gb-`[W1bpk89CSR=e:#E1E`N`s+)nIQ%+KOqP<.&i+W2S''M]bnJS41\uL?luLig%5>(boiq6
%0>rM>[=B!`8n_Nr3'nKWMg,`]Ytu/Z*K)Z5V&XRgd"8$u$6tgm+=V)l+W4ZW4Q]<nQk0k$2A<4X.&R"GI.GC9I(63'BR<3$Wq,Q4
%`Q`s];lBA'eiR^&I0e`bJQCBV5/=_U&ZaGb]mPHd[tR&Lo892I90mlmF+.9T*Eq%i!67,j+u%74=MTIti3KM,7!V4[9iZ$%Wiu"m
%5<#M'928/oE1h$bb;p_Q?fuZ^UYF'r^)0NN2m]UW5e4P`;NMkVXBOd#;<rU]I@YG8h`R5ZIPTZjXE-5BqP;^<B_topa"D6>jI8:"
%g%ofnF1A?.HuBuPGOd"e6$s5P\hN^JrXP1=$,gVb/N4g7/9Qs(q#20Xo.i5h>oIhifC.ZA'uM''2!`fo4V@U*R_(FomtHt4O&iK'
%d;M"Z<8*4ihckRbQn;*aTKa5,3^]Du5BR-rT_a+M>+WgZPQ/XuApCl\l+k?](a1Il.Qks[KVY#h]L+1o*sF#<#MD?t7L^ZpkcQtH
%-?!0!MiPq)MIT=P8(E`%7lAI!*L2rso2A0@iI7)R3i[p8a#RK@\+LA(==L43+t<CX8_'M78MpiMk)E"N/0d!9&9Icbcsbl9/u0=F
%bTgMn3siJ@.mG,pAf$OpVFafWcXAHbrBX"$CLHUEGd_>CfZoPT]ZeY53Kt3om8#WBfD/rI,Q+!A+qrc!m6)pVHn[YSA86@E68`+F
%2-co<TS:oTWb'e\XoUPnGY)29\n.dZfUTMhD1(`/2SSm/Cjc9(Hp\pr3%="Sc%iK1bCL)Zpr&aBlK`5-I_R]6?aT2(95oG=BC/Kc
%</-?:-([CubRd8>:65HY6Ai8SgVNu>$:!I4@M\V6RbJs`l1,0)?Ci.a$ME?2-oe8K#]ZBuG73<g3qUNgNauOp$5U:g0bP(SSi^0<
%dmdt!AeLBhpLFiibc)RZ+U,aeBONV!KRB\J(f.UT>Q@;%F@_-/e5DTan6i]q',?P>)FBftq/h5Lf]QrOJn6@JqkEZ-1>hDZN.<kB
%^/8kAU&Df+D(sT9NhKQ7Hc(+@D!ppSq:h5EHU3=#TWQ^U1/p90'oL@gEZ?>$7jZQ/K1ZT+HGgW1"j'Bro_gWc@4,GED=?l'7TBlu
%_=l$V?A5D6SO[+0ini15]kH:"-X$2PHV6G$,0_CW<V`5@#l02\'lI*W*UtkEd?a]7J0MPe%L@D6_TR`d?tM]]CJBnM\3q!@A>5"C
%)^[CdflR^,GQ9UM-@;:q(;CfM)0&!qY\9]1)Z;Xid:V.\=bB1:>09`UjP7oETs(-mBBR\,!<sB"!O@r!##O@AOW'hLg+f9sr`N"t
%nl7ug[0EVUKCnc"32nNT:)?X27sQn@)CotA.%>jFP(MIQoHSa/^ilb@HT?d:&a;fK?g5NT:cZ"f&bcCW1R;]2_ioa$3E(<eAO(*,
%17]-Lo*9cG:g<$q9n-JW0](A.a5>t^Jo!_'<%MZme7dr/5L_Vb09F8m</n!;9%G+*OpSCZ$pnRB2U42'$Ehb5!XaWTBEJ,-S/i9K
%Co=Dak=tR)(Ti&A2XVl.)4<eNOD_@j9f7O_e6a=$4uqbQFL@l@VI4YJUWFHY01_Ys1I%t3C>C(iO-[JM*u^rgU4oBHX[8:D-$qln
%mnkCBO>YeF>>U/?p&-bJ7&k"R26(GrfOm]?X&.WVdjXQ7of'4a^ZWXD\)#]O->!_4,Eeub;_2R;;CH'%4Q8OA9u[J(,fhm,`KT<c
%n^/h0B'mO';`!Ajl8^D8A]StuWmE)#8Kic.YK2dEa#_^.A;]NM<KPk%f'(pf&8BI\'I7m)K</^5-,FqDiC@";WC?ojj/e@CA)NP-
%ZBV)U8?")4K;c45a,*>?-m[7mKr5Gq"[uTr!.8YE,DI=BI,km6W9pt1",r-L&@6\F'b9c+I]OQnX\WZ`^FD(-@2@MX-JtPGc9Ep_
%_VW"POe:5!k\9jVkUBZ*=h!8,&\QuQIX'g(NfYd-=ae7YTO=)r=)e@(:MD7iR$jnB\:W4)>bV*C5&9KYlh7*Y3d8)i_Z5I4kbs)h
%,gM(Jho)LpeK/Vf(;);d_bD+OJ9JV`@gGb3Y1Tj68VF"QM^(,AAP5i'O_B^gd,Qa]TQq>T@)%W;6C;VN`YBGF:qXN6b931f=2n*V
%p7bp6d9Yr#iA,jc"^>3.]Z@+qH`X6[c)T\Zi1+Ij>j@e),D2iVI'V_l2DE1HI(W:&-^SiYX6nVUEmaZ-=m[!,.UT#PYU63*I2;Xn
%&.eINUG4P3M.X$[i-+&sYt.uSp#5ZhUI2?6.8?'W#>^'u5@LQr+UYiR`^1Kk6+F.Q]@7%+*(rL7-l5uU5.S54OsD$dE9XFoTgQO(
%l7%cXP*C6PCIJC_D.$nFC/U:?3hgd460W\_]7G*,SAgqX'96K[+DQjJ7s/+aJNOY7=9RI2:`BEg0@L9I%,cO9+mp@<:!+DW4lLVL
%@-`X8oP/GLb0=8"gT/Gaa+`tg%<><`n`N?F\(+hrQ/tkspK-3XO^6-Y/Qs'^Y+t@mG&j:1'fl0(h4RXJTpESFhkFsH+M>RbL2.LX
%6dd<\Q<g8c#1t</0AR);>':sB]nq*`OeKGNa&'3Ch0t@73/8djlAu?;3rNME3%q3VakWOuaGVR"V;ab65cjVGclm_VoLLRsQ\#7s
%[q/\V1+%!(1``6N-!Co-8@gs#\ssc=890+!_HtD@A.lT1G3B1?3JW\1qJeo?&S9`qK1837)F]8e-$dGf;`!*.C']jZddRQH7nshU
%5ZhQF2jt>(^f'\0qW&u(Qe-gPTV81rK.t3[PZW5t^b6g)T6/dabUjN&3(9[mU%"j%n8%%0.iAfunqis)&MUG-5_>dZNiCAVLr>EY
%g4uf,&=D,5n`9`Y,+eu-52'R54`&m78G3=HnUj><Ta8O1_%k8A6XNDF)*+`jOg]?;(/N?P`cMnIN/?_\*6/?-aX10,`,n'd'1,Q^
%<&r$+a%3Me'4MEM3"d:gI2^S>m\[+m-boGLT&9/8aA5cVRi_j18L"CP70Xse>>aMg^83%M"NOcq-qoGlTX0B-VW<f:e@S-\o6]rY
%q2&n$Ous>MBQ0KKHOA3CHVU.l:rMd<G8T%,#gQ+0pMS>a"//bOiXP0%J6tFiH]>U[0T)4&C=tJEC+,>H/)6l1A`n'cg3)p?1%E8l
%MiUG+2sP_5Jbj")G_6d)daTG$7cd(8cj4i8T&h:t$I9];P">!uLr(A%"TImU!l_B`A7l(J"/*ee[mD&=7KFAd;4420j+,i@,ZE")
%<-Su^6sh,t]XNZJ``@YrV,V-(M[p5]Ca>2_<#emRALK>@A4='M66/5_iC?!OEbP,Xb0B)%o4(,8O-FBb$GnJ1@N&'07!&mS@^el@
%8<)WuPbC^7a"npP)N@)AblInLEA^Ug&><SR3>!"kP&1'9+f$pGW6G4\3qj<DfNsWlGB^LIM]$Em@tr`&@sd1GcP%km)Ju[//gi8"
%:@Laf`q%OI8RA^lgfb:V1A*4aq%@+slsuGcj:DHY1,!EZ,gJhG-tOME1m_NWJrYBU,H8T]=k>S9Z8ZGf`(I4p;:TWC=\9M+)fuZ7
%'MdX5<Y3B_M`*?P&C_B@#&5seZeZ7"Ues#in<u+.;HtmQHM);m!(qeu(_r6Kb#2pnJ"?`/6?pSJ/jCqY@2$Kq&OqHUl@tpCI<,e0
%BKI;C9^s)%2l-4;jQ\"g0)/cF4bC0;8Of'kZ9mFSRfJ$I67;i>/nP988iUEN[F>A"pZW<j+H!CX&CaoN74Qf+)J<%jeiCcLc\Ua\
%(%fV!\SJ'*3t!6u9U0NJeiJ#ab%>Z__N:IaQNO#D&JX#t^;2Rj/]I_7:'ac*e3)BEjJj=?K8S:]\mUb!(?eqP\"SNfoX'SIlR9\s
%igc"Y7To5h`kZ)G6WK5,6)O:OWo3(F3F<r6*dScrS59s3:)S]%6J1'n0<0?XMhulBD^P2VNN<gj80jU!O2mMm8$mRK>&FlT-+cB.
%WJ7%3okn'Ria_9+-)%&gdR[$#?Q=,c:j(`j=Kop(JQa\Be$+eUGt-=MY%kWQk@I/ml5J1f3-i]]6'lbc`aE^8]GXg&^)0s'raoQC
%rN-&a(F\"gXg"I.d5uuR]]G4$YnbRWDJk.]^02OF,O*5(5r;c4,D8KB>3OFVe=s38X(\",LVuRDU#]71FDOIpBQ:AaMeGLJ;&J"9
%dFb-m1sU\?1a7`TLl5rRPeQH+)C]:J9QqXH"`^/Be=pIu69,pqaMn^lZ>gX"+qHkC^+?Q%K4*\92U_Jr?XtD0X@0P=`X],VE>G)#
%JAmFLA0Y"*3-1=DI3i\N#VWo!`Q.1RS6@XT&-<@bRHaWQ;5==hPY94=3WZK4nVBHp%$@r<6D(n6SI%qT>@BSRGWI>Pg,,TAmmJ2_
%BKbJUF,2ZHetdrS`G+j/Wsnl)?#]M3<JLj^(Z!p<Vi?`L[j8R0h.rg12Md#.@)UN!V9[&sgV9jJjHH=`OltVPW,iH_WHK`SOfY]V
%FcNck9aFNUF'q$9?Th$X8!cm%eYRpC^K[ajA25BTGg(cG(JmMr"d.)J%dBI?^rO6#._R%]_s;$u:UI<QfG3.`jcbVVC#pQ@8R2_@
%'\duJneIs$^-]l_a4j[!(GphE5HXhbV:Aagp0t-$;g7u5kqP)^UfaF[!/Hh(_6NQnji"5N+"m$H[.4TF5--7VApPmZ.t9m3j\L!"
%I)J+jDHZe>?4<`sNsoTC=o#B?IH@(^]/c[*o"QhhdZjrn()EDa>(,?HXr@!#/;TIBOIcQl4Xr;pq;umQCG<$<l/DMT[/DG.O]/!`
%lPe;2(eKX,L['Vb7U](p5DCH<R_AIT9#ntk>H_=COe%Me(#Et;nge=>lmIMd>Yo[9qjtF#=)\JGmrtYjM=s'p=<&kE3nR^"Q-VtQ
%"IPkXI"S/,H%aHNZEj:'CiK#[fc40]!DuKO+eL/#8Jb+`iI/W?Tg@g&[$(5fE0,@tDo0V%Oa1&fj.UoFo<9dTr1L2pE1e=$$^ld"
%']P]41>edjbg1lnUViE'+b;IL]A9pt&Sj$DgVMtAZ,c:)>eWQUQ_+FO0-Wa@-E"D%KUl@A#;4n8_<1:WVOm*HflN!#PLY[<2dFB2
%=.t_21m_a?6B;YDR!ekKlnLq<O4Pe'"0>GP)QqIQ8M^)5?!;B%l5D'!G`B2rd^%==Cei`Cq<-aq8TWp%`2__=mfES8I\M[D6[#V>
%!'?(i.ER,"?l.oeUCJ+!&#MsRU0Q&?.7ES*=^9@/JnZ)g=Z3"6SRDg--SD33!U$2=epol!J;@WF5'@)BVG/3pQ?'uaHOZ!7^?UhH
%'`W[qoehmsP,C9fgWqd"bgG/_]J:%DMgiS7q:V.A.8b,9dj&7UU`V&^\eN(UR#060KT+JY43$2-q8qkL-<aY`AfMB:Nu,F/glt2b
%<&ErmrG0n*ZjU3%'Vu0SH]HR6f\Z->Q&5ON>Rl,Xk;a=3cC07/2CLaY_V3:33[d^Ya:TA;/nS]K*F(!%V+RfY5`)X@<PcuUIl2r9
%P])u<.]/KmA43Lm::$IL#hhg&2ec$B<h;)T%fVWQQc$!<0!hu-Le`O:KhIluO?$k^Rcnj,,s&Bj+?D4'KThE?3Xs4cEa=J29I`t[
%#GRCn7GBgsFC5@=?.)-=6S$QP"UBU02(NKB1dnKfotYY^SDlo`9ID"Q[Ek<+FD,5HZf(1>Kj0_j9ICuX*_-[S=:(I$rl&7]nM+/!
%Ja"FO5-Zl6eG*m>8,dL\8e!;S\ONj0:!AA2Y0d@_VK<q,Q_=>,ZC5QNC"I&52CIoec.c`E[#MX<@pJuW>UP/kjETTD%1R1^6K's7
%2+I/\:Td'3"n*Uum9lR6bP@ehfZ5rHQ1)M3)('9Zn%`1sP1!+>e"MKak]4OaaPPfi\qBhk7!,7eY`2CA*U"!D#2mRmFJhE]13ZL)
%e"N&pb^tJd,RPo@KTK/CANLa.9Ist`*=//TJn@(^o,-i:G-Y]V`/b#a-.\IC27Fu.rQ"#Of\8^<n^DY^rJN>=O3tdmTC!op"03s,
%l/9F%U?<@</$HKQ<<YJEs4)>I.H:b'\IU4FBj_ZS,p>>RJXT6_A>_dFfpN!KLM=.6A?s`^@hLIX=NO>.mHALdPF^^cbu^$u%]s8S
%(*$k_i51S--9DBSM.u'4Ka\WUek60=D&Y=`Bi$8L;CYqL6S$cV"UB`q5=3b%1kZ]4;^'Xf$8.l+f-qh25&%1KTp=rfK!QC6R38Qm
%3Xp+S5Q5Z5%Q69DRkM.p;8QA:;ik:JS]*DmGPL50m,J;8)HKm[K-Jl49ZJ'Sd0S!F4g:(g<7N[Jbmg[WFrH.\WI%PepD>8oVli8)
%b>8MS;HXCtl\O7oO)1_bB,ORH<jkB-`@Ym2gBoqM-F#!jj6$ngVh#<f!/g.Xapl(hSIR5f8!amt;t)39a\GED^poOJI+a>(Ja='f
%K7nsF'KepTL$Wnp,s/Hk+>F&_?Ws.V?T=,f*(dRkA-]0kfnJd#gk.bOSH9JT;HC(*0\RbR\OC5p5;(R*eclJB1$CMR:j@qA[8Y]#
%Y&]Dc'E_"O\<<Bm/n?=SnYL41>'#\'$?jGhX#Z9'&e$BCImHc,A3Hu8'oK&M*46&l&e8$1\d7k+U8o;/'Oq,g?DA[=1h79<$S#%>
%RVje0`-PuC_3RTeXs4Sl6=\92HT90$K,Ue%hVopk+V<gh?QdLn4N)J7<P*8(ZKW-hYuk\cMBXcKiLe96rV<-i%T"o4!7Y*iN?kBf
%8WF<Vg/G*eRlDBDgd/jT>q5L-.dngDHt;O&l"J"R\=3?t[@mR$m556NgO5OZc&M[rUI09dlm8I):sc+(=2.d4k#rTn9^k6X6g&!t
%\uQTr$`Yp[hd<.=NG:Y;mCGW,%7iSdpZXb=2=*:,S$Vg_g+>Dk523(&M&ZEmEEnVkh63`]@*<!6"ItB)+-55NFFLt\pg;5J0J=F,
%p)`OGnYC+(mFJ%MSq*OCqW9f2jlWNLp'W0OiS/XK('lYdoAShgW'6IU%n:]O<[F*_c#Z.nbu5AD2bu]hb,pS?St:YREqAqqY9k?O
%@/P'YCM:G-![<@`Dk7&7DP!k9^JK6PW^Ue,"Za_6E4C1&YRGP?cC60bCp;W`THhXnEu#^CJ:XT@qV"O",YH5F[<&F$]tOC^?YsGZ
%56f'[WU!?T?3iCJ@S+aT+/%KX#a1TknE[g&5ue(Mj8VR5"X!['&A4,lCa%`iY8&Vpm41BTh+@AOPo;j)^H:.sMo$@[#C!-*)MPA_
%%3oIMDqQG:CM:b$WC.N*dA:EPES+OcDc2b=YY[E(4\=Je$jkF\Z3DMFPQ6Et81e5"PkndCEM&/#eG(-r\VR?;B?*iuB?J4/W*nYb
%#W0O4&KDWV3\M!4)T=!881I#s)Zm3dntm`1iJr`WHm[V==Ub&c,)CI&FPlNDQD&gVm2t>0:F@]iJ?Wa0NN.V`-(aDc(FY4j/Pt(o
%TI%%8Wh<.282_.c7MR2,@`Q7B5j2:JoGH?j[<tfW)gFu\fT"oG0g>8MG7sIL%0:X>j@EWT057QBmmQTf/Xf>t>C0WdS,;A;AQO+2
%U/q&q6>BL_WppeGiUgnOQc#dh]!#L,RS@3a#_^*a@A"dmXVVA8XDnd^R=_5U7Zp4ei/_Tn/tWb8'b1mGB^qpo<a>+PJs^,%6k=DS
%+Cf1op3?@6ON</_US,3[Y4'nV<1VTRI#Z'H()1\*ZL*%AToW*KOT/u\L(ORo2kZ)46\Ma;Lm8tg'4)c,-j"1)7tVbuDF9[Q3B6+4
%P[a).g7TT+#,X.jA9<rJVb,e#-#\Ne$89DJ$?$0!$3gNA=ScZ`Kk%lVL;o=ePYTbQ5N2Yi5STMjM?M1i-$icuJT"EKCA2u'A+6CF
%NIm5trij'NW`MAZG)CpZU(6_XNr,:kBNk*gNonuJ+n'>;k]#Lj^OZSf&,Wu40o'=i"+oL;g><68qcfc*jmWp5a8J.u]ou<GLgQ-F
%V#=QmG9G46^0\t]-:\A1"W[CY81M8bkPcebKu<loRS?i;Rh,qi41;VQk4Vj>dd5GYDf5#&8S%g`?4.([XOf9'CIKW"&'4H7mR_W$
%So)E$M#J/qL2GFZN@Lg/>BYiU2'@g@Za]/HZI:dL:>MD^Xo+o6/&/4AU*q:AG'E"A5cRX+l4#LtV#J>QMtjL:>Dl%V"c@Xm"%1q&
%s80@Tc#`];V;[91MO6lsf-D9i%!Nl*dMh=0I^5]spaYR3<1N?SpUm:b,$[^m;n[N0:[a_,\&2o)T&B&?'+@El7=h>XA[EJp1lB?p
%_f!h<:1NGa6n=^6"V-b0"*sI2_M(aVEtsRWU\S#CK<t"a/4N>0,LfkI:adLK,o+GdO\B2F2q,oM7hC+UUSWDIOnlNh"iAQQ$oa\i
%aU%QY7MaT0)oZCiIR;FNBl"Es_Z`cBpVFZ[0-#FWJne[iJ`U!g(@$0p7UnEd$]<RZ?71u]U50V05ua$(h.5Te)F(GH%FR%d7]8ds
%YCT'u>qCZ2o.n(K[k,:][k'[+)IGQNIf.soYQ+Cdj+%&Ps74JXs5eb/\,YnMIhCVrrjVq,5Q6?Z\/b*i$lu>8>8pQF+D_!i^.!Po
%s7IK5c2[<0m:cEqG1*btVLLo`;u_>rqtQL2FQ*#RJ+cZ.s$,LmrmSWVAcMQ*re='WQON8"rsO>R&+*0mZXNn1%E%i*s8IMl[sr:J
%oq26D5Q%!abdY?o:B!R?r8E9>cNjL!pk/Ln7P*uJ.2t3dm\>p7a+)Hmg@e@:qZDuh'G>']ZUf,VO`E"9_+9CQ.hMGN55Qh"k:)5V
%"\*)5*!XkYkA/.Sq\#]t`9YHVaM[J#+">R(MPM@RT_.^5U<d%2T&PZM-cN9Vcs)F`o7:!fe7nP-A`:[)H.*>N0Guq0!<tYmUSLBm
%<$43-%Kda]Xs&&T-GC*()M)^Tm"jf]^tdR<.u(\MW!NYkNVcquNR';8km2\B-[fG.UKE5>"BAE)[00G9(QEC3a@Xft&XF8&i7VjN
%CW-k"Js*j1&e.Re8@uua6T&ON/Q=:j*$]g?-,;OT)RYhFC]D[V;O@[bfVBeHeS]>b=SR381MpRiLSiHAC+3KFpd0g&7FWLAX.c4A
%aMA+WrK*pgg\NC>hCW!_.Jj8me]!K0`sn#%9j0!@!JKo:nla!WZ4DY-W5hc\ClY3\kiZ2Z-`-:/k02_j5me;Y_1A=lRefWZXsmb7
%aY\^sF8QP<kX3](%QYfQ+GBp:bTLJ"CI@usb(%`/5/V<f6m*sA">Q"^m\`n"@7o;0EhqHGm+Gn2SYml4A515D'XO"VPE%FcU/a4Z
%a#9FF")67-o#N(pqtb(Q5sACi9eA2YQ6O&\`/M`f*[^8BkX0<3Dfr>Y6QpIH8LZq-R(6'p14fU$M&i%IPU]P0aK\-@CQ_blVBQsj
%JB2eK\JSn#`&LjDo49B;#D-j5dPn&(CkrVJ1Z"KRP6#NTKaIF>=;QLNa#9o]p=1<L*'-GAn#87"XbSW<9j1S$T\49T$qoRH8]tSI
%O*MM?SWq8WX1o>$9DpB\&>P?P`cIL*EriO+nFMA,-#Kah2G9@+d<lW5"BMA:_N;@'m?(kP5'@'k;$m/h2Mr[V1>QDZ(SQP59hANT
%":t/Z2^R];YU"K%L)RVe=>o?[p;`bLGYsTci`?g3eg3Mc(\%M(O>h%l%uC6X=3W?<0W3"r,omQ$N=:-@F?gj1,paQoKlBZLgkV&N
%2QRZ)Sual//sc9q1?AV8-djN[Oq2CF=aT#E6N_.9<M,'PN=>?M5o'tr$nFJC4Er-i@dV;P&&&^<+Wd9l#qdaui#rE*1J0dVP7rpW
%(D"kf@`&]?^p.bS.NKW6$M)(Cks4"VB^mbg,p+Jd"U)se3I"[l@#LrL<ri=:*=Ji!+Rjt`34>'Ar)a/h,BHQ[iF0f##/[,PQkQ#i
%>sS/d2.KfY"E[t8K9;(J#a!Rh.2gNp65rhG#YYiX(bHsd79q+AN5/<M.1fOH&TH'm7#P5<@,<lsEgIA?HdV,rT;%/M)]^\c"0H3A
%$k`(jA:_f-N+$a@'b\mF8fSET'%hJKWZ=Dm"%,UQYR:cejGfH<o^$i7&eo;O,X<.YfUn;WS-TFk_h$rZ$40MM.'4*p*f2B"TgXQ%
%J7@-M<Cd6tLIdumKgb.llr%9o8k_p_b6_^5A`]?$$'2HPU]=J:U9-&om'OqBN\_T<!1;r1OqTZZo]e8j[2-dqQ(5Y`A8;Q!-YRkh
%1?AWQ*ehm<OV=WkG>h8Lk^;9BpFC8.;W8kJf<s_aZ#\P*6Fa.HA)K?@m6$O?MV'=R&mD)A/qF7aBV.^_Ar<kNO<Tf0/Q+0i_K%XP
%*":6:3B(Omih/tfSZ#A<e;Rk$!4=Rkg1g9*P*`kY.IjR`8fY;_S6R+*N(8IdmNmm^$/kSQCgO#)"M(K[L8H=FX)u/:pN#?Ab6U]d
%9=Tlnn>V3Q8SQS9;o`AnCXKedU2BO>YtHgm6oq/1c.XM[./UeW/!)a:nV=@2jtI<BG[U`KZ"#.o3-,g$*.6bNrCktgF:'0&&X+I@
%56R3DO,MX^d"bb1`X\m*!,@T7A&4?\Fh;M6ig:M"6u?d"3.@h6TPU2HeiR>UJl(bbPf-lEF.tMlR;aJC)Bn5PcB6.dH%%CVX;hA+
%koN4s2YGgM4`Bc(01F"#P.$eH<A6UJ[4d)q)]-[&jsXn:P:b#Il#m?Nna_O`f#hqkR+f_0#3Q:%:lKFIiP!g<J;nguoV(4plE_>U
%V=UCA9SVr,BI/roZ8C:bG8;u@8.^Dn$`2b9O;K,0PT.ZgHecX`<up2IPGB"io;)0F]\=[ng"^bQS1\*BeW)ETPZ''($'GluN<cZn
%ItV$^`4LO7Q7'WB0S=jok%9.HaWQo4^?of_7(^="&YgJC-"mNdOTbbmC6!>e))@pQ,bl/DJrN6%f0b->?RUktb2BbAZqS>s5rQt3
%.jRZ]78!P;0'*,s.^D,+_Y$H99c5l=`'eC&&/32g`W8HbAVEI5j)8A!$F8;X"HVf$hVApD#!U]h]?_TJA`dsEPX(8ni['BtK/kWA
%Zk?=j<h/<:FA+,EGjqb3L<-.o3pL<3En+`SEf7:ff1&,l+3k3VaE.`N+2fJSk0PQL_p-pKP$-05f3rii_s2'IhS_/qKCC_9=,mp6
%H;G_=a@+`3'IZJ#6lA+4/9DGc81V(MGaFV@e8[E`mbnsVdo-$7?o2*K9k@#oY6BSH%QegcdR8SJeU7WfP@_R(b^FF,[S9er`(?(Z
%8OD\X+=qd]oY`JI5Y@OJ)&1g7!_Cq+3k,7maO[UGg8FaPmC-.Z7Tm6"qqsnhJejK0U0N!NU$lGLiu5m%#Rl48=E-F&0bfIq[X<@`
%iEL.$n$9sQRDY:8RFs_socsL68F4X,MBpVUW)sr&bu)^,ajQ8;]nUm!OLc^"0,hBPU4Gm^gR%-47J'cdhK\nDF:B`o%HJpQ@,uNB
%>e'qQPEs'DPQ'tuVQu8!f.!=pb12-lMO?\m@7G9UE;PLM,/BdQ'@[C;(]Ne@:n9iBo./21`G&J"UpB#_?>A0Yc]>,UF.^21lCQF*
%>hs6_,\^KhTWq.+$DB`X8lWDPn/@P;5Ha;,*/2F4#ic.H3>eE\OO:d8:^aF)SXYUfo,a8?Q&feIS?`$Yd;EifK+p-D$#^q%-g`P)
%lbA`<qk2icSZ'EeS9)UlJ6+fm@=--0'1N;pq;fcHlG0XTI<4l_FS\VZ:)Kp!llqO^5oS6\FYR.M3M\Shc8D8:77O=5F"AtWC9J&*
%BL`8gb1X>ZG&FYGX?h"9\Q_)."p3#mg;kqR:bg7&JiC]B!Orj6JP2AT%Q/"FO-0jg]uflDXA-Si)MV<!?Yi&?[5c9QC.(-18Iak%
%>+Q?d&9mbWg7AVme;V,acjYORj`N]fjGB[B\;:V:I%Nc"/`R-+PTCf*(0m<)1)E+2k8SiL<6UcG$?Q@h@3CP,E:Y"dao#T,r5<]S
%_b@rc(buu[\q$bgY5)Y(lYgI^qWe]g9"X&k@_U`/7Ing2M5u$@g>ZoDOAE*'Y"l>6F>\`H?n0r!9%Eni9:Q^n\;rp^eBX+p'/`bl
%\:&C<H3N<flDTp`NA"R.!>I%[KX>)MH1*`DCgl9g@9rD(,o7'>XW`O*+f8V7LJ%<R-Nb/qXKras^)@ufgW_Q+KgXaF&'0;J_^YJe
%^h`?Wm3TsGR_H\nUAZ+SJ+;.;#XP)pNfbCW6Xtt*)?O:M]o,R-J@*QPe4\4N@b(nl_2"+)M:R7Ne]g/_)JNY[#^tpK3b&kFl7-:r
%S0,S)bVkt#)ZrHalKF+Zgs//'s(=d!WA/la+*N!'Jk$b;;A+pCKC1sE\mAd9I7!2#Rt`.a+FRLV&1r7#JM=*X9p#j>j#[q(2NBjP
%3_Oa.!(+N@JC(.l#7lT'bcI<QVE[B,<J*eB+]Y[u$M<gNE]f@?n]igp7^e&m3gpV>9Ru0f+*p6reN%mY.YN&"d8PiP<q#nV&Jl[(
%-gsBX6pml.'e9e:ndlAX'P?bJL<r2[(Cab?Xoqq3Q-I@CHOTj?;:iBKq+6\?3J3&9BE4p[A_eJW@eYQQUM].ZE<!3R"OZsZoL`<b
%d\,T.Xt_LqCZZ8ZEog9`k"r^9Q$ft*-(Ye">OiVb!57-\CVbo9P[=[sO`%J-OHV&7r@)&Jio,KK1pGYQ3qPG2Gl&U@nH'c$\2gLK
%klYTZ[%EZI1iWQ55etH'EH\6,mt:!ZB2uASr4)TLZ]/leLd0X_O$/"Abt781\g"u0pq>K.=0A_l]LjINnGpg:&=?D+#ZIXoPXR2J
%@WYTU%[nXjZ772V02Yh^Sj`cFCY1P2_f!kW*X<cq)(le_'M<RuiimZr!E(pdPI)#o</Pp8WO`p<*iH&*PbI.J5F=HlZt^D^Hen>J
%7)'%D%s&CbS3'55;*[SgLPcpl/j"MeUSeQ'+4GG<:pP+?BNKn+5f@OV_)rjmTLO!o#sr$;hk7o%8YA-Q<//&/E)WaG>RUTc,of6i
%@!Z1gL*pp.5dKFrrW'g,TT(pm:lWr=MP./iMLpe#7:^?a,kV"._3BT"'So))ecQ(Jr$\U<23,cbio,6Bjjtie3-cqHQ.+(,9NucU
%7jBF"E=gq_EG:<Ym)72*SkD7Yc1#sD)+c!:$]"LmU(^dC+C4KY8eY$\?P6+S%H>ScXA)P7*X=4HS)pnCg\C&qO>t,"jC\+2`]gFM
%1AT+4dfMih5,?lO)@#3-mB7\71^-DVq#3T7e(U2"88^CaNH@PA2<6G5&]EB.>n!$pY"o<*_/q7A*oZ=pKZbPQ<uQ3(dED->K3K(P
%7U"K>X,+n0T])5ef[Sn))I\3cRH-j@_4HH1CH:8M'3)k6cFus@pN0)iIZ@XqpfAN<gElfF$+TUW*KpPi*(<9>'[%LVeOepb2b2ik
%4tqIOZ]5'$\MMr`#qfl?Z-L$P5<<h':#/la.,nf`^Y4sbG"m--mPR9&$E$.7K`bet;6OrA;M9#'lLe4<8(kknl(u^*.WFZrH%g=(
%C-8]'E"4T&,UWc1_E!L,OOPeNX"aGo%@K7*C6N'%W>:#nS1B5!iETq$W?:)L[C[ifRHP7.<?uDD!7UiSkK$C]np=,]L]cisCSU)6
%%Y,P!nd[U@q$s;V2=q&94ON&:H;R_R&`&!/*=a)7IPG0g0Pm!"D:/RjKeRL(1;a7(/#ZJ[6E:a3HA\Ke:H[A&.F-Jd\&7_M#DBt8
%op7YVm.*X4V>En*^f3(q.sd&IaDWf4QT2'UCLf34:]]50"']Zj9AEY9r?Z=_o-Nh3,<!%#S(FRY+;)8?j]R:\-MH<""bajOa/D;5
%)8neN8]5P'VA<+h;'TOEUIOC1/7s=8(o5@qQ=^<[h4*Y^e`=B.iPopu:TqSfHd\T7[@fW5IC&IeK(?FT3aZt`gu\S9g<O9MNnXiW
%qZ(nsfa)O4G+).28M4Ku=U@W\"9uLQ"@4aR8V&M>l\FA)`?rp$OcN9lRGFk,B(K3-lX)8e/)EaW<;Eb6I`0t@8l[I[c>Br*U^HuQ
%Sb7uL:`@/7L9P\2'f"E&P+'N72'Z=q^?CTZcK2a;=Je3$D=9UI6%-6';)`K0Lojrd6CA/%8Fs(qbMq/cLi(@M(:IrL"/\(1k.\br
%)QDRNQRAe.@pE&3T#PA`F"TAn0OBgN+UJ"pZ9I,'YOC60^Ik>6=J`NmZkBS>DC#oQfmpTc^p2NT8I!^71K;SI'UrUTOE.%)Na%j;
%8nM,OQAYCj&"A'Xj<*N*L]R;4[P,r\noh+ZE5g>rk\ET5V6s*L=dEgR]SP`Y;Ae8._0$+tN)'/sg!jnopA%!l&Lp]R8[*Z'0\P-%
%/h-+<O)GSWHeB[gVoD,q/WK""^NWHLkg`oh@Zee:`L$&=:%Ff4KpsbnVbJ=HJk*_-+kFTm9$,6/A*V3aQH/#B+SBddWq%AQ+;"FH
%rC@b->J.V9,L#*pQZ@"/J^.Y(i`.Z#]P;<jqK;qhDQ]M[W"b*F'rJrZ</UHY"F%6jOKMs*Z]i^;c/H/=))la>Yu:8!"*PA/XUpOG
%NpP<aHg-2:NOUjtA2C5k4G%,s82s%NK<dEP-$&PQV^nlLQnH:4!%$8H_Znk"b(0@/kAT3$-F@X1ndKe"]BcB1A9AWn=Y4O1GNkrQ
%C3))`!3'06r,-Y"GG-j/cegP<@/=X%n?'AK9_#N"TNn?dlb2/QFr4H>!El8RBl=BSASB%]M$BmFj54oqo-(!0\_eQI5.BPHndBO_
%dG>65:cMY,TN934BQOA#Uf8pbp+QV?ei5NSJ2@f%9-\=#6tbrd>)Q@M3jSQ8FROFY]g%_)'.T%>g@g),FQK#\[Etph&"V<q+7rl@
%a/;_a[ak%oce47S&erD2Ll+5&*i?YUC.Y3<S\[N(^D*'b0Z8S!2X$sPJ.H;fP?95.h8`&bc&1n.jWsk81R"A]SFp?7;qS8.:N\fP
%ne_InMJs`40b:=mOf9h`6O?)OOA>$^ES8&P8&3"JC+<LWgl>QpdRnTJX`*m5;gP(bmj;N1?-MCWE#$5J7D9Jf[?rujikjN0]=GXB
%S5tX82Xb.\2fXT8#M/51,VH[fm,+#FopWL-o?L)qB6NuCFC`9$h<-d]B;&@X"s/b@&kNIgFqId$6W*IpeJGe,CZlgsrb)jRbco+J
%2WYe*Cbr'c^8(;,87^Bh(,"$H8^!()i%)b1`I.4.B)-8_=1TU+`QTs`Ct@&R/>=;RI_0/%Q\^1-`8WuRe%\!oU^O`]0PPE/:ePdr
%_.T-Ls'V/t9LUV2q?KmYWu2S8RmGq3c?So=lB)u$S:u2\X0Zk2Fsn>0/L@RV54+42'd'L,3<)QTcdoY@:D3]JD0ej*2&WG-:U1q+
%c7!W"<ap1D&'F<SlYI5`QXFK>I3-OKA$^ZVWE5NK=[be$"rkXBAV8u`R8QTAA*AfA*M`rG-nU,15'VFVQu\sk(+A<ILV#"H?83m>
%k%sF4d>>fH+G.s>FaH,+kOlCH3H,>'dX/Z/AjGB_ep6IB(WtDbc=qe16X*6/b_(L\QH/]-l-#H?U*s5B]JmX#WJlIO8l%<tLLn!r
%i82Voo`F!JkM.U5E>LS229Ec`j^RK`#1e$2'SG=GOs;B6N+.UfdGQRPfFU,-02<t8:oYXbQBYit//;cDVA(BqgRL@J"tL*V@rX<$
%\;P^0oTf*S37t"('_f9qKufBS$rMR%B211CLg+g9<Kd.]A`OP4&7phrMJ&tG49._$U[.QD;[bB"P-sHe-\Xc&\sDFle+]4l)0t9W
%-`\t0FpsdU_4>FtM!.FL_U(0TdS)+pb-mb4e!#Z_\E`!D`=$6('e_sN.Q18]<Z]P^@PDq_K[_<I36FeXDK7$<$[B$1r0VUY0ji(P
%N4U.3Lr_-F1unjMd1V"a2-<Jla=0m&K5*,1:3#!d9k))\/Z0H.Z$Z?7a=5[Q7B?B3jqMTfL6<gs.?lt;Fdb;RC/IEa-)Xl2[Pq!s
%+fAEbY)XQs>[[`,[IV+G8hj!)hH2-\?S)`e,;*?J?tm=lSl0C'Wh,d&KL=CHF[isX8f/Gb$dgbf%GK@ahq0X?gYK=o;MkW,l[EAU
%'FT#l7*>sq3^#lH*bOR)N++AJ2SY6aZ)jX*58/oW^m^%3i!IB(=Rkr4Q;F*[d7mCb?3i?\GTlpc7S>bR7RTQth_VpK-)$]D.E;#h
%8/9;bEi5_-L&3F<'<@DYWk/l+=kn<R5u'r!^,OJsm9kt,;spNKm*q&;ibOj,VonS#p5kb4RdL/(]63@#Kd#hc>e,G@!$($MgIH3e
%>so/*Ba?(="b=.(5H]FnJ@"MJA.o(TV;Y@<]Q?_ld*H7;M""Mrmrl2G$1XK0h3Hp.Gu3a#?4U30?@(60o&*GT/5I0<9/.EmR?Ok&
%l@MKL7$t[$r+T&D^obS<*jh8'j7j0@":E;sI>%N)*d>0=/lQ1bJ^&g:I##LZ7PbT2^:WLu=*&bUjBHQjXY1&qfjhNI;Y:PoXV=Wm
%L5ZO9V+`"ap@=@^[LqXjf`1Iu/VDF9EW"kQ-YX1J>^(<'SJ<ekK^iNS(aO\._BMQO``Rg<&G/l[FtoRT<Z9QGm%s=3!#8po'RT=*
%-@q9FB_(RXWt?-XJHImJEcGBDgk9KsH<;4I;MHAW0c/gU7D_l)+jk.GET2BX[PR>^2\Rg>Tt@'h+in2FI4)U>q;I"^OQnY/J2_A@
%cVC8/%JIejKh,!$aHaco7Z^Wun'52*-46!AfsP]0/eEfuFtEF=Y..-GXuD&N$_f1[RC'LVhQ=/"(-jn,8T^qu1ec\/Shs\^\D8:g
%9jn-;1e!)Ro+`[,&;%<cTQqgrE68JMMT\f<8L/Md%N<&S<&6LGZ#2Ks_hfB@G_e*VaPgP@rN8WnaU%);P*!f\*%N1'8"@>$5;=7(
%Z@Q3eY`d;Z+5('>].`=$BeL:VHE>.*XL)RCVGA+//qB`"(]io'W/,d7iJ?6UcRt)4d:0=O56=F[>I_\<&E!fR^c60U>nhc)ZDr%P
%MQTQj&5>VVg?-4]\<7GhYQj,ue\5?ZHSm*nmdk'b'!/S0CdXUaJO=]")_.<n3-6'siL;4^pp\CIBnNmI1didpYL1A%&OU$`T;HVr
%7er)7mT4'7HL5!XnjuCld>M_e3oQ/U,Z'ak>q:<jG%-s(W[1+'"J]f^O2Ui:=H<d"R^"s+q52u6I0Gu!_BBBbh+C?(=pUpGZe.u`
%M@.()47DA`&o7Bpj32)pMI8o,)oI)Z+q!1jb.J49KPut+eq](WXPQRuK_563T?=cIo_L2\D-WU2]#\,Hn*mRpHrTgj8P:NDE&L'E
%I6Em7@:N#<Hd2FT#c^k9d:(f;;D?.iS7&,_Tf[*dN]2#Si;D#nAFIgT2!XS\>2?_*Se5bJhKFg)!QXmqA&ad;%@hRn>1k84Hl3L[
%-"U,#9r0+&'pC3jAX.p&B&%[,?m`D0/0#]nEgtA3!P;;%GDrn++t3$'JV=COMZgn@>kVmJ9D">LZ.T^9,Eg@?/^C,(_c[HnE%S*"
%G<S;FT&8>u(pgjnd6=n)Qk,F=_D6F=1,*2U*.cqW9![UTH]I56TmcS)QDNOUbt,Y2`eS#B=im08oL4=-9J,dqoX=.0:B'AGgp`\h
%HEneEq2DSU-7&\e/Sk!O#s"rP3#"++J8M'n)/jK#H<!k+L27$3D1ls>_:/b@-GE=d`9\#aW@2qD-HrUTHK%9;lYgUKja>0`8>S"N
%<P*4LPb9FQ$8(XAac=9rC-(g">!h]L0\R[GOQNH<28A3kNn^MnOd.W4CZJ!e[NZ"[!OJ\-;M/@]0!pOljE7rt0(qL8a#<A2C6]Sk
%!Mp]g!\g\K_IfO$m!/FDlI%urh(a+t[S^m88sWW.[il(!PCP1'mX[saaQAE3oM?&:LE`Cef\*=QfGGWf-3M^+)q9>A9pSLpk>m"#
%F%Et^&9CWO\!2lMm3-tL[4*/r`0$9)SM''["5sgY@Anog-IF^fVEa$ul*pPN3:2Qcm4SOSQK2Yb_U,lL>F.-q^`?(bpTD,sZj@W1
%LeRogNRNYVWgD.B)](e@[OkYmW,qVt#/Y1BG<6?6W'8eg,9]#;%fos19?>m34oDCN=@bX_1Mt!6c5DPG4[cBq>bDq3^BHr_TNmmW
%nL5g4%Rll'j<]L':*+Y7*mN@kD6@fkPpNHfI_U7)rSKhhr9=17LMsp,rXZ2>IsLdt&"d5!YV4rKbC*%.+h:?;`iNY!G%3!C[#_dS
%G1?PFNieS`f3,M-i7H($8)XN;W<rE_NnI2\l!Qa>TdHZeODD'(DT"(L70&@fl4fbOMEC7sDXc-Rh7`IS#UW1S!ml5YToYD<.gIr/
%pW0hU2IEi)&nh&RPD9DH@Lr1W.,e9uV12C7?8dSW+e4g`ZmFs1/-0&!UpIWEe-$/t]6#o9s1ahG^-\(WAq],GSE-82Di+9kSE-9]
%Don"+Q`E?`q!4uiDuT:sePH4>p;>W\YC:rlnETt!-N23(qnF3/IXLbOo7rBF*^9Po_ge?KdeUb<(Ou;)T7?a-rrV:/A,$~>
%AI9_PrivateDataEnd
